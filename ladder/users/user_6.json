{
    "problemMap": {
        "1741:B": {
            "contestId": 1741,
            "index": "B",
            "name": "Funny Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1741:A": {
            "contestId": 1741,
            "index": "A",
            "name": "Compare T-Shirt Sizes",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "implementation",
                "strings"
            ]
        },
        "102942:D": {
            "contestId": 102942,
            "index": "D",
            "name": "XOR Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103373:D": {
            "contestId": 103373,
            "index": "D",
            "name": "Drunk Passenger",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103373:B": {
            "contestId": 103373,
            "index": "B",
            "name": "Aliquot Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103373:A": {
            "contestId": 103373,
            "index": "A",
            "name": "Olympic Ranking",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103373:J": {
            "contestId": 103373,
            "index": "J",
            "name": "JavaScript",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101853:J": {
            "contestId": 101853,
            "index": "J",
            "name": "Smallest Difference",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101853:F": {
            "contestId": 101853,
            "index": "F",
            "name": "Working Time",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101853:D": {
            "contestId": 101853,
            "index": "D",
            "name": "Balloons",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101853:H": {
            "contestId": 101853,
            "index": "H",
            "name": "Cube",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100733:B": {
            "contestId": 100733,
            "index": "B",
            "name": "Ascencion",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100733:G": {
            "contestId": 100733,
            "index": "G",
            "name": "No Negations",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100733:D": {
            "contestId": 100733,
            "index": "D",
            "name": "Little thief Shi",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100733:E": {
            "contestId": 100733,
            "index": "E",
            "name": "Shi's throne",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1729:A": {
            "contestId": 1729,
            "index": "A",
            "name": "Two Elevators",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "102791:D": {
            "contestId": 102791,
            "index": "D",
            "name": "Barrels",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102791:A": {
            "contestId": 102791,
            "index": "A",
            "name": "Christmas Ornaments",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102267:A": {
            "contestId": 102267,
            "index": "A",
            "name": "Picky Eater",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1722:C": {
            "contestId": 1722,
            "index": "C",
            "name": "Word Game",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1722:A": {
            "contestId": 1722,
            "index": "A",
            "name": "Spell Check",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1722:B": {
            "contestId": 1722,
            "index": "B",
            "name": "Colourblindness",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "101028:E": {
            "contestId": 101028,
            "index": "E",
            "name": "Teams",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101028:D": {
            "contestId": 101028,
            "index": "D",
            "name": "X and paintings",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101028:B": {
            "contestId": 101028,
            "index": "B",
            "name": "Bonapity",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101028:A": {
            "contestId": 101028,
            "index": "A",
            "name": "Codeforces Rating",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101875:L": {
            "contestId": 101875,
            "index": "L",
            "name": "PC is for kicking",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1692:C": {
            "contestId": 1692,
            "index": "C",
            "name": "Where's the Bishop?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1692:A": {
            "contestId": 1692,
            "index": "A",
            "name": "Marathon",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1585:A": {
            "contestId": 1585,
            "index": "A",
            "name": "Life of a Flower",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1670:A": {
            "contestId": 1670,
            "index": "A",
            "name": "Prof. Slim",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1674:A": {
            "contestId": 1674,
            "index": "A",
            "name": "Number Transformation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1675:A": {
            "contestId": 1675,
            "index": "A",
            "name": "Food for Animals",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1669:B": {
            "contestId": 1669,
            "index": "B",
            "name": "Triple",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1676:A": {
            "contestId": 1676,
            "index": "A",
            "name": "Lucky?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1676:B": {
            "contestId": 1676,
            "index": "B",
            "name": "Equal Candies",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1607:A": {
            "contestId": 1607,
            "index": "A",
            "name": "Linear Keyboard",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1660:B": {
            "contestId": 1660,
            "index": "B",
            "name": "Vlad and Candies",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1660:A": {
            "contestId": 1660,
            "index": "A",
            "name": "Vasya and Coins",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1658:A": {
            "contestId": 1658,
            "index": "A",
            "name": "Marin and Photoshoot",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1657:B": {
            "contestId": 1657,
            "index": "B",
            "name": "XY Sequence",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1657:A": {
            "contestId": 1657,
            "index": "A",
            "name": "Integer Moves",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1654:A": {
            "contestId": 1654,
            "index": "A",
            "name": "Maximum Cake Tastiness",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1646:A": {
            "contestId": 1646,
            "index": "A",
            "name": "Square Counting",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1623:A": {
            "contestId": 1623,
            "index": "A",
            "name": "Robot Cleaner",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1629:A": {
            "contestId": 1629,
            "index": "A",
            "name": "Download More RAM",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1335:A": {
            "contestId": 1335,
            "index": "A",
            "name": "Candies and Two Sisters",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1624:A": {
            "contestId": 1624,
            "index": "A",
            "name": "Plus One on the Subset",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "791:A": {
            "contestId": 791,
            "index": "A",
            "name": "Bear and Big Brother",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "266:A": {
            "contestId": 266,
            "index": "A",
            "name": "Stones on the Table",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1644:A": {
            "contestId": 1644,
            "index": "A",
            "name": "Doors and Keys",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1633:B": {
            "contestId": 1633,
            "index": "B",
            "name": "Minority",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1638:A": {
            "contestId": 1638,
            "index": "A",
            "name": "Reverse",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "550:A": {
            "contestId": 550,
            "index": "A",
            "name": "Two Substrings",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "486:C": {
            "contestId": 486,
            "index": "C",
            "name": "Palindrome Transformation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "431:C": {
            "contestId": 431,
            "index": "C",
            "name": "k-Tree",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "dp",
                "implementation",
                "trees"
            ]
        },
        "268:C": {
            "contestId": 268,
            "index": "C",
            "name": "Beautiful Sets of Points",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "478:C": {
            "contestId": 478,
            "index": "C",
            "name": "Table Decorations",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "greedy"
            ]
        },
        "1741:D": {
            "contestId": 1741,
            "index": "D",
            "name": "Masha and a Beautiful Tree",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "graphs",
                "sortings",
                "trees"
            ]
        },
        "1367:C": {
            "contestId": 1367,
            "index": "C",
            "name": "Social Distance",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "385:A": {
            "contestId": 385,
            "index": "A",
            "name": "Bear and Raspberry",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1360:C": {
            "contestId": 1360,
            "index": "C",
            "name": "Similar Pairs",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "graph matchings",
                "greedy",
                "sortings"
            ]
        },
        "862:B": {
            "contestId": 862,
            "index": "B",
            "name": "Mahmoud and Ehab and the bipartiteness",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "1788:B": {
            "contestId": 1788,
            "index": "B",
            "name": "Sum of Two Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "probabilities"
            ]
        },
        "1788:A": {
            "contestId": 1788,
            "index": "A",
            "name": "One and Two",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "158:B": {
            "contestId": 158,
            "index": "B",
            "name": "Taxi",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "*special",
                "greedy",
                "implementation"
            ]
        },
        "1025:C": {
            "contestId": 1025,
            "index": "C",
            "name": "Plasticine zebra",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1037:C": {
            "contestId": 1037,
            "index": "C",
            "name": "Equalize",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "strings"
            ]
        },
        "1786:C": {
            "contestId": 1786,
            "index": "C",
            "name": "Monsters (easy version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1786:A2": {
            "contestId": 1786,
            "index": "A2",
            "name": "Alternating Deck (hard version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1786:A1": {
            "contestId": 1786,
            "index": "A1",
            "name": "Non-alternating Deck (easy version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1791:E": {
            "contestId": 1791,
            "index": "E",
            "name": "Negatives and Positives",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1791:G1": {
            "contestId": 1791,
            "index": "G1",
            "name": "Teleporters (Easy Version)",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1791:D": {
            "contestId": 1791,
            "index": "D",
            "name": "Distinct Split",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "strings"
            ]
        },
        "1791:C": {
            "contestId": 1791,
            "index": "C",
            "name": "Prepend and Append",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "two pointers"
            ]
        },
        "1791:B": {
            "contestId": 1791,
            "index": "B",
            "name": "Following Directions",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        "1791:A": {
            "contestId": 1791,
            "index": "A",
            "name": "Codeforces Checking",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1474:B": {
            "contestId": 1474,
            "index": "B",
            "name": "Different Divisors",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1469:A": {
            "contestId": 1469,
            "index": "A",
            "name": "Regular Bracket Sequence",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "766:B": {
            "contestId": 766,
            "index": "B",
            "name": "Mahmoud and a Triangle",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "geometry",
                "greedy",
                "math",
                "number theory",
                "sortings"
            ]
        },
        "1778:B": {
            "contestId": 1778,
            "index": "B",
            "name": "The Forbidden Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1778:A": {
            "contestId": 1778,
            "index": "A",
            "name": "Flip Flop Sum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1520:B": {
            "contestId": 1520,
            "index": "B",
            "name": "Ordinary Numbers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1557:A": {
            "contestId": 1557,
            "index": "A",
            "name": "Ezzat and Two Subsequences",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "math",
                "sortings"
            ]
        },
        "264:A": {
            "contestId": 264,
            "index": "A",
            "name": "Escape from Stones",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "implementation",
                "two pointers"
            ]
        },
        "20:B": {
            "contestId": 20,
            "index": "B",
            "name": "Equation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        "20:A": {
            "contestId": 20,
            "index": "A",
            "name": "BerOS file system",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1700,
            "tags": [
                "implementation"
            ]
        },
        "1487:B": {
            "contestId": 1487,
            "index": "B",
            "name": "Cat Cycle",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "514:A": {
            "contestId": 514,
            "index": "A",
            "name": "Chewbaсca and Number",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "478:B": {
            "contestId": 478,
            "index": "B",
            "name": "Random Teams",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "276:B": {
            "contestId": 276,
            "index": "B",
            "name": "Little Girl and Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "games",
                "greedy"
            ]
        },
        "508:B": {
            "contestId": 508,
            "index": "B",
            "name": "Anton and currency you all know",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "math",
                "strings"
            ]
        },
        "447:B": {
            "contestId": 447,
            "index": "B",
            "name": "DZY Loves Strings",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "507:B": {
            "contestId": 507,
            "index": "B",
            "name": "Amr and Pins",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "393:B": {
            "contestId": 393,
            "index": "B",
            "name": "Three matrices",
            "type": "PROGRAMMING",
            "points": 1000,
            "tags": []
        },
        "339:B": {
            "contestId": 339,
            "index": "B",
            "name": "Xenia and Ringroad",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "475:D": {
            "contestId": 475,
            "index": "D",
            "name": "CGCDSSQ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "data structures",
                "math"
            ]
        },
        "872:B": {
            "contestId": 872,
            "index": "B",
            "name": "Maximum of Maximums of Minimums",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "388:A": {
            "contestId": 388,
            "index": "A",
            "name": "Fox and Box Accumulation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1777:B": {
            "contestId": 1777,
            "index": "B",
            "name": "Emordnilap",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "combinatorics",
                "greedy",
                "math"
            ]
        },
        "1777:A": {
            "contestId": 1777,
            "index": "A",
            "name": "Everybody Likes Good Arrays!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "455:A": {
            "contestId": 455,
            "index": "A",
            "name": "Boredom",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "dp"
            ]
        },
        "401:C": {
            "contestId": 401,
            "index": "C",
            "name": "Team",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "466:C": {
            "contestId": 466,
            "index": "C",
            "name": "Number of Ways",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        "9:C": {
            "contestId": 9,
            "index": "C",
            "name": "Hexadecimal's Numbers",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "490:C": {
            "contestId": 490,
            "index": "C",
            "name": "Hacking Cypher",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "brute force",
                "math",
                "number theory",
                "strings"
            ]
        },
        "706:B": {
            "contestId": 706,
            "index": "B",
            "name": "Interesting drink",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "binary search",
                "dp",
                "implementation"
            ]
        },
        "1560:D": {
            "contestId": 1560,
            "index": "D",
            "name": "Make a Power of Two",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "math",
                "strings"
            ]
        },
        "1097:B": {
            "contestId": 1097,
            "index": "B",
            "name": "Petr and a Combination Lock",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "bitmasks",
                "brute force",
                "dp"
            ]
        },
        "1178:B": {
            "contestId": 1178,
            "index": "B",
            "name": "WOW Factor",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "dp",
                "strings"
            ]
        },
        "894:A": {
            "contestId": 894,
            "index": "A",
            "name": "QAQ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "282:B": {
            "contestId": 282,
            "index": "B",
            "name": "Painting Eggs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1555:C": {
            "contestId": 1555,
            "index": "C",
            "name": "Coin Rows",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "implementation"
            ]
        },
        "1538:C": {
            "contestId": 1538,
            "index": "C",
            "name": "Number of Pairs",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "data structures",
                "math",
                "two pointers"
            ]
        },
        "1735:C": {
            "contestId": 1735,
            "index": "C",
            "name": "Phase Shift",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1042:B": {
            "contestId": 1042,
            "index": "B",
            "name": "Vitamins",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "implementation"
            ]
        },
        "839:C": {
            "contestId": 839,
            "index": "C",
            "name": "Journey",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "probabilities",
                "trees"
            ]
        },
        "276:D": {
            "contestId": 276,
            "index": "D",
            "name": "Little Girl and Maximum XOR",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "dp",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1420:B": {
            "contestId": 1420,
            "index": "B",
            "name": "Rock and Lever",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "bitmasks",
                "math"
            ]
        },
        "1514:B": {
            "contestId": 1514,
            "index": "B",
            "name": "AND 0, Sum Big",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "bitmasks",
                "combinatorics",
                "math"
            ]
        },
        "1559:A": {
            "contestId": 1559,
            "index": "A",
            "name": "Mocha and Math",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        "805:B": {
            "contestId": 805,
            "index": "B",
            "name": "3-palindrome",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "844:B": {
            "contestId": 844,
            "index": "B",
            "name": "Rectangles",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1182:A": {
            "contestId": 1182,
            "index": "A",
            "name": "Filling Shapes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "dp",
                "math"
            ]
        },
        "1661:B": {
            "contestId": 1661,
            "index": "B",
            "name": "Getting Zero",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "912:B": {
            "contestId": 912,
            "index": "B",
            "name": "New Year's Eve",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "number theory"
            ]
        },
        "1765:E": {
            "contestId": 1765,
            "index": "E",
            "name": "Exchange",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1758:A": {
            "contestId": 1758,
            "index": "A",
            "name": "SSeeeeiinngg DDoouubbllee",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "579:A": {
            "contestId": 579,
            "index": "A",
            "name": "Raising Bacteria",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 1000,
            "tags": [
                "bitmasks"
            ]
        },
        "281:A": {
            "contestId": 281,
            "index": "A",
            "name": "Word Capitalization",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1237:A": {
            "contestId": 1237,
            "index": "A",
            "name": "Balanced Rating Changes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1204:A": {
            "contestId": 1204,
            "index": "A",
            "name": "BowWow and the Timetable",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "298:A": {
            "contestId": 298,
            "index": "A",
            "name": "Snow Footprints",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "287:A": {
            "contestId": 287,
            "index": "A",
            "name": "IQ Test",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "699:A": {
            "contestId": 699,
            "index": "A",
            "name": "Launch of Collider",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "143:A": {
            "contestId": 143,
            "index": "A",
            "name": "Help Vasilisa the Wise 2",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "682:A": {
            "contestId": 682,
            "index": "A",
            "name": "Alyona and Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "365:A": {
            "contestId": 365,
            "index": "A",
            "name": "Good Number",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "483:A": {
            "contestId": 483,
            "index": "A",
            "name": "Counterexample ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "80:A": {
            "contestId": 80,
            "index": "A",
            "name": "Panoramix's Prediction",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "785:A": {
            "contestId": 785,
            "index": "A",
            "name": "Anton and Polyhedrons",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1:A": {
            "contestId": 1,
            "index": "A",
            "name": "Theatre Square",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "486:A": {
            "contestId": 486,
            "index": "A",
            "name": "Calculating Function",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "742:A": {
            "contestId": 742,
            "index": "A",
            "name": "Arpa’s hard exam and Mehrdad’s naive cheat",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        "404:A": {
            "contestId": 404,
            "index": "A",
            "name": "Valera and X",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "208:A": {
            "contestId": 208,
            "index": "A",
            "name": "Dubstep",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "strings"
            ]
        },
        "707:A": {
            "contestId": 707,
            "index": "A",
            "name": "Brain's Photos",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "43:A": {
            "contestId": 43,
            "index": "A",
            "name": "Football",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "strings"
            ]
        },
        "807:A": {
            "contestId": 807,
            "index": "A",
            "name": "Is it rated?",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "469:A": {
            "contestId": 469,
            "index": "A",
            "name": "I Wanna Be the Guy",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "318:A": {
            "contestId": 318,
            "index": "A",
            "name": "Even Odds",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "474:A": {
            "contestId": 474,
            "index": "A",
            "name": "Keyboard",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "160:A": {
            "contestId": 160,
            "index": "A",
            "name": "Twins",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "520:A": {
            "contestId": 520,
            "index": "A",
            "name": "Pangram",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "768:A": {
            "contestId": 768,
            "index": "A",
            "name": "Oath of the Night's Watch",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "767:A": {
            "contestId": 767,
            "index": "A",
            "name": "Snacktower",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "766:A": {
            "contestId": 766,
            "index": "A",
            "name": "Mahmoud and Longest Uncommon Subsequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "567:A": {
            "contestId": 567,
            "index": "A",
            "name": "Lineland Mail",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "136:A": {
            "contestId": 136,
            "index": "A",
            "name": "Presents",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "799:A": {
            "contestId": 799,
            "index": "A",
            "name": "Carrot Cakes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "770:A": {
            "contestId": 770,
            "index": "A",
            "name": "New Password",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "490:A": {
            "contestId": 490,
            "index": "A",
            "name": "Team Olympiad",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "339:A": {
            "contestId": 339,
            "index": "A",
            "name": "Helpful Maths",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "686:A": {
            "contestId": 686,
            "index": "A",
            "name": "Free Ice Cream",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "71:A": {
            "contestId": 71,
            "index": "A",
            "name": "Way Too Long Words",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "strings"
            ]
        },
        "443:A": {
            "contestId": 443,
            "index": "A",
            "name": "Anton and Letters",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "709:A": {
            "contestId": 709,
            "index": "A",
            "name": "Juicer",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "294:A": {
            "contestId": 294,
            "index": "A",
            "name": "Shaass and Oskols",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "9:A": {
            "contestId": 9,
            "index": "A",
            "name": "Die Roll",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math",
                "probabilities"
            ]
        },
        "265:A": {
            "contestId": 265,
            "index": "A",
            "name": "Colorful Stones (Simplified Edition)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "228:A": {
            "contestId": 228,
            "index": "A",
            "name": "Is your horseshoe on the other hoof?",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "732:A": {
            "contestId": 732,
            "index": "A",
            "name": "Buy a Shovel",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "268:A": {
            "contestId": 268,
            "index": "A",
            "name": "Games",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "731:A": {
            "contestId": 731,
            "index": "A",
            "name": "Night at the Museum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "431:A": {
            "contestId": 431,
            "index": "A",
            "name": "Black Square",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "427:A": {
            "contestId": 427,
            "index": "A",
            "name": "Police Recruits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "381:A": {
            "contestId": 381,
            "index": "A",
            "name": "Sereja and Dima",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "344:A": {
            "contestId": 344,
            "index": "A",
            "name": "Magnets",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "59:A": {
            "contestId": 59,
            "index": "A",
            "name": "Word",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "236:A": {
            "contestId": 236,
            "index": "A",
            "name": "Boy or Girl",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "112:A": {
            "contestId": 112,
            "index": "A",
            "name": "Petya and Strings",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "405:A": {
            "contestId": 405,
            "index": "A",
            "name": "Gravity Flip",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "263:A": {
            "contestId": 263,
            "index": "A",
            "name": "Beautiful Matrix",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "231:A": {
            "contestId": 231,
            "index": "A",
            "name": "Team",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "734:A": {
            "contestId": 734,
            "index": "A",
            "name": "Anton and Danik",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1721:A": {
            "contestId": 1721,
            "index": "A",
            "name": "Image",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "677:A": {
            "contestId": 677,
            "index": "A",
            "name": "Vanya and Fence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1592:A": {
            "contestId": 1592,
            "index": "A",
            "name": "Gamer Hemose",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1691:A": {
            "contestId": 1691,
            "index": "A",
            "name": "Beat The Odds",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1681:B": {
            "contestId": 1681,
            "index": "B",
            "name": "Card Trick",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1681:A": {
            "contestId": 1681,
            "index": "A",
            "name": "Game with Cards",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "games",
                "greedy"
            ]
        },
        "1680:B": {
            "contestId": 1680,
            "index": "B",
            "name": "Robots",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1680:A": {
            "contestId": 1680,
            "index": "A",
            "name": "Minimums and Maximums",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1676:E": {
            "contestId": 1676,
            "index": "E",
            "name": "Eating Queries",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1676:D": {
            "contestId": 1676,
            "index": "D",
            "name": "X-Sum",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1676:C": {
            "contestId": 1676,
            "index": "C",
            "name": "Most Similar Words",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "implementation",
                "math",
                "strings"
            ]
        },
        "1678:A": {
            "contestId": 1678,
            "index": "A",
            "name": "Tokitsukaze and All Zero Sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1651:A": {
            "contestId": 1651,
            "index": "A",
            "name": "Playoff",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1665:A": {
            "contestId": 1665,
            "index": "A",
            "name": "GCD vs LCM",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1674:B": {
            "contestId": 1674,
            "index": "B",
            "name": "Dictionary",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1633:A": {
            "contestId": 1633,
            "index": "A",
            "name": "Div. 7",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "1673:A": {
            "contestId": 1673,
            "index": "A",
            "name": "Subtle Substring Subtraction",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "games",
                "greedy",
                "strings"
            ]
        },
        "1611:B": {
            "contestId": 1611,
            "index": "B",
            "name": "Team Composition: Programmers and Mathematicians",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        "1669:F": {
            "contestId": 1669,
            "index": "F",
            "name": "Eating Candies",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        "1646:B": {
            "contestId": 1646,
            "index": "B",
            "name": "Quality vs Quantity",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "1621:A": {
            "contestId": 1621,
            "index": "A",
            "name": "Stable Arrangement of Rooks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1614:A": {
            "contestId": 1614,
            "index": "A",
            "name": "Divan and a Store",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1611:A": {
            "contestId": 1611,
            "index": "A",
            "name": "Make Even",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1627:A": {
            "contestId": 1627,
            "index": "A",
            "name": "Not Shading",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1626:A": {
            "contestId": 1626,
            "index": "A",
            "name": "Equidistant Letters",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1613:A": {
            "contestId": 1613,
            "index": "A",
            "name": "Long Comparison",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1671:B": {
            "contestId": 1671,
            "index": "B",
            "name": "Consecutive Points Segment",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "math",
                "sortings"
            ]
        },
        "1671:A": {
            "contestId": 1671,
            "index": "A",
            "name": "String Building",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "746:B": {
            "contestId": 746,
            "index": "B",
            "name": "Decoding",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1669:C": {
            "contestId": 1669,
            "index": "C",
            "name": "Odd/Even Increments",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1669:A": {
            "contestId": 1669,
            "index": "A",
            "name": "Division?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1567:A": {
            "contestId": 1567,
            "index": "A",
            "name": "Domino Disaster",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1555:A": {
            "contestId": 1555,
            "index": "A",
            "name": "PizzaForces",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1560:B": {
            "contestId": 1560,
            "index": "B",
            "name": "Who's Opposite?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1616:A": {
            "contestId": 1616,
            "index": "A",
            "name": "Integer Diversity",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1622:A": {
            "contestId": 1622,
            "index": "A",
            "name": "Construct a Rectangle",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "1529:A": {
            "contestId": 1529,
            "index": "A",
            "name": "Eshag Loves Big Arrays",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1579:A": {
            "contestId": 1579,
            "index": "A",
            "name": "Casimir's String Solitaire",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math",
                "strings"
            ]
        },
        "501:A": {
            "contestId": 501,
            "index": "A",
            "name": "Contest",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1005:B": {
            "contestId": 1005,
            "index": "B",
            "name": "Delete from the Left",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1551:B1": {
            "contestId": 1551,
            "index": "B1",
            "name": "Wonderful Coloring - 1",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1538:A": {
            "contestId": 1538,
            "index": "A",
            "name": "Stone Game",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1399:A": {
            "contestId": 1399,
            "index": "A",
            "name": "Remove Smallest",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1553:A": {
            "contestId": 1553,
            "index": "A",
            "name": "Digits Sum",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1549:A": {
            "contestId": 1549,
            "index": "A",
            "name": "Gregor and Cryptography",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1541:A": {
            "contestId": 1541,
            "index": "A",
            "name": "Pretty Permutations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1554:A": {
            "contestId": 1554,
            "index": "A",
            "name": "Cherry",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1512:A": {
            "contestId": 1512,
            "index": "A",
            "name": "Spy Detected!",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1535:A": {
            "contestId": 1535,
            "index": "A",
            "name": "Fair Playoff",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1537:A": {
            "contestId": 1537,
            "index": "A",
            "name": "Arithmetic Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1542:A": {
            "contestId": 1542,
            "index": "A",
            "name": "Odd Set",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "118:A": {
            "contestId": 118,
            "index": "A",
            "name": "String Task",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "69:A": {
            "contestId": 69,
            "index": "A",
            "name": "Young Physicist",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1030:A": {
            "contestId": 1030,
            "index": "A",
            "name": "In Search of an Easy Problem",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "41:A": {
            "contestId": 41,
            "index": "A",
            "name": "Translation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "110:A": {
            "contestId": 110,
            "index": "A",
            "name": "Nearly Lucky Number",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "116:A": {
            "contestId": 116,
            "index": "A",
            "name": "Tram",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "977:A": {
            "contestId": 977,
            "index": "A",
            "name": "Wrong Subtraction",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "617:A": {
            "contestId": 617,
            "index": "A",
            "name": "Elephant",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1593:A": {
            "contestId": 1593,
            "index": "A",
            "name": "Elections",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1551:A": {
            "contestId": 1551,
            "index": "A",
            "name": "Polycarp and Coins",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1560:A": {
            "contestId": 1560,
            "index": "A",
            "name": "Dislike of Threes",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "148:A": {
            "contestId": 148,
            "index": "A",
            "name": "Insomnia cure",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "266:B": {
            "contestId": 266,
            "index": "B",
            "name": "Queue at the School",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "graph matchings",
                "implementation",
                "shortest paths"
            ]
        },
        "546:A": {
            "contestId": 546,
            "index": "A",
            "name": "Soldier and Bananas",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1650:A": {
            "contestId": 1650,
            "index": "A",
            "name": "Deletions of Two Adjacent Letters",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "282:A": {
            "contestId": 282,
            "index": "A",
            "name": "Bit++",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "50:A": {
            "contestId": 50,
            "index": "A",
            "name": "Domino piling",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "158:A": {
            "contestId": 158,
            "index": "A",
            "name": "Next Round",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "4:A": {
            "contestId": 4,
            "index": "A",
            "name": "Watermelon",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1475:B": {
            "contestId": 1475,
            "index": "B",
            "name": "New Year's Number",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "dp",
                "math"
            ]
        },
        "489:B": {
            "contestId": 489,
            "index": "B",
            "name": "BerSU Ball",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "dfs and similar",
                "dp",
                "graph matchings",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "379:A": {
            "contestId": 379,
            "index": "A",
            "name": "New Year Candles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1343:A": {
            "contestId": 1343,
            "index": "A",
            "name": "Candies",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1475:A": {
            "contestId": 1475,
            "index": "A",
            "name": "Odd Divisor",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "500:A": {
            "contestId": 500,
            "index": "A",
            "name": "New Year Transportation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "189:A": {
            "contestId": 189,
            "index": "A",
            "name": "Cut Ribbon",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "313:A": {
            "contestId": 313,
            "index": "A",
            "name": "Ilya and Bank Account",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "number theory"
            ]
        },
        "466:A": {
            "contestId": 466,
            "index": "A",
            "name": "Cheap Travel",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "451:A": {
            "contestId": 451,
            "index": "A",
            "name": "Game With Sticks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "230:B": {
            "contestId": 230,
            "index": "B",
            "name": "T-primes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "binary search",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "4:C": {
            "contestId": 4,
            "index": "C",
            "name": "Registration System",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "data structures",
                "hashing",
                "implementation"
            ]
        },
        "230:A": {
            "contestId": 230,
            "index": "A",
            "name": "Dragons",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "492:B": {
            "contestId": 492,
            "index": "B",
            "name": "Vanya and Lanterns",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "binary search",
                "implementation",
                "math",
                "sortings"
            ]
        },
        "337:A": {
            "contestId": 337,
            "index": "A",
            "name": "Puzzles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "25:A": {
            "contestId": 25,
            "index": "A",
            "name": "IQ test",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force"
            ]
        },
        "131:A": {
            "contestId": 131,
            "index": "A",
            "name": "cAPS lOCK",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "580:A": {
            "contestId": 580,
            "index": "A",
            "name": "Kefa and First Steps",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        "479:A": {
            "contestId": 479,
            "index": "A",
            "name": "Expression",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "122:A": {
            "contestId": 122,
            "index": "A",
            "name": "Lucky Division",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "number theory"
            ]
        },
        "58:A": {
            "contestId": 58,
            "index": "A",
            "name": "Chat room",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "133:A": {
            "contestId": 133,
            "index": "A",
            "name": "HQ9+",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "96:A": {
            "contestId": 96,
            "index": "A",
            "name": "Football",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "34:B": {
            "contestId": 34,
            "index": "B",
            "name": "Sale",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1730:A": {
            "contestId": 1730,
            "index": "A",
            "name": "Planets",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1734:A": {
            "contestId": 1734,
            "index": "A",
            "name": "Select Three Sticks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1729:B": {
            "contestId": 1729,
            "index": "B",
            "name": "Decode String",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1728:B": {
            "contestId": 1728,
            "index": "B",
            "name": "Best Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1728:A": {
            "contestId": 1728,
            "index": "A",
            "name": "Colored Balls: Revisited",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1719:A": {
            "contestId": 1719,
            "index": "A",
            "name": "Chip Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "games",
                "math"
            ]
        },
        "1720:C": {
            "contestId": 1720,
            "index": "C",
            "name": "Corners",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1720:B": {
            "contestId": 1720,
            "index": "B",
            "name": "Interesting Sum",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1720:A": {
            "contestId": 1720,
            "index": "A",
            "name": "Burenka Plays with Fractions",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1715:A": {
            "contestId": 1715,
            "index": "A",
            "name": "Crossmarket",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1721:B": {
            "contestId": 1721,
            "index": "B",
            "name": "Deadly Laser",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1712:A": {
            "contestId": 1712,
            "index": "A",
            "name": "Wonderful Permutation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1713:A": {
            "contestId": 1713,
            "index": "A",
            "name": "Traveling Salesman Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry",
                "greedy",
                "implementation"
            ]
        },
        "1698:A": {
            "contestId": 1698,
            "index": "A",
            "name": "XOR Mixup",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 800,
            "tags": [
                "bitmasks",
                "brute force"
            ]
        },
        "1702:B": {
            "contestId": 1702,
            "index": "B",
            "name": "Polycarp Writes a String from Memory",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1716:B": {
            "contestId": 1716,
            "index": "B",
            "name": "Permutation Chain",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1716:A": {
            "contestId": 1716,
            "index": "A",
            "name": "2-3 Moves",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1714:B": {
            "contestId": 1714,
            "index": "B",
            "name": "Remove Prefix",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1706:A": {
            "contestId": 1706,
            "index": "A",
            "name": "Another String Minimization Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "2-sat",
                "constructive algorithms",
                "greedy",
                "string suffix structures",
                "strings"
            ]
        },
        "1705:A": {
            "contestId": 1705,
            "index": "A",
            "name": "Mark the Photographer",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1711:A": {
            "contestId": 1711,
            "index": "A",
            "name": "Perfect Permutation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1708:A": {
            "contestId": 1708,
            "index": "A",
            "name": "Difference Operations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1714:A": {
            "contestId": 1714,
            "index": "A",
            "name": "Everyone Loves to Sleep",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1709:A": {
            "contestId": 1709,
            "index": "A",
            "name": "Three Doors",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1703:C": {
            "contestId": 1703,
            "index": "C",
            "name": "Cypher",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1703:B": {
            "contestId": 1703,
            "index": "B",
            "name": "ICPC Balloons",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1703:A": {
            "contestId": 1703,
            "index": "A",
            "name": "YES or YES?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1702:A": {
            "contestId": 1702,
            "index": "A",
            "name": "Round Down the Price",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1701:B": {
            "contestId": 1701,
            "index": "B",
            "name": "Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1701:A": {
            "contestId": 1701,
            "index": "A",
            "name": "Grass Field",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1699:A": {
            "contestId": 1699,
            "index": "A",
            "name": "The Third Three Number Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1686:A": {
            "contestId": 1686,
            "index": "A",
            "name": "Everything Everywhere All But One",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1690:C": {
            "contestId": 1690,
            "index": "C",
            "name": "Restoring the Duration of Tasks",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1690:B": {
            "contestId": 1690,
            "index": "B",
            "name": "Array Decrements",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1697:A": {
            "contestId": 1697,
            "index": "A",
            "name": "Parkway Walk",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1690:A": {
            "contestId": 1690,
            "index": "A",
            "name": "Print a Pedestal (Codeforces logo?)",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1692:B": {
            "contestId": 1692,
            "index": "B",
            "name": "All Distinct",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1793:A": {
            "contestId": 1793,
            "index": "A",
            "name": "Yet Another Promotion",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "489:C": {
            "contestId": 489,
            "index": "C",
            "name": "Given Length and Sum of Digits...",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1374:C": {
            "contestId": 1374,
            "index": "C",
            "name": "Move Brackets",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1722:D": {
            "contestId": 1722,
            "index": "D",
            "name": "Line",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1614:B": {
            "contestId": 1614,
            "index": "B",
            "name": "Divan and a New Project ",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1598:B": {
            "contestId": 1598,
            "index": "B",
            "name": "Groups",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1476:A": {
            "contestId": 1476,
            "index": "A",
            "name": "K-divisible Sum",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1101:A": {
            "contestId": 1101,
            "index": "A",
            "name": "Minimum Integer",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1744:D": {
            "contestId": 1744,
            "index": "D",
            "name": "Divisibility by 2^n",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1409:B": {
            "contestId": 1409,
            "index": "B",
            "name": "Minimum Product",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1675:B": {
            "contestId": 1675,
            "index": "B",
            "name": "Make It Increasing",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1692:D": {
            "contestId": 1692,
            "index": "D",
            "name": "The Clock",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1739:B": {
            "contestId": 1739,
            "index": "B",
            "name": "Array Recovery",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "363:B": {
            "contestId": 363,
            "index": "B",
            "name": "Fence",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "1787:B": {
            "contestId": 1787,
            "index": "B",
            "name": "Number Factorization",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1787:A": {
            "contestId": 1787,
            "index": "A",
            "name": "Exponential Equation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1762:B": {
            "contestId": 1762,
            "index": "B",
            "name": "Make Array Good",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "number theory",
                "sortings"
            ]
        },
        "1704:B": {
            "contestId": 1704,
            "index": "B",
            "name": "Luke is a Foodie",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1790:A": {
            "contestId": 1790,
            "index": "A",
            "name": "Polycarp and the Day of Pi",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math",
                "strings"
            ]
        },
        "1790:B": {
            "contestId": 1790,
            "index": "B",
            "name": "Taisia and Dice",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "greedy",
                "math"
            ]
        },
        "1790:C": {
            "contestId": 1790,
            "index": "C",
            "name": "Premutation",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1780:B": {
            "contestId": 1780,
            "index": "B",
            "name": "GCD Partition",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1780:A": {
            "contestId": 1780,
            "index": "A",
            "name": "Hayato and School",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1339:B": {
            "contestId": 1339,
            "index": "B",
            "name": "Sorted Adjacent Differences",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1792:B": {
            "contestId": 1792,
            "index": "B",
            "name": "Stand-up Comedian",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1792:A": {
            "contestId": 1792,
            "index": "A",
            "name": "GamingForces",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1541:B": {
            "contestId": 1541,
            "index": "B",
            "name": "Pleasant Pairs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1504:B": {
            "contestId": 1504,
            "index": "B",
            "name": "Flip the Bits",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "451:B": {
            "contestId": 451,
            "index": "B",
            "name": "Sort the Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "454:B": {
            "contestId": 454,
            "index": "B",
            "name": "Little Pony and Sort by Shift",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1355:B": {
            "contestId": 1355,
            "index": "B",
            "name": "Young Explorers",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1399:C": {
            "contestId": 1399,
            "index": "C",
            "name": "Boats Competition",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "two pointers"
            ]
        },
        "1679:B": {
            "contestId": 1679,
            "index": "B",
            "name": "Stone Age Problem",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1694:B": {
            "contestId": 1694,
            "index": "B",
            "name": "Paranoid String",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1734:C": {
            "contestId": 1734,
            "index": "C",
            "name": "Removing Smallest Multiples",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1736:B": {
            "contestId": 1736,
            "index": "B",
            "name": "Playing with GCD",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1738:B": {
            "contestId": 1738,
            "index": "B",
            "name": "Prefix Sum Addicts",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1385:C": {
            "contestId": 1385,
            "index": "C",
            "name": "Make It Good",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "1739:A": {
            "contestId": 1739,
            "index": "A",
            "name": "Immobile Knight",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "433:B": {
            "contestId": 433,
            "index": "B",
            "name": "Kuriyama Mirai's Stones",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "dp",
                "implementation",
                "sortings"
            ]
        },
        "1352:B": {
            "contestId": 1352,
            "index": "B",
            "name": "Same Parity Summands",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1782:B": {
            "contestId": 1782,
            "index": "B",
            "name": "Going to the Cinema",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1782:A": {
            "contestId": 1782,
            "index": "A",
            "name": "Parallel Projection",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry",
                "greedy",
                "math"
            ]
        },
        "1520:D": {
            "contestId": 1520,
            "index": "D",
            "name": "Same Differences",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "hashing",
                "math"
            ]
        },
        "1363:A": {
            "contestId": 1363,
            "index": "A",
            "name": "Odd Selection",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1343:C": {
            "contestId": 1343,
            "index": "C",
            "name": "Alternating Subsequence",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "474:B": {
            "contestId": 474,
            "index": "B",
            "name": "Worms",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "binary search",
                "implementation"
            ]
        },
        "1737:A": {
            "contestId": 1737,
            "index": "A",
            "name": "Ela Sorting Books",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "556:A": {
            "contestId": 556,
            "index": "A",
            "name": "Case of the Zeros and Ones",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1775:A2": {
            "contestId": 1775,
            "index": "A2",
            "name": "Gardener and the Capybaras (hard version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1775:A1": {
            "contestId": 1775,
            "index": "A1",
            "name": "Gardener and the Capybaras (easy version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        "1622:B": {
            "contestId": 1622,
            "index": "B",
            "name": "Berland Music",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "data structures",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1783:B": {
            "contestId": 1783,
            "index": "B",
            "name": "Matrix of Differences",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1783:A": {
            "contestId": 1783,
            "index": "A",
            "name": "Make it Beautiful",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math",
                "sortings"
            ]
        },
        "1472:B": {
            "contestId": 1472,
            "index": "B",
            "name": "Fair Division",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1593:B": {
            "contestId": 1593,
            "index": "B",
            "name": "Make it Divisible by 25",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "math",
                "math"
            ]
        },
        "1632:B": {
            "contestId": 1632,
            "index": "B",
            "name": "Roof Construction",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "1713:B": {
            "contestId": 1713,
            "index": "B",
            "name": "Optimal Reduction",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1768:B": {
            "contestId": 1768,
            "index": "B",
            "name": "Quick Sort",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1768:A": {
            "contestId": 1768,
            "index": "A",
            "name": "Greatest Convex",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1607:C": {
            "contestId": 1607,
            "index": "C",
            "name": "Minimum Extraction",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "sortings"
            ]
        },
        "499:B": {
            "contestId": 499,
            "index": "B",
            "name": "Lecture",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1593:C": {
            "contestId": 1593,
            "index": "C",
            "name": "Save More Mice",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "binary search",
                "greedy",
                "greedy"
            ]
        },
        "1779:B": {
            "contestId": 1779,
            "index": "B",
            "name": "MKnez's ConstructiveForces Task",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1779:A": {
            "contestId": 1779,
            "index": "A",
            "name": "Hall of Fame",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1436:B": {
            "contestId": 1436,
            "index": "B",
            "name": "Prime Square",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1326:B": {
            "contestId": 1326,
            "index": "B",
            "name": "Maximums",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1650:B": {
            "contestId": 1650,
            "index": "B",
            "name": "DIV + MOD",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1525:B": {
            "contestId": 1525,
            "index": "B",
            "name": "Permutation Sort",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1537:B": {
            "contestId": 1537,
            "index": "B",
            "name": "Bad Boy",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1433:C": {
            "contestId": 1433,
            "index": "C",
            "name": "Dominant Piranha",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1373:B": {
            "contestId": 1373,
            "index": "B",
            "name": "01 Game",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "games"
            ]
        },
        "913:A": {
            "contestId": 913,
            "index": "A",
            "name": "Modular Exponentiation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1535:B": {
            "contestId": 1535,
            "index": "B",
            "name": "Array Reodering",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory",
                "sortings"
            ]
        },
        "1296:B": {
            "contestId": 1296,
            "index": "B",
            "name": "Food Buying",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1462:C": {
            "contestId": 1462,
            "index": "C",
            "name": "Unique Number",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1335:B": {
            "contestId": 1335,
            "index": "B",
            "name": "Construct the String",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1374:B": {
            "contestId": 1374,
            "index": "B",
            "name": "Multiply by 2, divide by 6",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1624:B": {
            "contestId": 1624,
            "index": "B",
            "name": "Make AP",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1770:B": {
            "contestId": 1770,
            "index": "B",
            "name": "Koxia and Permutation",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1770:A": {
            "contestId": 1770,
            "index": "A",
            "name": "Koxia and Whiteboards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "1605:B": {
            "contestId": 1605,
            "index": "B",
            "name": "Reverse Sort",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1702:D": {
            "contestId": 1702,
            "index": "D",
            "name": "Not a Cheap String",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "456:A": {
            "contestId": 456,
            "index": "A",
            "name": "Laptops",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "sortings"
            ]
        },
        "1371:A": {
            "contestId": 1371,
            "index": "A",
            "name": "Magical Sticks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "724:A": {
            "contestId": 724,
            "index": "A",
            "name": "Checking the Calendar",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1360:B": {
            "contestId": 1360,
            "index": "B",
            "name": "Honest Coach",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1426:A": {
            "contestId": 1426,
            "index": "A",
            "name": "Floor Number",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1176:A": {
            "contestId": 1176,
            "index": "A",
            "name": "Divide it!",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1731:A": {
            "contestId": 1731,
            "index": "A",
            "name": "Joey Takes Money",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1732:B": {
            "contestId": 1732,
            "index": "B",
            "name": "Ugu",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "999:B": {
            "contestId": 999,
            "index": "B",
            "name": "Reversing Encryption",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1742:C": {
            "contestId": 1742,
            "index": "C",
            "name": "Stripes",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1352:C": {
            "contestId": 1352,
            "index": "C",
            "name": "K-th Not Divisible by n",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "988:B": {
            "contestId": 988,
            "index": "B",
            "name": "Substrings Sort",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "sortings",
                "strings"
            ]
        },
        "988:A": {
            "contestId": 988,
            "index": "A",
            "name": "Diverse Team",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "978:C": {
            "contestId": 978,
            "index": "C",
            "name": "Letters",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "binary search",
                "implementation",
                "two pointers"
            ]
        },
        "978:A": {
            "contestId": 978,
            "index": "A",
            "name": "Remove Duplicates",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "977:C": {
            "contestId": 977,
            "index": "C",
            "name": "Less or Equal",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "sortings"
            ]
        },
        "1763:B": {
            "contestId": 1763,
            "index": "B",
            "name": "Incinerate",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "implementation",
                "math",
                "sortings"
            ]
        },
        "1526:B": {
            "contestId": 1526,
            "index": "B",
            "name": "I Hate 1111",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        "622:A": {
            "contestId": 622,
            "index": "A",
            "name": "Infinite Sequence",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "168:A": {
            "contestId": 168,
            "index": "A",
            "name": "Wizards and Demonstration",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "194:A": {
            "contestId": 194,
            "index": "A",
            "name": "Exams",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1749:B": {
            "contestId": 1749,
            "index": "B",
            "name": "Death's Blessing",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1399:B": {
            "contestId": 1399,
            "index": "B",
            "name": "Gifts Fixing",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1353:C": {
            "contestId": 1353,
            "index": "C",
            "name": "Board Moves",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1433:A": {
            "contestId": 1433,
            "index": "A",
            "name": "Boring Apartments",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1520:A": {
            "contestId": 1520,
            "index": "A",
            "name": "Do Not Be Distracted!",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1353:B": {
            "contestId": 1353,
            "index": "B",
            "name": "Two Arrays And Swaps",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1763:A": {
            "contestId": 1763,
            "index": "A",
            "name": "Absolute Maximization",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1367:B": {
            "contestId": 1367,
            "index": "B",
            "name": "Even Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1772:C": {
            "contestId": 1772,
            "index": "C",
            "name": "Different Differences",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1772:B": {
            "contestId": 1772,
            "index": "B",
            "name": "Matrix Rotation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1772:A": {
            "contestId": 1772,
            "index": "A",
            "name": "A+B?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1337:B": {
            "contestId": 1337,
            "index": "B",
            "name": "Kana and Dragon Quest game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1774:A": {
            "contestId": 1774,
            "index": "A",
            "name": "Add Plus Minus Sign",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1352:A": {
            "contestId": 1352,
            "index": "A",
            "name": "Sum of Round Numbers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "978:B": {
            "contestId": 978,
            "index": "B",
            "name": "File Name",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1767:B": {
            "contestId": 1767,
            "index": "B",
            "name": "Block Towers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1767:A": {
            "contestId": 1767,
            "index": "A",
            "name": "Cut the Triangle",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "977:B": {
            "contestId": 977,
            "index": "B",
            "name": "Two-gram",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1762:A": {
            "contestId": 1762,
            "index": "A",
            "name": "Divide and Conquer",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1690:D": {
            "contestId": 1690,
            "index": "D",
            "name": "Black and White Stripe",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "two pointers"
            ]
        },
        "1634:C": {
            "contestId": 1634,
            "index": "C",
            "name": "OKEA",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1744:A": {
            "contestId": 1744,
            "index": "A",
            "name": "Number Replacement",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1744:C": {
            "contestId": 1744,
            "index": "C",
            "name": "Traffic Light",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "binary search",
                "implementation",
                "two pointers"
            ]
        },
        "1726:A": {
            "contestId": 1726,
            "index": "A",
            "name": "Mainak and Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1766:B": {
            "contestId": 1766,
            "index": "B",
            "name": "Notepad#",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1766:A": {
            "contestId": 1766,
            "index": "A",
            "name": "Extremely Round",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1771:A": {
            "contestId": 1771,
            "index": "A",
            "name": "Hossam and Combinatorics",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "combinatorics",
                "math",
                "sortings"
            ]
        },
        "600:B": {
            "contestId": 600,
            "index": "B",
            "name": "Queries about less or equal elements",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "data structures",
                "sortings",
                "two pointers"
            ]
        },
        "1490:C": {
            "contestId": 1490,
            "index": "C",
            "name": "Sum of Cubes",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "brute force",
                "brute force",
                "math"
            ]
        },
        "1353:A": {
            "contestId": 1353,
            "index": "A",
            "name": "Most Unstable Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1353:D": {
            "contestId": 1353,
            "index": "D",
            "name": "Constructing the Array",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "sortings"
            ]
        },
        "1527:A": {
            "contestId": 1527,
            "index": "A",
            "name": "And Then There Were K",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks"
            ]
        },
        "1697:B": {
            "contestId": 1697,
            "index": "B",
            "name": "Promo",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1186:A": {
            "contestId": 1186,
            "index": "A",
            "name": "Vus the Cossack and a Contest",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1725:B": {
            "contestId": 1725,
            "index": "B",
            "name": "Basketball Together",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "43:B": {
            "contestId": 43,
            "index": "B",
            "name": "Letter",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "540:A": {
            "contestId": 540,
            "index": "A",
            "name": "Combination Lock",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1579:D": {
            "contestId": 1579,
            "index": "D",
            "name": "Productive Meeting",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        "1761:B": {
            "contestId": 1761,
            "index": "B",
            "name": "Elimination of a Ring",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1750:B": {
            "contestId": 1750,
            "index": "B",
            "name": "Maximum Substring",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1715:B": {
            "contestId": 1715,
            "index": "B",
            "name": "Beautiful Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "703:A": {
            "contestId": 703,
            "index": "A",
            "name": "Mishka and Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1760:D": {
            "contestId": 1760,
            "index": "D",
            "name": "Challenging Valleys",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "two pointers"
            ]
        },
        "1764:B": {
            "contestId": 1764,
            "index": "B",
            "name": "Doremy's Perfect Math Class",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "118:B": {
            "contestId": 118,
            "index": "B",
            "name": "Present from Lena",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "78:A": {
            "contestId": 78,
            "index": "A",
            "name": "Haiku",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "492:A": {
            "contestId": 492,
            "index": "A",
            "name": "Vanya and Cubes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1325:B": {
            "contestId": 1325,
            "index": "B",
            "name": "CopyCopyCopyCopyCopy",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1389:A": {
            "contestId": 1389,
            "index": "A",
            "name": "LCM Problem",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1747:B": {
            "contestId": 1747,
            "index": "B",
            "name": "BAN BAN",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1758:B": {
            "contestId": 1758,
            "index": "B",
            "name": "XOR = Average",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms"
            ]
        },
        "22:A": {
            "contestId": 22,
            "index": "A",
            "name": "Second Order Statistics",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "903:C": {
            "contestId": 903,
            "index": "C",
            "name": "Boxes Packing",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "918:B": {
            "contestId": 918,
            "index": "B",
            "name": "Radio Station",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "855:A": {
            "contestId": 855,
            "index": "A",
            "name": "Tom Riddle's Diary",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "166:A": {
            "contestId": 166,
            "index": "A",
            "name": "Rank List",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "binary search",
                "implementation",
                "sortings"
            ]
        },
        "44:A": {
            "contestId": 44,
            "index": "A",
            "name": "Indian Summer",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1764:A": {
            "contestId": 1764,
            "index": "A",
            "name": "Doremy's Paint",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1325:A": {
            "contestId": 1325,
            "index": "A",
            "name": "EhAb AnD gCd",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        "233:A": {
            "contestId": 233,
            "index": "A",
            "name": "Perfect Permutation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1369:A": {
            "contestId": 1369,
            "index": "A",
            "name": "FashionabLee",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "1462:A": {
            "contestId": 1462,
            "index": "A",
            "name": "Favorite Sequence",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "two pointers"
            ]
        },
        "959:A": {
            "contestId": 959,
            "index": "A",
            "name": "Mahmoud and Ehab and the even-odd game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "games",
                "math"
            ]
        },
        "1760:C": {
            "contestId": 1760,
            "index": "C",
            "name": "Advantage",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        "1760:B": {
            "contestId": 1760,
            "index": "B",
            "name": "Atilla's Favorite Problem",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1760:A": {
            "contestId": 1760,
            "index": "A",
            "name": "Medium Number",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1761:A": {
            "contestId": 1761,
            "index": "A",
            "name": "Two Permutations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        "1385:A": {
            "contestId": 1385,
            "index": "A",
            "name": "Three Pairwise Maximums",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1746:B": {
            "contestId": 1746,
            "index": "B",
            "name": "Rebellion",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "two pointers"
            ]
        },
        "584:A": {
            "contestId": 584,
            "index": "A",
            "name": "Olesya and Rodion",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1759:A": {
            "contestId": 1759,
            "index": "A",
            "name": "Yes-Yes?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1619:A": {
            "contestId": 1619,
            "index": "A",
            "name": "Square String?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1294:A": {
            "contestId": 1294,
            "index": "A",
            "name": "Collecting Coins",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "460:A": {
            "contestId": 460,
            "index": "A",
            "name": "Vasya and Socks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1472:A": {
            "contestId": 1472,
            "index": "A",
            "name": "Cards for Friends",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "630:A": {
            "contestId": 630,
            "index": "A",
            "name": "Again Twenty Five!",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "number theory"
            ]
        },
        "200:B": {
            "contestId": 200,
            "index": "B",
            "name": "Drinks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "141:A": {
            "contestId": 141,
            "index": "A",
            "name": "Amusing Joke",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "1360:A": {
            "contestId": 1360,
            "index": "A",
            "name": "Minimal Square",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1374:A": {
            "contestId": 1374,
            "index": "A",
            "name": "Required Remainder",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "32:B": {
            "contestId": 32,
            "index": "B",
            "name": "Borze",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "expression parsing",
                "implementation"
            ]
        },
        "1748:A": {
            "contestId": 1748,
            "index": "A",
            "name": "The Ultimate Square",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "432:A": {
            "contestId": 432,
            "index": "A",
            "name": "Choosing Teams",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "151:A": {
            "contestId": 151,
            "index": "A",
            "name": "Soft Drinking",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1343:B": {
            "contestId": 1343,
            "index": "B",
            "name": "Balanced Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "472:A": {
            "contestId": 472,
            "index": "A",
            "name": "Design Tutorial: Learn from Math",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1154:A": {
            "contestId": 1154,
            "index": "A",
            "name": "Restoring Three Numbers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1409:A": {
            "contestId": 1409,
            "index": "A",
            "name": "Yet Another Two Integers Problem",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "758:A": {
            "contestId": 758,
            "index": "A",
            "name": "Holiday Of Equality",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1367:A": {
            "contestId": 1367,
            "index": "A",
            "name": "Short Substrings",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "581:A": {
            "contestId": 581,
            "index": "A",
            "name": "Vasya the Hipster",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "723:A": {
            "contestId": 723,
            "index": "A",
            "name": "The New Year: Meeting Friends",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math",
                "sortings"
            ]
        },
        "750:A": {
            "contestId": 750,
            "index": "A",
            "name": "New Year and Hurry",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "binary search",
                "brute force",
                "implementation",
                "math"
            ]
        },
        "144:A": {
            "contestId": 144,
            "index": "A",
            "name": "Arrival of the General",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "510:A": {
            "contestId": 510,
            "index": "A",
            "name": "Fox And Snake",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "996:A": {
            "contestId": 996,
            "index": "A",
            "name": "Hit the Lottery",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "155:A": {
            "contestId": 155,
            "index": "A",
            "name": "I_love_\\%username\\%",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "undefined:154": {
            "problemsetName": "acmsguru",
            "index": "154",
            "name": "Factorial",
            "type": "PROGRAMMING",
            "tags": []
        },
        "undefined:123": {
            "problemsetName": "acmsguru",
            "index": "123",
            "name": "The sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "undefined:100": {
            "problemsetName": "acmsguru",
            "index": "100",
            "name": "A+B",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1750:A": {
            "contestId": 1750,
            "index": "A",
            "name": "Indirect Sort",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1328:A": {
            "contestId": 1328,
            "index": "A",
            "name": "Divisibility Problem",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "467:A": {
            "contestId": 467,
            "index": "A",
            "name": "George and Accommodation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "61:A": {
            "contestId": 61,
            "index": "A",
            "name": "Ultra-Fast Mathematician",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "271:A": {
            "contestId": 271,
            "index": "A",
            "name": "Beautiful Year",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "1747:A": {
            "contestId": 1747,
            "index": "A",
            "name": "Two Groups",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "705:A": {
            "contestId": 705,
            "index": "A",
            "name": "Hulk",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1742:B": {
            "contestId": 1742,
            "index": "B",
            "name": "Increasing",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1742:A": {
            "contestId": 1742,
            "index": "A",
            "name": "Sum",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1740:A": {
            "contestId": 1740,
            "index": "A",
            "name": "Factorise N+M",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        "1754:B": {
            "contestId": 1754,
            "index": "B",
            "name": "Kevin and Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1754:A": {
            "contestId": 1754,
            "index": "A",
            "name": "Technical Support",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "34:A": {
            "contestId": 34,
            "index": "A",
            "name": "Reconnaissance 2",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1604:F": {
            "contestId": 1604,
            "index": "F",
            "name": "Artistic Partition",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3000,
            "tags": [
                "dp",
                "number theory"
            ]
        },
        "1604:C": {
            "contestId": 1604,
            "index": "C",
            "name": "Di-visible Confusion",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1743:A": {
            "contestId": 1743,
            "index": "A",
            "name": "Password",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "combinatorics",
                "implementation",
                "math"
            ]
        },
        "1746:A": {
            "contestId": 1746,
            "index": "A",
            "name": "Maxmina",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1749:A": {
            "contestId": 1749,
            "index": "A",
            "name": "Cowardly Rooks",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1342:B": {
            "contestId": 1342,
            "index": "B",
            "name": "Binary Period",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "1345:B": {
            "contestId": 1345,
            "index": "B",
            "name": "Card Constructions",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "math"
            ]
        },
        "1638:B": {
            "contestId": 1638,
            "index": "B",
            "name": "Odd Swap Sort",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "data structures",
                "math",
                "sortings"
            ]
        },
        "651:A": {
            "contestId": 651,
            "index": "A",
            "name": "Joysticks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "dp",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1841:B": {
            "contestId": 1841,
            "index": "B",
            "name": "Keep it Beautiful",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1841:A": {
            "contestId": 1841,
            "index": "A",
            "name": "Game with Board",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "games"
            ]
        },
        "1743:C": {
            "contestId": 1743,
            "index": "C",
            "name": "Save the Magazines",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "227:B": {
            "contestId": 227,
            "index": "B",
            "name": "Effective Approach",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "463:B": {
            "contestId": 463,
            "index": "B",
            "name": "Caisa and Pylons",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1382:B": {
            "contestId": 1382,
            "index": "B",
            "name": "Sequential Nim",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1100,
            "tags": [
                "dp",
                "games"
            ]
        },
        "919:B": {
            "contestId": 919,
            "index": "B",
            "name": "Perfect Number",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "implementation",
                "number theory"
            ]
        },
        "1840:A": {
            "contestId": 1840,
            "index": "A",
            "name": "Cipher Shifer",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        "1840:B": {
            "contestId": 1840,
            "index": "B",
            "name": "Binary Cafe",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "bitmasks",
                "combinatorics",
                "math"
            ]
        },
        "1840:C": {
            "contestId": 1840,
            "index": "C",
            "name": "Ski Resort",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "combinatorics",
                "math",
                "two pointers"
            ]
        },
        "1735:B": {
            "contestId": 1735,
            "index": "B",
            "name": "Tea with Tangerines",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "554:A": {
            "contestId": 554,
            "index": "A",
            "name": "Kyoya and Photobooks",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 900,
            "tags": [
                "brute force",
                "math",
                "strings"
            ]
        },
        "1838:B": {
            "contestId": 1838,
            "index": "B",
            "name": "Minimize Permutation Subarrays",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1838:A": {
            "contestId": 1838,
            "index": "A",
            "name": "Blackboard List",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1839:B": {
            "contestId": 1839,
            "index": "B",
            "name": "Lamps",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1839:A": {
            "contestId": 1839,
            "index": "A",
            "name": "The Good Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1311:B": {
            "contestId": 1311,
            "index": "B",
            "name": "WeirdSort",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dfs and similar",
                "sortings"
            ]
        },
        "1203:C": {
            "contestId": 1203,
            "index": "C",
            "name": "Common Divisors",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "320:A": {
            "contestId": 320,
            "index": "A",
            "name": "Magic Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "149:A": {
            "contestId": 149,
            "index": "A",
            "name": "Business trip",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "776:B": {
            "contestId": 776,
            "index": "B",
            "name": "Sherlock and his girlfriend",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        "26:A": {
            "contestId": 26,
            "index": "A",
            "name": "Almost Prime",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "number theory"
            ]
        },
        "1722:G": {
            "contestId": 1722,
            "index": "G",
            "name": "Even-Odd XOR",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1831:B": {
            "contestId": 1831,
            "index": "B",
            "name": "Array merging",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1831:A": {
            "contestId": 1831,
            "index": "A",
            "name": "Twin Permutations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "252:A": {
            "contestId": 252,
            "index": "A",
            "name": "Little Xor",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "478:A": {
            "contestId": 478,
            "index": "A",
            "name": "Initial Bet",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1837:C": {
            "contestId": 1837,
            "index": "C",
            "name": "Best Binary String",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1837:B": {
            "contestId": 1837,
            "index": "B",
            "name": "Comparison String",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1837:A": {
            "contestId": 1837,
            "index": "A",
            "name": "Grasshopper on a Line",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1324:C": {
            "contestId": 1324,
            "index": "C",
            "name": "Frog Jumps",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "greedy",
                "implementation"
            ]
        },
        "1366:A": {
            "contestId": 1366,
            "index": "A",
            "name": "Shovels and Swords",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "greedy",
                "math"
            ]
        },
        "349:A": {
            "contestId": 349,
            "index": "A",
            "name": "Cinema Line",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1826:A": {
            "contestId": 1826,
            "index": "A",
            "name": "Trust Nobody",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1826:B": {
            "contestId": 1826,
            "index": "B",
            "name": "Lunatic Never Content",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "82:A": {
            "contestId": 82,
            "index": "A",
            "name": "Double Cola",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1213:B": {
            "contestId": 1213,
            "index": "B",
            "name": "Bad Prices",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1712:C": {
            "contestId": 1712,
            "index": "C",
            "name": "Sort Zero",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1334:B": {
            "contestId": 1334,
            "index": "B",
            "name": "Middle Class",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1472:C": {
            "contestId": 1472,
            "index": "C",
            "name": "Long Jumps",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "dp",
                "graphs"
            ]
        },
        "467:B": {
            "contestId": 467,
            "index": "B",
            "name": "Fedor and New Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        "1833:C": {
            "contestId": 1833,
            "index": "C",
            "name": "Vlad Building Beautiful Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1833:B": {
            "contestId": 1833,
            "index": "B",
            "name": "Restore the Weather",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1833:A": {
            "contestId": 1833,
            "index": "A",
            "name": "Musical Puzzle",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1324:B": {
            "contestId": 1324,
            "index": "B",
            "name": "Yet Another Palindrome Problem",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "strings"
            ]
        },
        "1327:A": {
            "contestId": 1327,
            "index": "A",
            "name": "Sum of Odd Integers",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "368:B": {
            "contestId": 368,
            "index": "B",
            "name": "Sereja and Suffixes",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "270:A": {
            "contestId": 270,
            "index": "A",
            "name": "Fancy Fence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "geometry",
                "implementation",
                "math"
            ]
        },
        "313:B": {
            "contestId": 313,
            "index": "B",
            "name": "Ilya and Queries",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "1405:B": {
            "contestId": 1405,
            "index": "B",
            "name": "Array Cancellation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "507:A": {
            "contestId": 507,
            "index": "A",
            "name": "Amr and Music",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1411:B": {
            "contestId": 1411,
            "index": "B",
            "name": "Fair Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "number theory"
            ]
        },
        "1111:A": {
            "contestId": 1111,
            "index": "A",
            "name": "Superhero Transformation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "237:A": {
            "contestId": 237,
            "index": "A",
            "name": "Free Cash",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "75:A": {
            "contestId": 75,
            "index": "A",
            "name": "Life Without Zeros",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1828:B": {
            "contestId": 1828,
            "index": "B",
            "name": "Permutation Swap",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1828:A": {
            "contestId": 1828,
            "index": "A",
            "name": "Divisible Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "620:B": {
            "contestId": 620,
            "index": "B",
            "name": "Grandfather Dovlet’s calculator",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1312:B": {
            "contestId": 1312,
            "index": "B",
            "name": "Bogosort",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1832:C": {
            "contestId": 1832,
            "index": "C",
            "name": "Contrast Value",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1832:B": {
            "contestId": 1832,
            "index": "B",
            "name": "Maximum Sum",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "sortings",
                "two pointers"
            ]
        },
        "1832:A": {
            "contestId": 1832,
            "index": "A",
            "name": "New Palindrome",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "strings"
            ]
        },
        "37:A": {
            "contestId": 37,
            "index": "A",
            "name": "Towers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "sortings"
            ]
        },
        "1515:B": {
            "contestId": 1515,
            "index": "B",
            "name": "Phoenix and Puzzle",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "geometry",
                "math",
                "number theory"
            ]
        },
        "1333:A": {
            "contestId": 1333,
            "index": "A",
            "name": "Little Artem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1256:A": {
            "contestId": 1256,
            "index": "A",
            "name": "Payment Without Change",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1326:A": {
            "contestId": 1326,
            "index": "A",
            "name": "Bad Ugly Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        "219:A": {
            "contestId": 219,
            "index": "A",
            "name": "k-String",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1358:B": {
            "contestId": 1358,
            "index": "B",
            "name": "Maria Breaks the Self-isolation",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "688:B": {
            "contestId": 688,
            "index": "B",
            "name": "Lovely Palindromes",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1829:C": {
            "contestId": 1829,
            "index": "C",
            "name": "Mr. Perfectly Fine",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "bitmasks",
                "greedy",
                "implementation"
            ]
        },
        "1520:C": {
            "contestId": 1520,
            "index": "C",
            "name": "Not Adjacent Matrix",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1521:A": {
            "contestId": 1521,
            "index": "A",
            "name": "Nastia and Nearly Good Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1825:A": {
            "contestId": 1825,
            "index": "A",
            "name": "LuoTianyi and the Palindrome String",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1823:A": {
            "contestId": 1823,
            "index": "A",
            "name": "A-characteristic",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        "104333:G": {
            "contestId": 104333,
            "index": "G",
            "name": "Minimum Enclosing Axis-Parallel Square",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104333:H": {
            "contestId": 104333,
            "index": "H",
            "name": "Maximum Product",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104333:J": {
            "contestId": 104333,
            "index": "J",
            "name": "Giveaway?",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1818:B": {
            "contestId": 1818,
            "index": "B",
            "name": "Indivisible",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1562:B": {
            "contestId": 1562,
            "index": "B",
            "name": "Scenes From a Memory",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1822:D": {
            "contestId": 1822,
            "index": "D",
            "name": "Super-Permutation",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1822:B": {
            "contestId": 1822,
            "index": "B",
            "name": "Karina and Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1822:C": {
            "contestId": 1822,
            "index": "C",
            "name": "Bun Lover",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1822:A": {
            "contestId": 1822,
            "index": "A",
            "name": "TubeTube Feed",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1821:B": {
            "contestId": 1821,
            "index": "B",
            "name": "Sort the Subarray",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "1821:A": {
            "contestId": 1821,
            "index": "A",
            "name": "Matching",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "104289:A": {
            "contestId": 104289,
            "index": "A",
            "name": "String Removal",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1816:A": {
            "contestId": 1816,
            "index": "A",
            "name": "Ian Visits Mary",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "geometry",
                "number theory"
            ]
        },
        "1816:B": {
            "contestId": 1816,
            "index": "B",
            "name": "Grid Reconstruction",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1810:A": {
            "contestId": 1810,
            "index": "A",
            "name": "Beautiful Sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "1539:A": {
            "contestId": 1539,
            "index": "A",
            "name": "Contest Start",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "combinatorics",
                "geometry",
                "greedy",
                "math"
            ]
        },
        "1814:B": {
            "contestId": 1814,
            "index": "B",
            "name": "Long Legs",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1814:A": {
            "contestId": 1814,
            "index": "A",
            "name": "Coins",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1797:B": {
            "contestId": 1797,
            "index": "B",
            "name": "Li Hua and Pattern",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1797:A": {
            "contestId": 1797,
            "index": "A",
            "name": "Li Hua and Maze",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "flows",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        "1732:A": {
            "contestId": 1732,
            "index": "A",
            "name": "Bestie",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1798:B": {
            "contestId": 1798,
            "index": "B",
            "name": "Three Sevens",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1798:A": {
            "contestId": 1798,
            "index": "A",
            "name": "Showstopper",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1810:B": {
            "contestId": 1810,
            "index": "B",
            "name": "Candies",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1811:E": {
            "contestId": 1811,
            "index": "E",
            "name": "Living Sequence",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "dp",
                "math",
                "number theory"
            ]
        },
        "1811:D": {
            "contestId": 1811,
            "index": "D",
            "name": "Umka and a Long Flight",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1811:C": {
            "contestId": 1811,
            "index": "C",
            "name": "Restore the Array",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1811:B": {
            "contestId": 1811,
            "index": "B",
            "name": "Conveyor Belts",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1811:A": {
            "contestId": 1811,
            "index": "A",
            "name": "Insert Digit",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math",
                "strings"
            ]
        },
        "1812:F": {
            "contestId": 1812,
            "index": "F",
            "name": "Factorization",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "number theory"
            ]
        },
        "1805:A": {
            "contestId": 1805,
            "index": "A",
            "name": "We Need the Zero",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks",
                "brute force"
            ]
        },
        "1805:B": {
            "contestId": 1805,
            "index": "B",
            "name": "The String Has a Target",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1234:B2": {
            "contestId": 1234,
            "index": "B2",
            "name": "Social Network (hard version)",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1234:B1": {
            "contestId": 1234,
            "index": "B1",
            "name": "Social Network (easy version)",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1812:J": {
            "contestId": 1812,
            "index": "J",
            "name": "Unmysterious Language",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "strings"
            ]
        },
        "1812:D": {
            "contestId": 1812,
            "index": "D",
            "name": "Trivial Conjecture",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1812:E": {
            "contestId": 1812,
            "index": "E",
            "name": "Not a Geometry Problem",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "*special",
                "constructive algorithms",
                "geometry",
                "math"
            ]
        },
        "1812:B": {
            "contestId": 1812,
            "index": "B",
            "name": "Was it Rated?",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "*special",
                "*special",
                "brute force",
                "implementation"
            ]
        },
        "1812:A": {
            "contestId": 1812,
            "index": "A",
            "name": "Are You a Robot?",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "*special",
                "*special",
                "expression parsing",
                "strings"
            ]
        },
        "1490:B": {
            "contestId": 1490,
            "index": "B",
            "name": "Balanced Remainders",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        "1499:B": {
            "contestId": 1499,
            "index": "B",
            "name": "Binary Removals",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1569:B": {
            "contestId": 1569,
            "index": "B",
            "name": "Chess Tournament",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1613:B": {
            "contestId": 1613,
            "index": "B",
            "name": "Absent Remainder",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1473:B": {
            "contestId": 1473,
            "index": "B",
            "name": "String LCM",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "math",
                "number theory",
                "strings"
            ]
        },
        "1808:B": {
            "contestId": 1808,
            "index": "B",
            "name": "Playing in a Casino",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "1808:A": {
            "contestId": 1808,
            "index": "A",
            "name": "Lucky Numbers",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1620:B": {
            "contestId": 1620,
            "index": "B",
            "name": "Triangles on a Rectangle",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "geometry",
                "greedy",
                "math"
            ]
        },
        "1794:A": {
            "contestId": 1794,
            "index": "A",
            "name": "Prefix and Suffix Array",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "strings"
            ]
        },
        "1708:B": {
            "contestId": 1708,
            "index": "B",
            "name": "Difference of GCDs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "268:B": {
            "contestId": 268,
            "index": "B",
            "name": "Buttons",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1342:A": {
            "contestId": 1342,
            "index": "A",
            "name": "Road To Zero",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "476:A": {
            "contestId": 476,
            "index": "A",
            "name": "Dreamoon and Stairs",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "124:A": {
            "contestId": 124,
            "index": "A",
            "name": "The number of positions",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1809:B": {
            "contestId": 1809,
            "index": "B",
            "name": "Points on Plane",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "binary search",
                "greedy",
                "math"
            ]
        },
        "1809:A": {
            "contestId": 1809,
            "index": "A",
            "name": "Garland",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "327:A": {
            "contestId": 327,
            "index": "A",
            "name": "Flipping Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        "1807:G2": {
            "contestId": 1807,
            "index": "G2",
            "name": "Subsequence Addition (Hard Version)",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "bitmasks",
                "dp",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1807:G1": {
            "contestId": 1807,
            "index": "G1",
            "name": "Subsequence Addition (Easy Version)",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1807:C": {
            "contestId": 1807,
            "index": "C",
            "name": "Find and Replace",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1807:D": {
            "contestId": 1807,
            "index": "D",
            "name": "Odd Queries",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1807:B": {
            "contestId": 1807,
            "index": "B",
            "name": "Grab the Candies",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1807:A": {
            "contestId": 1807,
            "index": "A",
            "name": "Plus or Minus",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1806:B": {
            "contestId": 1806,
            "index": "B",
            "name": "Mex Master",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1806:A": {
            "contestId": 1806,
            "index": "A",
            "name": "Walking Master",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry",
                "greedy",
                "math"
            ]
        },
        "102419:C": {
            "contestId": 102419,
            "index": "C",
            "name": "Two operations",
            "type": "PROGRAMMING",
            "tags": []
        },
        "519:B": {
            "contestId": 519,
            "index": "B",
            "name": "A and B and Compilation Errors",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        "1294:C": {
            "contestId": 1294,
            "index": "C",
            "name": "Product of Three Numbers",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1692:E": {
            "contestId": 1692,
            "index": "E",
            "name": "Binary Deque",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "implementation",
                "two pointers"
            ]
        },
        "1804:A": {
            "contestId": 1804,
            "index": "A",
            "name": "Lame King",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1802:A": {
            "contestId": 1802,
            "index": "A",
            "name": "Likes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1335:C": {
            "contestId": 1335,
            "index": "C",
            "name": "Two Teams Composing",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1800:D": {
            "contestId": 1800,
            "index": "D",
            "name": "Remove Two Letters",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "greedy",
                "hashing",
                "strings"
            ]
        },
        "1794:B": {
            "contestId": 1794,
            "index": "B",
            "name": "Not Dividing",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1800:A": {
            "contestId": 1800,
            "index": "A",
            "name": "Is It a Cat?",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1800:B": {
            "contestId": 1800,
            "index": "B",
            "name": "Count the Number of Pairs",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1800:C2": {
            "contestId": 1800,
            "index": "C2",
            "name": "Powering the Hero (hard version)",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "1800:C1": {
            "contestId": 1800,
            "index": "C1",
            "name": "Powering the Hero (easy version)",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "102:B": {
            "contestId": 102,
            "index": "B",
            "name": "Sum of Digits",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1796:B": {
            "contestId": 1796,
            "index": "B",
            "name": "Asterisk-Minor Template",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1796:A": {
            "contestId": 1796,
            "index": "A",
            "name": "Typical Interview Problem",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1550:B": {
            "contestId": 1550,
            "index": "B",
            "name": "Maximum Cost Deletion",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1789:A": {
            "contestId": 1789,
            "index": "A",
            "name": "Serval and Mocha's Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1789:B": {
            "contestId": 1789,
            "index": "B",
            "name": "Serval and Inversion Magic",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        "1454:C": {
            "contestId": 1454,
            "index": "C",
            "name": "Sequence Transformation",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1729:D": {
            "contestId": 1729,
            "index": "D",
            "name": "Friends and the Restaurant",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "1730:C": {
            "contestId": 1730,
            "index": "C",
            "name": "Minimum Notation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "data structures",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1793:C": {
            "contestId": 1793,
            "index": "C",
            "name": "Dora and Search",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "two pointers"
            ]
        },
        "1006:C": {
            "contestId": 1006,
            "index": "C",
            "name": "Three Parts of the Array",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "data structures",
                "two pointers"
            ]
        },
        "1681:C": {
            "contestId": 1681,
            "index": "C",
            "name": "Double Sort",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1795:B": {
            "contestId": 1795,
            "index": "B",
            "name": "Ideal Point",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "geometry",
                "greedy"
            ]
        },
        "1795:A": {
            "contestId": 1795,
            "index": "A",
            "name": "Two Towers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "577:A": {
            "contestId": 577,
            "index": "A",
            "name": "Multiplication Table",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "number theory"
            ]
        },
        "1695:B": {
            "contestId": 1695,
            "index": "B",
            "name": "Circle Game",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "games",
                "greedy"
            ]
        },
        "1688:B": {
            "contestId": 1688,
            "index": "B",
            "name": "Patchouli's Magical Talisman",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1688:A": {
            "contestId": 1688,
            "index": "A",
            "name": "Cirno's Perfect Bitmasks Classroom",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks",
                "brute force"
            ]
        },
        "1691:B": {
            "contestId": 1691,
            "index": "B",
            "name": "Shoe Shuffling",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "1686:B": {
            "contestId": 1686,
            "index": "B",
            "name": "Odd Subarrays",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1560:C": {
            "contestId": 1560,
            "index": "C",
            "name": "Infinity Table",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1220:A": {
            "contestId": 1220,
            "index": "A",
            "name": "Cards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "1684:B": {
            "contestId": 1684,
            "index": "B",
            "name": "Z mod X = C",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1684:A": {
            "contestId": 1684,
            "index": "A",
            "name": "Digit Minimization",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "games",
                "math",
                "strings"
            ]
        },
        "1656:B": {
            "contestId": 1656,
            "index": "B",
            "name": "Subtract Operation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "data structures",
                "greedy",
                "math",
                "two pointers"
            ]
        },
        "1656:A": {
            "contestId": 1656,
            "index": "A",
            "name": "Good Pairs",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "1607:B": {
            "contestId": 1607,
            "index": "B",
            "name": "Odd Grasshopper",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1679:A": {
            "contestId": 1679,
            "index": "A",
            "name": "AvtoBus",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1619:B": {
            "contestId": 1619,
            "index": "B",
            "name": "Squares and Cubes",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1678:B1": {
            "contestId": 1678,
            "index": "B1",
            "name": "Tokitsukaze and Good 01-String (easy version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1672:A": {
            "contestId": 1672,
            "index": "A",
            "name": "Log Chopping",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 800,
            "tags": [
                "games",
                "implementation",
                "math"
            ]
        },
        "1672:B": {
            "contestId": 1672,
            "index": "B",
            "name": "I love AAAB",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1669:D": {
            "contestId": 1669,
            "index": "D",
            "name": "Colorful Stamp",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1668:A": {
            "contestId": 1668,
            "index": "A",
            "name": "Direction Change",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1659:A": {
            "contestId": 1659,
            "index": "A",
            "name": "Red Versus Blue",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "352:A": {
            "contestId": 352,
            "index": "A",
            "name": "Jeff and Digits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1661:A": {
            "contestId": 1661,
            "index": "A",
            "name": "Array Balancing",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1665:B": {
            "contestId": 1665,
            "index": "B",
            "name": "Array Cloning Technique",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1663:C": {
            "contestId": 1663,
            "index": "C",
            "name": "Pōja Verdon",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "implementation",
                "math"
            ]
        },
        "1663:A": {
            "contestId": 1663,
            "index": "A",
            "name": "Who Tested?",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "expression parsing",
                "trees"
            ]
        },
        "1658:B": {
            "contestId": 1658,
            "index": "B",
            "name": "Marin and Anti-coprime Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        "1647:A": {
            "contestId": 1647,
            "index": "A",
            "name": "Madoka and Math Dad",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1651:B": {
            "contestId": 1651,
            "index": "B",
            "name": "Prove Him Wrong",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1637:A": {
            "contestId": 1637,
            "index": "A",
            "name": "Sorting Parts",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "sortings"
            ]
        },
        "1634:A": {
            "contestId": 1634,
            "index": "A",
            "name": "Reverse and Concatenate",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1736:A": {
            "contestId": 1736,
            "index": "A",
            "name": "Make A Equal to B",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1461:A": {
            "contestId": 1461,
            "index": "A",
            "name": "String Generation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "237:C": {
            "contestId": 237,
            "index": "C",
            "name": "Primes on Interval",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "number theory",
                "two pointers"
            ]
        },
        "812:C": {
            "contestId": 812,
            "index": "C",
            "name": "Sagheer and Nubian Market",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "binary search",
                "sortings"
            ]
        },
        "1385:B": {
            "contestId": 1385,
            "index": "B",
            "name": "Restore the Permutation by Merger",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "816:B": {
            "contestId": 816,
            "index": "B",
            "name": "Karen and Coffee",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        "1695:A": {
            "contestId": 1695,
            "index": "A",
            "name": "Subrectangle Guess",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "games"
            ]
        },
        "303:A": {
            "contestId": 303,
            "index": "A",
            "name": "Lucky Permutation Triple",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1719:B": {
            "contestId": 1719,
            "index": "B",
            "name": "Mathematical Circus",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1504:A": {
            "contestId": 1504,
            "index": "A",
            "name": " Déjà Vu",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "1498:A": {
            "contestId": 1498,
            "index": "A",
            "name": "GCD Sum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1484:A": {
            "contestId": 1484,
            "index": "A",
            "name": "Prison Break",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1501:B": {
            "contestId": 1501,
            "index": "B",
            "name": "Napoleon Cake",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "dp",
                "implementation",
                "sortings"
            ]
        },
        "1501:A": {
            "contestId": 1501,
            "index": "A",
            "name": "Alexey and Train",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "371:B": {
            "contestId": 371,
            "index": "B",
            "name": "Fox Dividing Cheese",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1496:A": {
            "contestId": 1496,
            "index": "A",
            "name": "Split it!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1493:A": {
            "contestId": 1493,
            "index": "A",
            "name": "Anti-knapsack",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1486:A": {
            "contestId": 1486,
            "index": "A",
            "name": "Shifting Stacks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1485:A": {
            "contestId": 1485,
            "index": "A",
            "name": "Add and Divide",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1714:C": {
            "contestId": 1714,
            "index": "C",
            "name": "Minimum  Varied Number",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "26:B": {
            "contestId": 26,
            "index": "B",
            "name": "Regular Bracket Sequence",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy"
            ]
        },
        "616:A": {
            "contestId": 616,
            "index": "A",
            "name": "Comparing Two Long Integers",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "108:A": {
            "contestId": 108,
            "index": "A",
            "name": "Palindromic Times",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1110:A": {
            "contestId": 1110,
            "index": "A",
            "name": "Parity",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1003:B": {
            "contestId": 1003,
            "index": "B",
            "name": "Binary String Constructing",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        "893:B": {
            "contestId": 893,
            "index": "B",
            "name": "Beautiful Divisors",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1617:B": {
            "contestId": 1617,
            "index": "B",
            "name": "GCD Problem",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "659:A": {
            "contestId": 659,
            "index": "A",
            "name": "Round House",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1731:B": {
            "contestId": 1731,
            "index": "B",
            "name": "Kill Demodogs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1685:A": {
            "contestId": 1685,
            "index": "A",
            "name": "Circular Local MiniMax",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1569:A": {
            "contestId": 1569,
            "index": "A",
            "name": "Balanced Substring",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1765:M": {
            "contestId": 1765,
            "index": "M",
            "name": "Minimum LCM",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "222:A": {
            "contestId": 222,
            "index": "A",
            "name": "Shooshuns and Sequence ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "224:A": {
            "contestId": 224,
            "index": "A",
            "name": "Parallelepiped",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "geometry",
                "math"
            ]
        },
        "1567:B": {
            "contestId": 1567,
            "index": "B",
            "name": "MEXor Mixup",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "bitmasks",
                "greedy"
            ]
        },
        "1421:A": {
            "contestId": 1421,
            "index": "A",
            "name": "XORwice",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks",
                "greedy",
                "math"
            ]
        },
        "515:A": {
            "contestId": 515,
            "index": "A",
            "name": "Drazil and Date",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1106:C": {
            "contestId": 1106,
            "index": "C",
            "name": "Lunar New Year and Number Division",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "sortings"
            ]
        },
        "1169:A": {
            "contestId": 1169,
            "index": "A",
            "name": "Circle Metro",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "263:B": {
            "contestId": 263,
            "index": "B",
            "name": "Squares",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1743:B": {
            "contestId": 1743,
            "index": "B",
            "name": "Permutation Value",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1765:B": {
            "contestId": 1765,
            "index": "B",
            "name": "Broken Keyboard",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1759:B": {
            "contestId": 1759,
            "index": "B",
            "name": "Lost Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1538:B": {
            "contestId": 1538,
            "index": "B",
            "name": "Friends and Candies",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1649:A": {
            "contestId": 1649,
            "index": "A",
            "name": "Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1296:A": {
            "contestId": 1296,
            "index": "A",
            "name": "Array with Odd Sum",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1360:E": {
            "contestId": 1360,
            "index": "E",
            "name": "Polygon",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        "1360:D": {
            "contestId": 1360,
            "index": "D",
            "name": "Buying Shovels",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1364:B": {
            "contestId": 1364,
            "index": "B",
            "name": "Most socially-distanced subsequence",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        "1810:C": {
            "contestId": 1810,
            "index": "C",
            "name": "Make It Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1839:C": {
            "contestId": 1839,
            "index": "C",
            "name": "Insert Zero and Invert Prefix",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1740:C": {
            "contestId": 1740,
            "index": "C",
            "name": "Bricks and Bags",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "games",
                "greedy",
                "sortings"
            ]
        },
        "1200:B": {
            "contestId": 1200,
            "index": "B",
            "name": "Block Adventure",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1828:C": {
            "contestId": 1828,
            "index": "C",
            "name": "Counting Orders",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1100,
            "tags": [
                "binary search",
                "combinatorics",
                "sortings"
            ]
        },
        "1740:B": {
            "contestId": 1740,
            "index": "B",
            "name": "Jumbo Extra Cheese 2",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "geometry",
                "greedy",
                "sortings"
            ]
        },
        "1838:C": {
            "contestId": 1838,
            "index": "C",
            "name": "No Prime Differences",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1182:B": {
            "contestId": 1182,
            "index": "B",
            "name": "Plus from Picture",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "implementation",
                "strings"
            ]
        },
        "1144:C": {
            "contestId": 1144,
            "index": "C",
            "name": "Two Shuffled Sequences",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1285:B": {
            "contestId": 1285,
            "index": "B",
            "name": "Just Eat It!",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1151:A": {
            "contestId": 1151,
            "index": "A",
            "name": "Maxim and Biology",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "strings"
            ]
        },
        "1669:G": {
            "contestId": 1669,
            "index": "G",
            "name": "Fall Down",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dfs and similar",
                "implementation"
            ]
        },
        "1490:D": {
            "contestId": 1490,
            "index": "D",
            "name": "Permutation Transformation",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "implementation"
            ]
        },
        "1829:E": {
            "contestId": 1829,
            "index": "E",
            "name": "The Lakes",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "implementation"
            ]
        },
        "1173:A": {
            "contestId": 1173,
            "index": "A",
            "name": "Nauuo and Votes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1829:D": {
            "contestId": 1829,
            "index": "D",
            "name": "Gold Rush",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "implementation"
            ]
        },
        "1166:B": {
            "contestId": 1166,
            "index": "B",
            "name": "All the Vowels Please",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1825:B": {
            "contestId": 1825,
            "index": "B",
            "name": "LuoTianyi and the Table",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1829:B": {
            "contestId": 1829,
            "index": "B",
            "name": "Blank Space",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1829:A": {
            "contestId": 1829,
            "index": "A",
            "name": "Love Story",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1279:B": {
            "contestId": 1279,
            "index": "B",
            "name": "Verse For Santa",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "brute force",
                "implementation"
            ]
        },
        "1176:B": {
            "contestId": 1176,
            "index": "B",
            "name": "Merge it!",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1155:A": {
            "contestId": 1155,
            "index": "A",
            "name": "Reverse a Substring",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "1491:A": {
            "contestId": 1491,
            "index": "A",
            "name": "K-th Largest Value",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1818:A": {
            "contestId": 1818,
            "index": "A",
            "name": "Politics",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1823:B": {
            "contestId": 1823,
            "index": "B",
            "name": "Sort with Step",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "brute force",
                "math",
                "sortings"
            ]
        },
        "1185:C1": {
            "contestId": 1185,
            "index": "C1",
            "name": "Exam in BerSU (easy version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1185:B": {
            "contestId": 1185,
            "index": "B",
            "name": "Email from Polycarp",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1709:B": {
            "contestId": 1709,
            "index": "B",
            "name": "Also Try Minecraft",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "data structures",
                "dp",
                "implementation"
            ]
        },
        "1146:B": {
            "contestId": 1146,
            "index": "B",
            "name": "Hate \"A\"",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1821:C": {
            "contestId": 1821,
            "index": "C",
            "name": "Tear It Apart",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "implementation",
                "math",
                "strings"
            ]
        },
        "1149:A": {
            "contestId": 1149,
            "index": "A",
            "name": "Prefix Sum Primes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1733:B": {
            "contestId": 1733,
            "index": "B",
            "name": "Rule of League",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1196:B": {
            "contestId": 1196,
            "index": "B",
            "name": "Odd Sum Segments",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1196:A": {
            "contestId": 1196,
            "index": "A",
            "name": "Three Piles of Candies",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        "1689:A": {
            "contestId": 1689,
            "index": "A",
            "name": "Lex String",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        "1203:B": {
            "contestId": 1203,
            "index": "B",
            "name": "Equal Rectangles",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "279:B": {
            "contestId": 279,
            "index": "B",
            "name": "Books",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "binary search",
                "brute force",
                "implementation",
                "two pointers"
            ]
        },
        "1157:A": {
            "contestId": 1157,
            "index": "A",
            "name": "Reachable Numbers",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1820:B": {
            "contestId": 1820,
            "index": "B",
            "name": "JoJo's Incredible Adventures",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "math",
                "strings",
                "two pointers"
            ]
        },
        "1820:A": {
            "contestId": 1820,
            "index": "A",
            "name": "Yura's New Name",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1205:A": {
            "contestId": 1205,
            "index": "A",
            "name": "Almost Equal",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1742:E": {
            "contestId": 1742,
            "index": "E",
            "name": "Scuza",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "greedy",
                "math"
            ]
        },
        "1705:B": {
            "contestId": 1705,
            "index": "B",
            "name": "Mark the Dust Sweeper",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1213:C": {
            "contestId": 1213,
            "index": "C",
            "name": "Book Reading",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "math"
            ]
        },
        "1214:C": {
            "contestId": 1214,
            "index": "C",
            "name": "Bad Sequence",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "609:B": {
            "contestId": 609,
            "index": "B",
            "name": "The Best Gift",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1741:C": {
            "contestId": 1741,
            "index": "C",
            "name": "Minimize the Thickness",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "two pointers"
            ]
        },
        "1747:C": {
            "contestId": 1747,
            "index": "C",
            "name": "Swap Game",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "games"
            ]
        },
        "1759:C": {
            "contestId": 1759,
            "index": "C",
            "name": "Thermostat",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "math",
                "shortest paths"
            ]
        },
        "1760:E": {
            "contestId": 1760,
            "index": "E",
            "name": "Binary Inversions",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "data structures",
                "greedy",
                "math"
            ]
        },
        "1737:B": {
            "contestId": 1737,
            "index": "B",
            "name": "Ela's Fitness and the Luxury Number",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "implementation",
                "math"
            ]
        },
        "862:A": {
            "contestId": 862,
            "index": "A",
            "name": "Mahmoud and Ehab and the MEX",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "550:C": {
            "contestId": 550,
            "index": "C",
            "name": "Divisibility by Eight",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "math"
            ]
        },
        "1800:E2": {
            "contestId": 1800,
            "index": "E2",
            "name": "Unforgivable Curse (hard version)",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "strings"
            ]
        },
        "275:A": {
            "contestId": 275,
            "index": "A",
            "name": "Lights Out",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "405:B": {
            "contestId": 405,
            "index": "B",
            "name": "Domino Effect",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": []
        },
        "1736:C1": {
            "contestId": 1736,
            "index": "C1",
            "name": "Good Subarrays (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "binary search",
                "data structures",
                "schedules",
                "two pointers"
            ]
        },
        "1369:B": {
            "contestId": 1369,
            "index": "B",
            "name": "AccurateLee",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1800:E1": {
            "contestId": 1800,
            "index": "E1",
            "name": "Unforgivable Curse (easy version)",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "strings"
            ]
        },
        "1804:B": {
            "contestId": 1804,
            "index": "B",
            "name": "Vaccination",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "435:A": {
            "contestId": 435,
            "index": "A",
            "name": "Queue on Bus Stop",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1251:A": {
            "contestId": 1251,
            "index": "A",
            "name": "Broken Keyboard",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "strings",
                "two pointers"
            ]
        },
        "236:B": {
            "contestId": 236,
            "index": "B",
            "name": "Easy Number Challenge",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation",
                "number theory"
            ]
        },
        "1742:D": {
            "contestId": 1742,
            "index": "D",
            "name": "Coprime",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "number theory"
            ]
        },
        "1527:B1": {
            "contestId": 1527,
            "index": "B1",
            "name": "Palindrome Game (easy version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "games"
            ]
        },
        "1788:C": {
            "contestId": 1788,
            "index": "C",
            "name": "Matching Numbers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "798:A": {
            "contestId": 798,
            "index": "A",
            "name": "Mike and palindrome",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "strings"
            ]
        },
        "1733:A": {
            "contestId": 1733,
            "index": "A",
            "name": "Consecutive Sum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1717:B": {
            "contestId": 1717,
            "index": "B",
            "name": "Madoka and Underground Competitions",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1714:D": {
            "contestId": 1714,
            "index": "D",
            "name": "Color with Occurrences",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy",
                "strings"
            ]
        },
        "1712:B": {
            "contestId": 1712,
            "index": "B",
            "name": "Woeful Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        "1704:A": {
            "contestId": 1704,
            "index": "A",
            "name": "Two 0-1 Sequences",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1703:D": {
            "contestId": 1703,
            "index": "D",
            "name": "Double Strings",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "data structures",
                "strings"
            ]
        },
        "1702:C": {
            "contestId": 1702,
            "index": "C",
            "name": "Train and Queries",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "1694:A": {
            "contestId": 1694,
            "index": "A",
            "name": "Creep",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1698:B": {
            "contestId": 1698,
            "index": "B",
            "name": "Rising Sand",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1696:A": {
            "contestId": 1696,
            "index": "A",
            "name": "NIT orz!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks",
                "greedy"
            ]
        },
        "1697:C": {
            "contestId": 1697,
            "index": "C",
            "name": "awoo's Favorite Problem",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        "1700:B": {
            "contestId": 1700,
            "index": "B",
            "name": "Palindromic Numbers ",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1700:A": {
            "contestId": 1700,
            "index": "A",
            "name": "Optimal Path",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1481:A": {
            "contestId": 1481,
            "index": "A",
            "name": "Space Navigation ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1671:D": {
            "contestId": 1671,
            "index": "D",
            "name": "Insert a Progression",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1206:B": {
            "contestId": 1206,
            "index": "B",
            "name": "Make Product Equal One",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "1339:A": {
            "contestId": 1339,
            "index": "A",
            "name": "Filling Diamonds",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "dp",
                "implementation",
                "math"
            ]
        },
        "1610:A": {
            "contestId": 1610,
            "index": "A",
            "name": "Anti Light's Cell Guessing",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1566:B": {
            "contestId": 1566,
            "index": "B",
            "name": "MIN-MEX Cut",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "1480:A": {
            "contestId": 1480,
            "index": "A",
            "name": "Yet Another String Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "games",
                "greedy",
                "strings"
            ]
        },
        "1454:A": {
            "contestId": 1454,
            "index": "A",
            "name": "Special Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "probabilities"
            ]
        },
        "1625:A": {
            "contestId": 1625,
            "index": "A",
            "name": "Ancient Civilization",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks",
                "greedy",
                "math"
            ]
        },
        "1608:A": {
            "contestId": 1608,
            "index": "A",
            "name": "Find Array",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1602:A": {
            "contestId": 1602,
            "index": "A",
            "name": "Two Subsequences",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1582:A": {
            "contestId": 1582,
            "index": "A",
            "name": "Luntik and Concerts",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1618:B": {
            "contestId": 1618,
            "index": "B",
            "name": "Missing Bigram",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1516:A": {
            "contestId": 1516,
            "index": "A",
            "name": "Tit for Tat",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1517:A": {
            "contestId": 1517,
            "index": "A",
            "name": "Sum of 2050",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1547:A": {
            "contestId": 1547,
            "index": "A",
            "name": "Shortest Path with Obstacle",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1550:A": {
            "contestId": 1550,
            "index": "A",
            "name": "Find The Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1682:A": {
            "contestId": 1682,
            "index": "A",
            "name": "Palindromic Indices",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1557:B": {
            "contestId": 1557,
            "index": "B",
            "name": "Moamen and k-subarrays",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1467:A": {
            "contestId": 1467,
            "index": "A",
            "name": "Wizard of Orz",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1530:A": {
            "contestId": 1530,
            "index": "A",
            "name": "Binary Decimal",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1351:B": {
            "contestId": 1351,
            "index": "B",
            "name": "Square?",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1543:A": {
            "contestId": 1543,
            "index": "A",
            "name": "Exciting Bets",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1668:B": {
            "contestId": 1668,
            "index": "B",
            "name": "Social Distance",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1676:H1": {
            "contestId": 1676,
            "index": "H1",
            "name": "Maximum Crossings (Easy Version)",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force"
            ]
        },
        "1674:D": {
            "contestId": 1674,
            "index": "D",
            "name": "A-B-C Sort",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        "1674:C": {
            "contestId": 1674,
            "index": "C",
            "name": "Infinite Replacement",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "combinatorics",
                "implementation",
                "strings"
            ]
        },
        "630:C": {
            "contestId": 630,
            "index": "C",
            "name": "Lucky Numbers",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "869:B": {
            "contestId": 869,
            "index": "B",
            "name": "The Eternal Immortality",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "284:A": {
            "contestId": 284,
            "index": "A",
            "name": "Cows and Primitive Roots",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        "825:A": {
            "contestId": 825,
            "index": "A",
            "name": "Binary Protocol",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "898:B": {
            "contestId": 898,
            "index": "B",
            "name": "Proper Nutrition",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "number theory"
            ]
        },
        "801:A": {
            "contestId": 801,
            "index": "A",
            "name": "Vicious Keyboard",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force"
            ]
        },
        "1604:B": {
            "contestId": 1604,
            "index": "B",
            "name": "XOR Specia-LIS-t",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": []
        },
        "1277:B": {
            "contestId": 1277,
            "index": "B",
            "name": "Make Them Odd",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "number theory"
            ]
        },
        "1615:A": {
            "contestId": 1615,
            "index": "A",
            "name": "Closing The Gap",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "749:A": {
            "contestId": 749,
            "index": "A",
            "name": "Bachgold Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "84:A": {
            "contestId": 84,
            "index": "A",
            "name": "Toy Army",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "199:A": {
            "contestId": 199,
            "index": "A",
            "name": "Hexadecimal's theorem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "number theory"
            ]
        },
        "664:A": {
            "contestId": 664,
            "index": "A",
            "name": "Complicated GCD",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "670:A": {
            "contestId": 670,
            "index": "A",
            "name": "Holidays",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1295:A": {
            "contestId": 1295,
            "index": "A",
            "name": "Display The Number",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1304:A": {
            "contestId": 1304,
            "index": "A",
            "name": "Two Rabbits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1311:A": {
            "contestId": 1311,
            "index": "A",
            "name": "Add Odd or Subtract Even",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1312:A": {
            "contestId": 1312,
            "index": "A",
            "name": "Two Regular Polygons",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "geometry",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1392:A": {
            "contestId": 1392,
            "index": "A",
            "name": "Omkar and Password",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1392:B": {
            "contestId": 1392,
            "index": "B",
            "name": "Omkar and Infinity Clock",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "831:B": {
            "contestId": 831,
            "index": "B",
            "name": "Keyboard Layouts",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1146:A": {
            "contestId": 1146,
            "index": "A",
            "name": "Love \"A\"",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1355:A": {
            "contestId": 1355,
            "index": "A",
            "name": "Sequence with Digits",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1294:B": {
            "contestId": 1294,
            "index": "B",
            "name": "Collecting Packages",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1270:B": {
            "contestId": 1270,
            "index": "B",
            "name": "Interesting Subarray",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1539:C": {
            "contestId": 1539,
            "index": "C",
            "name": "Stable Groups",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1791:F": {
            "contestId": 1791,
            "index": "F",
            "name": "Range Update Point Query",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "data structures"
            ]
        },
        "1288:A": {
            "contestId": 1288,
            "index": "A",
            "name": "Deadline",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "brute force",
                "math",
                "ternary search"
            ]
        },
        "1783:C": {
            "contestId": 1783,
            "index": "C",
            "name": "Yet Another Tournament",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1551:B2": {
            "contestId": 1551,
            "index": "B2",
            "name": "Wonderful Coloring - 2",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        "1774:B": {
            "contestId": 1774,
            "index": "B",
            "name": "Coloring",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1350:A": {
            "contestId": 1350,
            "index": "A",
            "name": "Orac and Factors",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1324:A": {
            "contestId": 1324,
            "index": "A",
            "name": "Yet Another Tetris Problem",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "number theory"
            ]
        },
        "1354:A": {
            "contestId": 1354,
            "index": "A",
            "name": "Alarm Clock",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1771:C": {
            "contestId": 1771,
            "index": "C",
            "name": "Hossam and Trainees",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1771:B": {
            "contestId": 1771,
            "index": "B",
            "name": "Hossam and Friends",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dp",
                "two pointers"
            ]
        },
        "1296:E1": {
            "contestId": 1296,
            "index": "E1",
            "name": "String Coloring (easy version)",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        "1485:B": {
            "contestId": 1485,
            "index": "B",
            "name": "Replace and Keep Sorted",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "dp",
                "implementation",
                "math"
            ]
        },
        "1328:C": {
            "contestId": 1328,
            "index": "C",
            "name": "Ternary XOR",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1354:B": {
            "contestId": 1354,
            "index": "B",
            "name": "Ternary String",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        "1433:D": {
            "contestId": 1433,
            "index": "D",
            "name": "Districts Connection",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        "1364:A": {
            "contestId": 1364,
            "index": "A",
            "name": "XXXXX",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "brute force",
                "data structures",
                "number theory",
                "two pointers"
            ]
        },
        "1517:B": {
            "contestId": 1517,
            "index": "B",
            "name": "Morning Jogging",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1608:B": {
            "contestId": 1608,
            "index": "B",
            "name": "Build the Permutation",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1409:C": {
            "contestId": 1409,
            "index": "C",
            "name": "Yet Another Array Restoration",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1406:B": {
            "contestId": 1406,
            "index": "B",
            "name": "Maximum Product",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1437:B": {
            "contestId": 1437,
            "index": "B",
            "name": "Reverse Binary Strings",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1598:C": {
            "contestId": 1598,
            "index": "C",
            "name": "Delete Two Elements",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "1594:C": {
            "contestId": 1594,
            "index": "C",
            "name": "Make Them Equal",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "strings"
            ]
        },
        "1582:C": {
            "contestId": 1582,
            "index": "C",
            "name": "Grandma Capa Knits a Scarf",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "strings",
                "two pointers"
            ]
        },
        "1669:E": {
            "contestId": 1669,
            "index": "E",
            "name": "2-Letter Strings",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "math",
                "strings"
            ]
        },
        "1754:C1": {
            "contestId": 1754,
            "index": "C1",
            "name": "Make Nonzero Sum (easy version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1546:A": {
            "contestId": 1546,
            "index": "A",
            "name": "AquaMoon and Two Arrays",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "1676:G": {
            "contestId": 1676,
            "index": "G",
            "name": "White-Black Balanced Subtrees",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "1711:B": {
            "contestId": 1711,
            "index": "B",
            "name": "Party",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "graphs"
            ]
        },
        "1764:C": {
            "contestId": 1764,
            "index": "C",
            "name": "Doremy's City Construction",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "graphs",
                "greedy"
            ]
        },
        "1675:C": {
            "contestId": 1675,
            "index": "C",
            "name": "Detective Task",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1705:C": {
            "contestId": 1705,
            "index": "C",
            "name": "Mark and His Unfinished Essay",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1748:D": {
            "contestId": 1748,
            "index": "D",
            "name": "ConstructOR ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "chinese remainder theorem",
                "combinatorics",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1748:B": {
            "contestId": 1748,
            "index": "B",
            "name": "Diverse Substrings",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1750:D": {
            "contestId": 1750,
            "index": "D",
            "name": "Count GCD",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        "1750:C": {
            "contestId": 1750,
            "index": "C",
            "name": "Complementary XOR",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1592:B": {
            "contestId": 1592,
            "index": "B",
            "name": "Hemose Shopping",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dsu",
                "math",
                "sortings"
            ]
        },
        "1512:C": {
            "contestId": 1512,
            "index": "C",
            "name": "A-B Palindrome",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        "1530:C": {
            "contestId": 1530,
            "index": "C",
            "name": "Pursuit",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1732:D1": {
            "contestId": 1732,
            "index": "D1",
            "name": "Balance (Easy version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "brute force",
                "data structures",
                "implementation",
                "number theory"
            ]
        },
        "1744:B": {
            "contestId": 1744,
            "index": "B",
            "name": "Even-Odd Increments ",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1746:C": {
            "contestId": 1746,
            "index": "C",
            "name": "Permutation Operations",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1013:A": {
            "contestId": 1013,
            "index": "A",
            "name": "Piles With Stones",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1251:C": {
            "contestId": 1251,
            "index": "C",
            "name": "Minimize The Integer",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        "702:C": {
            "contestId": 702,
            "index": "C",
            "name": "Cellular Network",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "implementation",
                "two pointers"
            ]
        },
        "1819:A": {
            "contestId": 1819,
            "index": "A",
            "name": "Constructive Problem",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "1243:B1": {
            "contestId": 1243,
            "index": "B1",
            "name": "Character Swap (Easy Version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "strings"
            ]
        },
        "1231:C": {
            "contestId": 1231,
            "index": "C",
            "name": "Increasing Matrix",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy"
            ]
        },
        "1230:B": {
            "contestId": 1230,
            "index": "B",
            "name": "Ania and Minimizing",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1225:B1": {
            "contestId": 1225,
            "index": "B1",
            "name": "TV Subscriptions (Easy Version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1223:B": {
            "contestId": 1223,
            "index": "B",
            "name": "Strings Equalization",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "strings"
            ]
        },
        "1221:C": {
            "contestId": 1221,
            "index": "C",
            "name": "Perfect Team",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1221:B": {
            "contestId": 1221,
            "index": "B",
            "name": "Knights",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1221:A": {
            "contestId": 1221,
            "index": "A",
            "name": "2048 Game",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1512:E": {
            "contestId": 1512,
            "index": "E",
            "name": "Permutation by Sum",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1117:C": {
            "contestId": 1117,
            "index": "C",
            "name": "Magic Ship",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search"
            ]
        },
        "1362:A": {
            "contestId": 1362,
            "index": "A",
            "name": "Johnny and Ancient Computer",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1822:F": {
            "contestId": 1822,
            "index": "F",
            "name": "Gardening Friends",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "1822:E": {
            "contestId": 1822,
            "index": "E",
            "name": "Making Anti-Palindromes",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy",
                "math",
                "strings"
            ]
        },
        "1216:B": {
            "contestId": 1216,
            "index": "B",
            "name": "Shooting",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "385:B": {
            "contestId": 385,
            "index": "B",
            "name": "Bear and Strings",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math",
                "strings"
            ]
        },
        "1815:A": {
            "contestId": 1815,
            "index": "A",
            "name": "Ian and Array Sorting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "165:C": {
            "contestId": 165,
            "index": "C",
            "name": "Another Problem on Strings",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "math",
                "strings",
                "two pointers"
            ]
        },
        "1704:C": {
            "contestId": 1704,
            "index": "C",
            "name": "Virus",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1703:F": {
            "contestId": 1703,
            "index": "F",
            "name": "Yet Another Problem About Pairs Satisfying an Inequality",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1794:C": {
            "contestId": 1794,
            "index": "C",
            "name": "Scoring Subsequences",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "two pointers"
            ]
        },
        "1726:C": {
            "contestId": 1726,
            "index": "C",
            "name": "Jatayu's Balanced Bracket Sequence",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        "1802:B": {
            "contestId": 1802,
            "index": "B",
            "name": "Settlement of Guinea Pigs",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1271:B": {
            "contestId": 1271,
            "index": "B",
            "name": "Blocks",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1281:B": {
            "contestId": 1281,
            "index": "B",
            "name": "Azamon Web Services",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "greedy"
            ]
        },
        "1561:A": {
            "contestId": 1561,
            "index": "A",
            "name": "Simply Strange Sort",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "sortings"
            ]
        },
        "1807:E": {
            "contestId": 1807,
            "index": "E",
            "name": "Interview",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "implementation",
                "interactive"
            ]
        },
        "1277:A": {
            "contestId": 1277,
            "index": "A",
            "name": "Happy Birthday, Polycarp!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1272:C": {
            "contestId": 1272,
            "index": "C",
            "name": "Yet Another Broken Keyboard",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "combinatorics",
                "dp",
                "implementation"
            ]
        },
        "1272:B": {
            "contestId": 1272,
            "index": "B",
            "name": "Snow Walking Robot",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1272:A": {
            "contestId": 1272,
            "index": "A",
            "name": "Three Friends",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1265:B": {
            "contestId": 1265,
            "index": "B",
            "name": "Beautiful Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "data structures",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "1265:A": {
            "contestId": 1265,
            "index": "A",
            "name": "Beautiful String",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1262:B": {
            "contestId": 1262,
            "index": "B",
            "name": "Box",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1263:A": {
            "contestId": 1263,
            "index": "A",
            "name": "Sweet Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1255:B": {
            "contestId": 1255,
            "index": "B",
            "name": "Fridge Lockers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "graphs",
                "implementation"
            ]
        },
        "1262:A": {
            "contestId": 1262,
            "index": "A",
            "name": "Math Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1255:A": {
            "contestId": 1255,
            "index": "A",
            "name": "Changing Volume",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1598:A": {
            "contestId": 1598,
            "index": "A",
            "name": "Computer Game",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "implementation"
            ]
        },
        "1799:A": {
            "contestId": 1799,
            "index": "A",
            "name": "Recent Actions",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1291:B": {
            "contestId": 1291,
            "index": "B",
            "name": "Array Sharpening",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1775:C": {
            "contestId": 1775,
            "index": "C",
            "name": "Interesting Sequence",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "math"
            ]
        },
        "1775:B": {
            "contestId": 1775,
            "index": "B",
            "name": "Gardener and the Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "1735:A": {
            "contestId": 1735,
            "index": "A",
            "name": "Working Week",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1738:A": {
            "contestId": 1738,
            "index": "A",
            "name": "Glory Addicts",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1618:A": {
            "contestId": 1618,
            "index": "A",
            "name": "Polycarp and Sums of Subsequences",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "331:C1": {
            "contestId": 331,
            "index": "C1",
            "name": "The Great Julya Calendar",
            "type": "PROGRAMMING",
            "points": 20,
            "rating": 1100,
            "tags": [
                "dp"
            ]
        },
        "1455:A": {
            "contestId": 1455,
            "index": "A",
            "name": "Strange Functions",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "513:A": {
            "contestId": 513,
            "index": "A",
            "name": "Game",
            "type": "PROGRAMMING",
            "points": 3,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1230:A": {
            "contestId": 1230,
            "index": "A",
            "name": "Dawid and Bags of Candies",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1438:A": {
            "contestId": 1438,
            "index": "A",
            "name": "Specific Tastes of Andre ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "599:A": {
            "contestId": 599,
            "index": "A",
            "name": "Patrick and Shopping",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1526:A": {
            "contestId": 1526,
            "index": "A",
            "name": "Mean Inequality",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1430:B": {
            "contestId": 1430,
            "index": "B",
            "name": "Barrels",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1287:A": {
            "contestId": 1287,
            "index": "A",
            "name": "Angry Students",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1061:A": {
            "contestId": 1061,
            "index": "A",
            "name": "Coins",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1440:A": {
            "contestId": 1440,
            "index": "A",
            "name": "Buy the String",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1605:A": {
            "contestId": 1605,
            "index": "A",
            "name": "A.M. Deviation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1006:A": {
            "contestId": 1006,
            "index": "A",
            "name": "Adjacent Replacements",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1257:A": {
            "contestId": 1257,
            "index": "A",
            "name": "Two Rival Students",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1482:A": {
            "contestId": 1482,
            "index": "A",
            "name": "Prison Break",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1015:A": {
            "contestId": 1015,
            "index": "A",
            "name": "Points in Segments",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1515:A": {
            "contestId": 1515,
            "index": "A",
            "name": "Phoenix and Gold",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1206:A": {
            "contestId": 1206,
            "index": "A",
            "name": "Choose Two Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "1005:A": {
            "contestId": 1005,
            "index": "A",
            "name": "Tanya and Stairways",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1509:A": {
            "contestId": 1509,
            "index": "A",
            "name": "Average Height",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1300:A": {
            "contestId": 1300,
            "index": "A",
            "name": "Non-zero",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1096:A": {
            "contestId": 1096,
            "index": "A",
            "name": "Find Divisible",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1285:A": {
            "contestId": 1285,
            "index": "A",
            "name": "Mezo Playing Zoma",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "102942:A": {
            "contestId": 102942,
            "index": "A",
            "name": "Directional Move",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1130:B": {
            "contestId": 1130,
            "index": "B",
            "name": "Two Cakes",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "1005:C": {
            "contestId": 1005,
            "index": "C",
            "name": "Summarize to the Power of Two",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "864:A": {
            "contestId": 864,
            "index": "A",
            "name": "Fair Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1238:A": {
            "contestId": 1238,
            "index": "A",
            "name": "Prime Subtraction",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1497:C1": {
            "contestId": 1497,
            "index": "C1",
            "name": "k-LCM (easy version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1008:A": {
            "contestId": 1008,
            "index": "A",
            "name": "Romaji",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "835:B": {
            "contestId": 835,
            "index": "B",
            "name": "The number on the board",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "greedy"
            ]
        },
        "962:A": {
            "contestId": 962,
            "index": "A",
            "name": "Equator",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "139:A": {
            "contestId": 139,
            "index": "A",
            "name": "Petr and Book",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1380:A": {
            "contestId": 1380,
            "index": "A",
            "name": "Three Indices",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "data structures"
            ]
        },
        "450:A": {
            "contestId": 450,
            "index": "A",
            "name": "Jzzhu and Children",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1591:B": {
            "contestId": 1591,
            "index": "B",
            "name": "Array Eversion",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1591:A": {
            "contestId": 1591,
            "index": "A",
            "name": "Life of a Flower",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "272:A": {
            "contestId": 272,
            "index": "A",
            "name": "Dima and Friends",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "248:A": {
            "contestId": 248,
            "index": "A",
            "name": "Cupboards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1199:A": {
            "contestId": 1199,
            "index": "A",
            "name": "City Day",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "449:B": {
            "contestId": 449,
            "index": "B",
            "name": "Jzzhu and Cities",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2000,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "935:A": {
            "contestId": 935,
            "index": "A",
            "name": "Fafa and his Company",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1301:A": {
            "contestId": 1301,
            "index": "A",
            "name": "Three Strings",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1303:A": {
            "contestId": 1303,
            "index": "A",
            "name": "Erasing Zeroes",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1400:A": {
            "contestId": 1400,
            "index": "A",
            "name": "String Similarity",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "20:C": {
            "contestId": 20,
            "index": "C",
            "name": "Dijkstra?",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        "1397:A": {
            "contestId": 1397,
            "index": "A",
            "name": "Juggling Letters",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "939:A": {
            "contestId": 939,
            "index": "A",
            "name": "Love Triangle",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "graphs"
            ]
        },
        "271:C": {
            "contestId": 271,
            "index": "C",
            "name": "Secret",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "271:B": {
            "contestId": 271,
            "index": "B",
            "name": "Prime Matrix",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1682:B": {
            "contestId": 1682,
            "index": "B",
            "name": "AND Sorting",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "sortings"
            ]
        },
        "735:D": {
            "contestId": 735,
            "index": "D",
            "name": "Taxes",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "736:B": {
            "contestId": 736,
            "index": "B",
            "name": "Taxes",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1359:A": {
            "contestId": 1359,
            "index": "A",
            "name": "Berland Poker",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1189:B": {
            "contestId": 1189,
            "index": "B",
            "name": "Number Circle",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1038:B": {
            "contestId": 1038,
            "index": "B",
            "name": "Non-Coprime Partition",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "630:D": {
            "contestId": 630,
            "index": "D",
            "name": "Hexagons!",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1358:A": {
            "contestId": 1358,
            "index": "A",
            "name": "Park Lighting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1337:A": {
            "contestId": 1337,
            "index": "A",
            "name": "Ichihime and Triangle",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "371:C": {
            "contestId": 371,
            "index": "C",
            "name": "Hamburgers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "brute force"
            ]
        },
        "1133:A": {
            "contestId": 1133,
            "index": "A",
            "name": "Middle of the Contest",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1644:B": {
            "contestId": 1644,
            "index": "B",
            "name": "Anti-Fibonacci Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        "1635:B": {
            "contestId": 1635,
            "index": "B",
            "name": "Avoid Local Maximums",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1635:A": {
            "contestId": 1635,
            "index": "A",
            "name": "Min Or Sum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "bitmasks",
                "greedy"
            ]
        },
        "1141:A": {
            "contestId": 1141,
            "index": "A",
            "name": "Game 23",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1793:B": {
            "contestId": 1793,
            "index": "B",
            "name": "Fedya and Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1199:B": {
            "contestId": 1199,
            "index": "B",
            "name": "Water Lily",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "1257:B": {
            "contestId": 1257,
            "index": "B",
            "name": "Magic Stick",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1165:B": {
            "contestId": 1165,
            "index": "B",
            "name": "Polycarp Training",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "610:A": {
            "contestId": 610,
            "index": "A",
            "name": "Pasha and Stick",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1249:B1": {
            "contestId": 1249,
            "index": "B1",
            "name": "Books Exchange (easy version)",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "dsu",
                "math"
            ]
        },
        "1579:E1": {
            "contestId": 1579,
            "index": "E1",
            "name": "Permutation Minimization by Deque",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1790:E": {
            "contestId": 1790,
            "index": "E",
            "name": "Vlad and a Pair of Numbers",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "1790:D": {
            "contestId": 1790,
            "index": "D",
            "name": "Matryoshkas",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1418:A": {
            "contestId": 1418,
            "index": "A",
            "name": "Buying Torches",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1293:B": {
            "contestId": 1293,
            "index": "B",
            "name": "JOE is on TV!",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "combinatorics",
                "greedy",
                "math"
            ]
        },
        "1300:B": {
            "contestId": 1300,
            "index": "B",
            "name": "Assigning to Classes",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "165:A": {
            "contestId": 165,
            "index": "A",
            "name": "Supercentral Point",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "680:B": {
            "contestId": 680,
            "index": "B",
            "name": "Bear and Finding Criminals",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1430:C": {
            "contestId": 1430,
            "index": "C",
            "name": "Numbers on Whiteboard",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1419:D1": {
            "contestId": 1419,
            "index": "D1",
            "name": "Sage's Birthday (easy version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1506:C": {
            "contestId": 1506,
            "index": "C",
            "name": "Double-ended Strings",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1388:B": {
            "contestId": 1388,
            "index": "B",
            "name": "Captain Flint and a Long Voyage",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1395:A": {
            "contestId": 1395,
            "index": "A",
            "name": "Boboniu Likes to Color Balls",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "732:B": {
            "contestId": 732,
            "index": "B",
            "name": "Cormen --- The Best Friend Of a Man",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1469:B": {
            "contestId": 1469,
            "index": "B",
            "name": "Red and Blue",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1373:A": {
            "contestId": 1373,
            "index": "A",
            "name": "Donut Shops",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1359:B": {
            "contestId": 1359,
            "index": "B",
            "name": "New Theatre Square",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "4:B": {
            "contestId": 4,
            "index": "B",
            "name": "Before an Exam",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1334:A": {
            "contestId": 1334,
            "index": "A",
            "name": "Level Statistics",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1537:C": {
            "contestId": 1537,
            "index": "C",
            "name": "Challenging Cliffs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1472:D": {
            "contestId": 1472,
            "index": "D",
            "name": "Even-Odd Game",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dp",
                "games",
                "greedy",
                "sortings"
            ]
        },
        "445:A": {
            "contestId": 445,
            "index": "A",
            "name": "DZY Loves Chessboard",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "dfs and similar",
                "implementation"
            ]
        },
        "459:A": {
            "contestId": 459,
            "index": "A",
            "name": "Pashmak and Garden",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1283:A": {
            "contestId": 1283,
            "index": "A",
            "name": "Minutes Before the New Year",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1370:A": {
            "contestId": 1370,
            "index": "A",
            "name": "Maximum GCD",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1833:D": {
            "contestId": 1833,
            "index": "D",
            "name": "Flipper",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1606:B": {
            "contestId": 1606,
            "index": "B",
            "name": "Update Files",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1609:B": {
            "contestId": 1609,
            "index": "B",
            "name": "William the Vigilant",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1593:D1": {
            "contestId": 1593,
            "index": "D1",
            "name": "All are Same",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1602:B": {
            "contestId": 1602,
            "index": "B",
            "name": "Divine Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1809:C": {
            "contestId": 1809,
            "index": "C",
            "name": "Sum on Subarrays",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1719:C": {
            "contestId": 1719,
            "index": "C",
            "name": "Fighting Tournament",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "implementation",
                "two pointers"
            ]
        },
        "1701:C": {
            "contestId": 1701,
            "index": "C",
            "name": "Schedule Management",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "1698:C": {
            "contestId": 1698,
            "index": "C",
            "name": "3SUM Closure",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "data structures"
            ]
        },
        "1696:C": {
            "contestId": 1696,
            "index": "C",
            "name": "Fishingprince Plays With Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1496:B": {
            "contestId": 1496,
            "index": "B",
            "name": "Max and Mex",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1798:D": {
            "contestId": 1798,
            "index": "D",
            "name": "Shocking Arrangement",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1693:A": {
            "contestId": 1693,
            "index": "A",
            "name": "Directional Increase",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1692:G": {
            "contestId": 1692,
            "index": "G",
            "name": "2^Sort",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "data structures",
                "dp",
                "sortings",
                "two pointers"
            ]
        },
        "1804:C": {
            "contestId": 1804,
            "index": "C",
            "name": "Pull Your Luck",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1131:C": {
            "contestId": 1131,
            "index": "C",
            "name": "Birthday",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1796:C": {
            "contestId": 1796,
            "index": "C",
            "name": "Maximum Set",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "676:C": {
            "contestId": 676,
            "index": "C",
            "name": "Vasya and String",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "binary search",
                "dp",
                "strings",
                "two pointers"
            ]
        },
        "604:B": {
            "contestId": 604,
            "index": "B",
            "name": "More Cowbell",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "675:B": {
            "contestId": 675,
            "index": "B",
            "name": "Restoring Painting",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        "1729:C": {
            "contestId": 1729,
            "index": "C",
            "name": "Jumping on Tiles",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "1799:B": {
            "contestId": 1799,
            "index": "B",
            "name": "Equalize by Divide",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1760:F": {
            "contestId": 1760,
            "index": "F",
            "name": "Quests",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1777:C": {
            "contestId": 1777,
            "index": "C",
            "name": "Quiz Master",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "math",
                "number theory",
                "sortings",
                "two pointers"
            ]
        },
        "75:C": {
            "contestId": 75,
            "index": "C",
            "name": "Modified GCD",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "number theory"
            ]
        },
        "580:B": {
            "contestId": 580,
            "index": "B",
            "name": "Kefa and Company",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "binary search",
                "sortings",
                "two pointers"
            ]
        },
        "1749:C": {
            "contestId": 1749,
            "index": "C",
            "name": "Number Game",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "games",
                "greedy",
                "implementation"
            ]
        },
        "1776:H": {
            "contestId": 1776,
            "index": "H",
            "name": "Beppa and SwerChat",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "two pointers"
            ]
        },
        "1776:A": {
            "contestId": 1776,
            "index": "A",
            "name": "Walking Boy",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1792:C": {
            "contestId": 1792,
            "index": "C",
            "name": "Min Max Sort",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "math",
                "two pointers"
            ]
        },
        "702:A": {
            "contestId": 702,
            "index": "A",
            "name": "Maximum Increase",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1769:A": {
            "contestId": 1769,
            "index": "A",
            "name": "Узкая дорога",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "*special",
                "math"
            ]
        },
        "1773:F": {
            "contestId": 1773,
            "index": "F",
            "name": "Football",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1781:A": {
            "contestId": 1781,
            "index": "A",
            "name": "Parallel Projection",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "92:B": {
            "contestId": 92,
            "index": "B",
            "name": "Binary Number",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "103471:2": {
            "contestId": 103471,
            "index": "2",
            "name": "Фишки на поле",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103471:1": {
            "contestId": 103471,
            "index": "1",
            "name": "Камень в море",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1744:E2": {
            "contestId": 1744,
            "index": "E2",
            "name": "Divisible Numbers (hard version)",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1768:C": {
            "contestId": 1768,
            "index": "C",
            "name": "Elemental Decompress",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1770:C": {
            "contestId": 1770,
            "index": "C",
            "name": "Koxia and Number Theory",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "brute force",
                "chinese remainder theorem",
                "math",
                "number theory"
            ]
        },
        "1744:E1": {
            "contestId": 1744,
            "index": "E1",
            "name": "Divisible Numbers (easy version)",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "118:D": {
            "contestId": 118,
            "index": "D",
            "name": "Caesar's Legions",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dp"
            ]
        },
        "106:C": {
            "contestId": 106,
            "index": "C",
            "name": "Buns",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dp"
            ]
        },
        "104096:E": {
            "contestId": 104096,
            "index": "E",
            "name": "Участок на берегу",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104096:A": {
            "contestId": 104096,
            "index": "A",
            "name": "Праздничный торт",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1748:C": {
            "contestId": 1748,
            "index": "C",
            "name": "Zero-Sum Prefixes",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1722:E": {
            "contestId": 1722,
            "index": "E",
            "name": "Counting Rectangles",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "implementation"
            ]
        },
        "1505:A": {
            "contestId": 1505,
            "index": "A",
            "name": "Is it rated - 2",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "*special",
                "implementation",
                "interactive"
            ]
        },
        "714:B": {
            "contestId": 714,
            "index": "B",
            "name": "Filya and Homework",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "714:A": {
            "contestId": 714,
            "index": "A",
            "name": "Meeting of Old Friends",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1368:A": {
            "contestId": 1368,
            "index": "A",
            "name": "C+=",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1738:C": {
            "contestId": 1738,
            "index": "C",
            "name": "Even Number Addicts",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "dp",
                "games",
                "greedy",
                "math"
            ]
        },
        "253:A": {
            "contestId": 253,
            "index": "A",
            "name": "Boys and Girls",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy"
            ]
        },
        "999:A": {
            "contestId": 999,
            "index": "A",
            "name": "Mishka and Contest",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "982:A": {
            "contestId": 982,
            "index": "A",
            "name": "Row",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        "637:A": {
            "contestId": 637,
            "index": "A",
            "name": "Voting for Photos",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "*special",
                "constructive algorithms",
                "implementation"
            ]
        },
        "638:A": {
            "contestId": 638,
            "index": "A",
            "name": "Home Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "*special",
                "constructive algorithms",
                "math"
            ]
        },
        "633:A": {
            "contestId": 633,
            "index": "A",
            "name": "Ebony and Ivory",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 1100,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "520:B": {
            "contestId": 520,
            "index": "B",
            "name": "Two Buttons",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy",
                "implementation",
                "math",
                "shortest paths"
            ]
        },
        "598:A": {
            "contestId": 598,
            "index": "A",
            "name": "Tricky Sum",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1427:A": {
            "contestId": 1427,
            "index": "A",
            "name": "Avoiding Zero",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "796:A": {
            "contestId": 796,
            "index": "A",
            "name": "Buying A House",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "300:A": {
            "contestId": 300,
            "index": "A",
            "name": "Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        "822:A": {
            "contestId": 822,
            "index": "A",
            "name": "I'm bored with life",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        "673:A": {
            "contestId": 673,
            "index": "A",
            "name": "Bear and Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "628:A": {
            "contestId": 628,
            "index": "A",
            "name": "Tennis Tournament",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "828:A": {
            "contestId": 828,
            "index": "A",
            "name": "Restaurant Tables",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "669:A": {
            "contestId": 669,
            "index": "A",
            "name": "Little Artem and Presents",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1370:C": {
            "contestId": 1370,
            "index": "C",
            "name": "Number Game",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "games",
                "math",
                "number theory"
            ]
        },
        "1733:D1": {
            "contestId": 1733,
            "index": "D1",
            "name": "Zero-One (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1331:D": {
            "contestId": 1331,
            "index": "D",
            "name": "Again?",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "656:F": {
            "contestId": 656,
            "index": "F",
            "name": "Ace It!",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "*special"
            ]
        },
        "92:A": {
            "contestId": 92,
            "index": "A",
            "name": "Chips",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "146:A": {
            "contestId": 146,
            "index": "A",
            "name": "Lucky Ticket",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1689:B": {
            "contestId": 1689,
            "index": "B",
            "name": "Mystic Permutation",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "1696:B": {
            "contestId": 1696,
            "index": "B",
            "name": "NIT Destroys the Universe",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1132:B": {
            "contestId": 1132,
            "index": "B",
            "name": "Discounts",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "334:A": {
            "contestId": 334,
            "index": "A",
            "name": "Candy Bags",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1253:A": {
            "contestId": 1253,
            "index": "A",
            "name": "Single Push",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "697:A": {
            "contestId": 697,
            "index": "A",
            "name": "Pineapple Incident",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1138:A": {
            "contestId": 1138,
            "index": "A",
            "name": "Sushi for Two",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "binary search",
                "greedy",
                "implementation"
            ]
        },
        "1080:B": {
            "contestId": 1080,
            "index": "B",
            "name": "Margarite and the best present",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1606:A": {
            "contestId": 1606,
            "index": "A",
            "name": "AB Balance",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "strings"
            ]
        },
        "1406:A": {
            "contestId": 1406,
            "index": "A",
            "name": "Subset Mex",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1283:B": {
            "contestId": 1283,
            "index": "B",
            "name": "Candies Division",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "588:A": {
            "contestId": 588,
            "index": "A",
            "name": "Duff and Meat",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1543:B": {
            "contestId": 1543,
            "index": "B",
            "name": "Customising the Track",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "combinatorics",
                "greedy",
                "math"
            ]
        },
        "1213:A": {
            "contestId": 1213,
            "index": "A",
            "name": "Chips Moving",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1420:A": {
            "contestId": 1420,
            "index": "A",
            "name": "Cubes Sorting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "1471:A": {
            "contestId": 1471,
            "index": "A",
            "name": "Strange Partition",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "439:A": {
            "contestId": 439,
            "index": "A",
            "name": "Devu, the Singer and Churu, the Joker",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "276:A": {
            "contestId": 276,
            "index": "A",
            "name": "Lunch Rush",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1401:A": {
            "contestId": 1401,
            "index": "A",
            "name": "Distance and Axis",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1341:A": {
            "contestId": 1341,
            "index": "A",
            "name": "Nastya and Rice",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "459:B": {
            "contestId": 459,
            "index": "B",
            "name": "Pashmak and Flowers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "implementation",
                "sortings"
            ]
        },
        "1687:A": {
            "contestId": 1687,
            "index": "A",
            "name": "The Enchanted Forest",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "1635:C": {
            "contestId": 1635,
            "index": "C",
            "name": "Differential Sorting",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1686:C": {
            "contestId": 1686,
            "index": "C",
            "name": "Circular Local MiniMax",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1618:C": {
            "contestId": 1618,
            "index": "C",
            "name": "Paint the Array",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1676:F": {
            "contestId": 1676,
            "index": "F",
            "name": "Longest Strike",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        "1670:B": {
            "contestId": 1670,
            "index": "B",
            "name": "Dorms War",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1671:C": {
            "contestId": 1671,
            "index": "C",
            "name": "Dolce Vita",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1672:C": {
            "contestId": 1672,
            "index": "C",
            "name": "Unequal Array",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1352:G": {
            "contestId": 1352,
            "index": "G",
            "name": "Special Permutation",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1633:C": {
            "contestId": 1633,
            "index": "C",
            "name": "Kill the Monster",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1654:B": {
            "contestId": 1654,
            "index": "B",
            "name": "Prefix Removals",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "strings"
            ]
        },
        "152:A": {
            "contestId": 152,
            "index": "A",
            "name": "Marks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1649:B": {
            "contestId": 1649,
            "index": "B",
            "name": "Game of Ball Passing",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1574:A": {
            "contestId": 1574,
            "index": "A",
            "name": "Regular Bracket Sequences",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "52:A": {
            "contestId": 52,
            "index": "A",
            "name": "123-sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1642:A": {
            "contestId": 1642,
            "index": "A",
            "name": "Hard Way",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry"
            ]
        },
        "101982:A": {
            "contestId": 101982,
            "index": "A",
            "name": "Exam",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1622:F": {
            "contestId": 1622,
            "index": "F",
            "name": "Quadratic Set",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "hashing",
                "math",
                "number theory"
            ]
        },
        "804:A": {
            "contestId": 804,
            "index": "A",
            "name": "Find Amir",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "870:B": {
            "contestId": 870,
            "index": "B",
            "name": "Maximum of Maximums of Minimums",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "1634:B": {
            "contestId": 1634,
            "index": "B",
            "name": "Fortune Telling",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "bitmasks",
                "math"
            ]
        },
        "1165:A": {
            "contestId": 1165,
            "index": "A",
            "name": "Remainder",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1620:A": {
            "contestId": 1620,
            "index": "A",
            "name": "Equal or Not Equal",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "dsu",
                "implementation"
            ]
        },
        "25:B": {
            "contestId": 25,
            "index": "B",
            "name": "Phone numbers",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1642:B": {
            "contestId": 1642,
            "index": "B",
            "name": "Power Walking",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1616:B": {
            "contestId": 1616,
            "index": "B",
            "name": "Mirror in the String",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "797:A": {
            "contestId": 797,
            "index": "A",
            "name": "k-Factorization",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        "946:B": {
            "contestId": 946,
            "index": "B",
            "name": "Weird Subtraction Process",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "59:B": {
            "contestId": 59,
            "index": "B",
            "name": "Fortune Telling",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "number theory"
            ]
        },
        "1184:A1": {
            "contestId": 1184,
            "index": "A1",
            "name": "Heidi Learns Hashing (Easy)",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1051:B": {
            "contestId": 1051,
            "index": "B",
            "name": "Relatively Prime Pairs",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1033:B": {
            "contestId": 1033,
            "index": "B",
            "name": "Square Difference",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "735:B": {
            "contestId": 735,
            "index": "B",
            "name": "Urbanization",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "number theory",
                "sortings"
            ]
        },
        "299:A": {
            "contestId": 299,
            "index": "A",
            "name": "Ksusha and Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "number theory",
                "sortings"
            ]
        },
        "1333:B": {
            "contestId": 1333,
            "index": "B",
            "name": "Kind Anton",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1015:C": {
            "contestId": 1015,
            "index": "C",
            "name": "Songs Compression",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "sortings"
            ]
        },
        "740:B": {
            "contestId": 740,
            "index": "B",
            "name": "Alyona and flowers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1108:B": {
            "contestId": 1108,
            "index": "B",
            "name": "Divisors of Two Integers",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1463:A": {
            "contestId": 1463,
            "index": "A",
            "name": "Dungeon",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1611:C": {
            "contestId": 1611,
            "index": "C",
            "name": "Polycarp Recovers the Permutation",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "327:B": {
            "contestId": 327,
            "index": "B",
            "name": "Hungry Sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "math"
            ]
        },
        "328:A": {
            "contestId": 328,
            "index": "A",
            "name": "IQ Test",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1800,
            "tags": [
                "implementation"
            ]
        },
        "1157:C1": {
            "contestId": 1157,
            "index": "C1",
            "name": "Increasing Subsequence (easy version)",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "847:M": {
            "contestId": 847,
            "index": "M",
            "name": "Weather Tomorrow",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1090:M": {
            "contestId": 1090,
            "index": "M",
            "name": "The Pleasant Walk",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "887:A": {
            "contestId": 887,
            "index": "A",
            "name": "Div. 64",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1411:A": {
            "contestId": 1411,
            "index": "A",
            "name": "In-game Chat",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1363:B": {
            "contestId": 1363,
            "index": "B",
            "name": "Subsequence Hate",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "221:A": {
            "contestId": 221,
            "index": "A",
            "name": "Little Elephant and Function",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "746:A": {
            "contestId": 746,
            "index": "A",
            "name": "Compote",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1091:A": {
            "contestId": 1091,
            "index": "A",
            "name": "New Year and the Christmas Ornament",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1175:A": {
            "contestId": 1175,
            "index": "A",
            "name": "From Hero to Zero",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1004:A": {
            "contestId": 1004,
            "index": "A",
            "name": "Sonya and Hotels",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "421:A": {
            "contestId": 421,
            "index": "A",
            "name": "Pasha and Hamsters",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1372:A": {
            "contestId": 1372,
            "index": "A",
            "name": "Omkar and Completion",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1183:B": {
            "contestId": 1183,
            "index": "B",
            "name": "Equalize Prices",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "734:B": {
            "contestId": 734,
            "index": "B",
            "name": "Anton and Digits",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1234:A": {
            "contestId": 1234,
            "index": "A",
            "name": "Equalize Prices Again",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1511:A": {
            "contestId": 1511,
            "index": "A",
            "name": "Review Site",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "205:A": {
            "contestId": 205,
            "index": "A",
            "name": "Little Elephant and Rozdil",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1348:A": {
            "contestId": 1348,
            "index": "A",
            "name": "Phoenix and Balance",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "122:B": {
            "contestId": 122,
            "index": "B",
            "name": "Lucky Substring",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1153:A": {
            "contestId": 1153,
            "index": "A",
            "name": "Serval and Bus",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "5:A": {
            "contestId": 5,
            "index": "A",
            "name": "Chat Servers Outgoing Traffic",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "998:A": {
            "contestId": 998,
            "index": "A",
            "name": "Balloons",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "909:A": {
            "contestId": 909,
            "index": "A",
            "name": "Generate Login",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "888:B": {
            "contestId": 888,
            "index": "B",
            "name": "Buggy Robot",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "1023:B": {
            "contestId": 1023,
            "index": "B",
            "name": "Pair of Toys",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "844:A": {
            "contestId": 844,
            "index": "A",
            "name": "Diversity",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "336:A": {
            "contestId": 336,
            "index": "A",
            "name": "Vasily the Bear and Triangle",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "652:B": {
            "contestId": 652,
            "index": "B",
            "name": "z-sort",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "sortings"
            ]
        },
        "864:B": {
            "contestId": 864,
            "index": "B",
            "name": "Polycarp and Letters",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1734:B": {
            "contestId": 1734,
            "index": "B",
            "name": "Bright, Nice, Brilliant",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "56:A": {
            "contestId": 56,
            "index": "A",
            "name": "Bar",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "106:B": {
            "contestId": 106,
            "index": "B",
            "name": "Choosing Laptop",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "106:A": {
            "contestId": 106,
            "index": "A",
            "name": "Card Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "368:A": {
            "contestId": 368,
            "index": "A",
            "name": "Sereja and Coat Rack",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1084:A": {
            "contestId": 1084,
            "index": "A",
            "name": "The Fair Nut and Elevator",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "29:A": {
            "contestId": 29,
            "index": "A",
            "name": "Spit Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force"
            ]
        },
        "939:B": {
            "contestId": 939,
            "index": "B",
            "name": "Hamster Farm",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "757:A": {
            "contestId": 757,
            "index": "A",
            "name": "Gotta Catch Em' All!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "127:B": {
            "contestId": 127,
            "index": "B",
            "name": "Canvas Frames",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "660:B": {
            "contestId": 660,
            "index": "B",
            "name": "Seating On Bus",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "74:A": {
            "contestId": 74,
            "index": "A",
            "name": "Room Leader",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "641:A": {
            "contestId": 641,
            "index": "A",
            "name": "Little Artem and Grasshopper",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "35:A": {
            "contestId": 35,
            "index": "A",
            "name": "Shell Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "182:B": {
            "contestId": 182,
            "index": "B",
            "name": "Vasya's Calendar",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "14:B": {
            "contestId": 14,
            "index": "B",
            "name": "Young Photographer",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "420:A": {
            "contestId": 420,
            "index": "A",
            "name": "Start Up",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1619:C": {
            "contestId": 1619,
            "index": "C",
            "name": "Wrong Addition",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1781:B": {
            "contestId": 1781,
            "index": "B",
            "name": "Going to the Cinema",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "964:B": {
            "contestId": 964,
            "index": "B",
            "name": "Messages",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "math"
            ]
        },
        "1425:H": {
            "contestId": 1425,
            "index": "H",
            "name": "Huge Boxes of Animal Toys",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        "304:B": {
            "contestId": 304,
            "index": "B",
            "name": "Calendar",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "924:A": {
            "contestId": 924,
            "index": "A",
            "name": "Mystical Mosaic",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1637:C": {
            "contestId": 1637,
            "index": "C",
            "name": "Andrew and Stones",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "926:A": {
            "contestId": 926,
            "index": "A",
            "name": "2-3-numbers",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "203:B": {
            "contestId": 203,
            "index": "B",
            "name": "Game on Paper",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "828:B": {
            "contestId": 828,
            "index": "B",
            "name": "Black Square",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1267:B": {
            "contestId": 1267,
            "index": "B",
            "name": "Balls of Buma",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": []
        },
        "1154:B": {
            "contestId": 1154,
            "index": "B",
            "name": "Make Them Equal",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "math"
            ]
        },
        "883:F": {
            "contestId": 883,
            "index": "F",
            "name": "Lost in Transliteration",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1371:B": {
            "contestId": 1371,
            "index": "B",
            "name": "Magical Calendar",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "math"
            ]
        },
        "765:C": {
            "contestId": 765,
            "index": "C",
            "name": "Table Tennis Game 2",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "math"
            ]
        },
        "920:B": {
            "contestId": 920,
            "index": "B",
            "name": "Tea Queue",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "639:A": {
            "contestId": 639,
            "index": "A",
            "name": "Bear and Displayed Friends",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "725:B": {
            "contestId": 725,
            "index": "B",
            "name": "Food on the Plane",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "592:B": {
            "contestId": 592,
            "index": "B",
            "name": "The Monster and the Squirrel",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "985:A": {
            "contestId": 985,
            "index": "A",
            "name": "Chess Placing",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "813:A": {
            "contestId": 813,
            "index": "A",
            "name": "The Contest",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "789:A": {
            "contestId": 789,
            "index": "A",
            "name": "Anastasia and pebbles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "402:A": {
            "contestId": 402,
            "index": "A",
            "name": "Nuts",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "355:B": {
            "contestId": 355,
            "index": "B",
            "name": "Vasya and Public Transport",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "292:A": {
            "contestId": 292,
            "index": "A",
            "name": "SMSC",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "316:A1": {
            "contestId": 316,
            "index": "A1",
            "name": "Special Task",
            "type": "PROGRAMMING",
            "points": 30,
            "rating": 1100,
            "tags": [
                "greedy"
            ]
        },
        "366:A": {
            "contestId": 366,
            "index": "A",
            "name": "Dima and Guards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "583:A": {
            "contestId": 583,
            "index": "A",
            "name": "Asphalting Roads",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "753:A": {
            "contestId": 753,
            "index": "A",
            "name": "Santa Claus and Candies",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "886:A": {
            "contestId": 886,
            "index": "A",
            "name": "ACM ICPC",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force"
            ]
        },
        "779:A": {
            "contestId": 779,
            "index": "A",
            "name": "Pupils Redistribution",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "777:A": {
            "contestId": 777,
            "index": "A",
            "name": "Shell Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "259:A": {
            "contestId": 259,
            "index": "A",
            "name": "Little Elephant and Chess",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "strings"
            ]
        },
        "816:A": {
            "contestId": 816,
            "index": "A",
            "name": "Karen and Morning",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1040:A": {
            "contestId": 1040,
            "index": "A",
            "name": "Palindrome Dance",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "359:A": {
            "contestId": 359,
            "index": "A",
            "name": "Table",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "491:A": {
            "contestId": 491,
            "index": "A",
            "name": "Up the hill",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "691:A": {
            "contestId": 691,
            "index": "A",
            "name": "Fashion in Berland",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1020:A": {
            "contestId": 1020,
            "index": "A",
            "name": "New Building for SIS",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "616:B": {
            "contestId": 616,
            "index": "B",
            "name": "Dinner with Emma",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "games",
                "greedy"
            ]
        },
        "465:B": {
            "contestId": 465,
            "index": "B",
            "name": "Inbox (100500)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "831:A": {
            "contestId": 831,
            "index": "A",
            "name": "Unimodal Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "608:A": {
            "contestId": 608,
            "index": "A",
            "name": "Saitama Destroys Hotel",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "604:A": {
            "contestId": 604,
            "index": "A",
            "name": "Uncowed Forces",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "849:A": {
            "contestId": 849,
            "index": "A",
            "name": "Odds and Ends",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1539:B": {
            "contestId": 1539,
            "index": "B",
            "name": "Love Song",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "dp",
                "implementation",
                "strings"
            ]
        },
        "670:B": {
            "contestId": 670,
            "index": "B",
            "name": "Game of Robots",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "920:A": {
            "contestId": 920,
            "index": "A",
            "name": "Water The Garden",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "195:A": {
            "contestId": 195,
            "index": "A",
            "name": "Let's Watch Football",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "binary search",
                "brute force",
                "math"
            ]
        },
        "125:B": {
            "contestId": 125,
            "index": "B",
            "name": "Simple XML",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "725:A": {
            "contestId": 725,
            "index": "A",
            "name": "Jumping Ball",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "859:B": {
            "contestId": 859,
            "index": "B",
            "name": "Lazy Security Guard",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "brute force",
                "geometry",
                "math"
            ]
        },
        "13:A": {
            "contestId": 13,
            "index": "A",
            "name": "Numbers",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "357:A": {
            "contestId": 357,
            "index": "A",
            "name": "Group of Students",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "284:B": {
            "contestId": 284,
            "index": "B",
            "name": "Cows and Poker Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1054:B": {
            "contestId": 1054,
            "index": "B",
            "name": "Appending Mex",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "250:A": {
            "contestId": 250,
            "index": "A",
            "name": "Paper Work",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "626:A": {
            "contestId": 626,
            "index": "A",
            "name": "Robot Sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "90:A": {
            "contestId": 90,
            "index": "A",
            "name": "Cableway",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "371:A": {
            "contestId": 371,
            "index": "A",
            "name": "K-Periodic Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "120:A": {
            "contestId": 120,
            "index": "A",
            "name": "Elevator",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "644:A": {
            "contestId": 644,
            "index": "A",
            "name": "Parliament of Berland",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        "1252:A": {
            "contestId": 1252,
            "index": "A",
            "name": "Copying Homework",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": []
        },
        "177:B1": {
            "contestId": 177,
            "index": "B1",
            "name": "Rectangular Game",
            "type": "PROGRAMMING",
            "points": 30,
            "rating": 1000,
            "tags": [
                "number theory"
            ]
        },
        "958:B1": {
            "contestId": 958,
            "index": "B1",
            "name": "Maximum Control (easy)",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1177:A": {
            "contestId": 1177,
            "index": "A",
            "name": "Digits Sequence (Easy Edition)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "452:A": {
            "contestId": 452,
            "index": "A",
            "name": "Eevee",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1008:B": {
            "contestId": 1008,
            "index": "B",
            "name": "Turn the Rectangles",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1036:A": {
            "contestId": 1036,
            "index": "A",
            "name": "Function Height",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "990:A": {
            "contestId": 990,
            "index": "A",
            "name": "Commentary Boxes",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "967:B": {
            "contestId": 967,
            "index": "B",
            "name": "Watering System",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "981:B": {
            "contestId": 981,
            "index": "B",
            "name": "Businessmen Problems",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "sortings"
            ]
        },
        "400:A": {
            "contestId": 400,
            "index": "A",
            "name": "Inna and Choose Options",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "234:B": {
            "contestId": 234,
            "index": "B",
            "name": "Reading",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "sortings"
            ]
        },
        "991:A": {
            "contestId": 991,
            "index": "A",
            "name": "If at first you don't succeed...",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1519:B": {
            "contestId": 1519,
            "index": "B",
            "name": "The Cake Is a Lie",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "dp",
                "math"
            ]
        },
        "474:D": {
            "contestId": 474,
            "index": "D",
            "name": "Flowers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dp"
            ]
        },
        "1715:C": {
            "contestId": 1715,
            "index": "C",
            "name": "Monoblock",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "combinatorics",
                "data structures",
                "implementation",
                "math"
            ]
        },
        "1133:F1": {
            "contestId": 1133,
            "index": "F1",
            "name": "Spanning Tree with Maximum Degree",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "graphs"
            ]
        },
        "104180:C": {
            "contestId": 104180,
            "index": "C",
            "name": "Brownie Baking",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104180:B": {
            "contestId": 104180,
            "index": "B",
            "name": "Rain Collector",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104180:A": {
            "contestId": 104180,
            "index": "A",
            "name": "Weather Forecast",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1773:E": {
            "contestId": 1773,
            "index": "E",
            "name": "Easy Assembly",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1766:C": {
            "contestId": 1766,
            "index": "C",
            "name": "Hamiltonian Wall",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "18:C": {
            "contestId": 18,
            "index": "C",
            "name": "Stripe",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "485:A": {
            "contestId": 485,
            "index": "A",
            "name": "Factory",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation",
                "math",
                "matrices"
            ]
        },
        "83:A": {
            "contestId": 83,
            "index": "A",
            "name": "Magical Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "math"
            ]
        },
        "265:B": {
            "contestId": 265,
            "index": "B",
            "name": "Roadside Trees (Simplified Edition)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1728:C": {
            "contestId": 1728,
            "index": "C",
            "name": "Digital Logarithm",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1249:B2": {
            "contestId": 1249,
            "index": "B2",
            "name": "Books Exchange (hard version)",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "dsu",
                "math"
            ]
        },
        "920:C": {
            "contestId": 920,
            "index": "C",
            "name": "Swap Adjacent Elements",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "greedy",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "546:C": {
            "contestId": 546,
            "index": "C",
            "name": "Soldier and Cards",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "brute force",
                "dfs and similar",
                "games"
            ]
        },
        "977:D": {
            "contestId": 977,
            "index": "D",
            "name": "Divide by three, multiply by two",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "math",
                "sortings"
            ]
        },
        "534:B": {
            "contestId": 534,
            "index": "B",
            "name": "Covered Path",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1195:C": {
            "contestId": 1195,
            "index": "C",
            "name": "Basketball Exercise",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "dp"
            ]
        },
        "698:A": {
            "contestId": 698,
            "index": "A",
            "name": "Vacations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "dp"
            ]
        },
        "180:C": {
            "contestId": 180,
            "index": "C",
            "name": "Letter",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dp"
            ]
        },
        "1837:D": {
            "contestId": 1837,
            "index": "D",
            "name": "Bracket Coloring",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "182:D": {
            "contestId": 182,
            "index": "D",
            "name": "Common Divisors",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "hashing",
                "implementation",
                "math",
                "strings"
            ]
        },
        "1823:C": {
            "contestId": 1823,
            "index": "C",
            "name": "Strongly Composite",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1759:D": {
            "contestId": 1759,
            "index": "D",
            "name": "Make It Round",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "number theory"
            ]
        },
        "1772:D": {
            "contestId": 1772,
            "index": "D",
            "name": "Absolute Sorting",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "295:B": {
            "contestId": 295,
            "index": "B",
            "name": "Greg and Graph",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        "1826:C": {
            "contestId": 1826,
            "index": "C",
            "name": "Dreaming of Freedom",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1814:C": {
            "contestId": 1814,
            "index": "C",
            "name": "Search in Parallel",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "219:C": {
            "contestId": 219,
            "index": "C",
            "name": "Color Stripe",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1807:F": {
            "contestId": 1807,
            "index": "F",
            "name": "Bouncy Ball",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "dfs and similar",
                "implementation"
            ]
        },
        "29:B": {
            "contestId": 29,
            "index": "B",
            "name": "Traffic Lights",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "implementation"
            ]
        },
        "31:B": {
            "contestId": 31,
            "index": "B",
            "name": "Sysadmin Bob",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "31:A": {
            "contestId": 31,
            "index": "A",
            "name": "Worms Evolution",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1692:F": {
            "contestId": 1692,
            "index": "F",
            "name": "3SUM",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1717:C": {
            "contestId": 1717,
            "index": "C",
            "name": "Madoka and Formal Statement",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1227:A": {
            "contestId": 1227,
            "index": "A",
            "name": "Math Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1753:A1": {
            "contestId": 1753,
            "index": "A1",
            "name": "Make Nonzero Sum (easy version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "1266:A": {
            "contestId": 1266,
            "index": "A",
            "name": "Competitive Programmer",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "chinese remainder theorem",
                "math"
            ]
        },
        "980:A": {
            "contestId": 980,
            "index": "A",
            "name": "Links and Pearls",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "389:A": {
            "contestId": 389,
            "index": "A",
            "name": "Fox and Number Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "558:A": {
            "contestId": 558,
            "index": "A",
            "name": "Lala Land and Apple Trees",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "sortings"
            ]
        },
        "53:A": {
            "contestId": 53,
            "index": "A",
            "name": "Autocomplete",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "495:A": {
            "contestId": 495,
            "index": "A",
            "name": "Digital Counter",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "525:A": {
            "contestId": 525,
            "index": "A",
            "name": "Vitaliy and Pie",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 1100,
            "tags": [
                "greedy",
                "hashing",
                "strings"
            ]
        },
        "1388:A": {
            "contestId": 1388,
            "index": "A",
            "name": "Captain Flint and Crew Recruitment",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1478:A": {
            "contestId": 1478,
            "index": "A",
            "name": "Nezzar and Colorful Balls",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "1487:A": {
            "contestId": 1487,
            "index": "A",
            "name": "Arena",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1095:A": {
            "contestId": 1095,
            "index": "A",
            "name": "Repeating Cipher",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "119:A": {
            "contestId": 119,
            "index": "A",
            "name": "Epic Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1462:B": {
            "contestId": 1462,
            "index": "B",
            "name": "Last Year's Substring",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "dp",
                "implementation",
                "strings"
            ]
        },
        "1077:A": {
            "contestId": 1077,
            "index": "A",
            "name": "Frog Jumping",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1382:A": {
            "contestId": 1382,
            "index": "A",
            "name": "Common Subsequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "1632:A": {
            "contestId": 1632,
            "index": "A",
            "name": "ABC",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1398:A": {
            "contestId": 1398,
            "index": "A",
            "name": "Bad Triangle",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "214:A": {
            "contestId": 214,
            "index": "A",
            "name": "System of Equations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "1454:B": {
            "contestId": 1454,
            "index": "B",
            "name": "Unique Bid Auction",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1631:A": {
            "contestId": 1631,
            "index": "A",
            "name": "Min Max Swap",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "101992:B": {
            "contestId": 101992,
            "index": "B",
            "name": "The first task",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101992:F": {
            "contestId": 101992,
            "index": "F",
            "name": "MO Salah running down the wing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1706:B": {
            "contestId": 1706,
            "index": "B",
            "name": "Making Towers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1066:C": {
            "contestId": 1066,
            "index": "C",
            "name": "Books Queries",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "implementation"
            ]
        },
        "296:C": {
            "contestId": 296,
            "index": "C",
            "name": "Greg and Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "data structures",
                "dp",
                "implementation"
            ]
        },
        "1673:B": {
            "contestId": 1673,
            "index": "B",
            "name": "A Perfectly Balanced String?",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "strings"
            ]
        },
        "1204:B": {
            "contestId": 1204,
            "index": "B",
            "name": "Mislove Has Lost an Array",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1093:B": {
            "contestId": 1093,
            "index": "B",
            "name": "Letters Rearranging",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        "1047:B": {
            "contestId": 1047,
            "index": "B",
            "name": "Cover Points",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "1016:A": {
            "contestId": 1016,
            "index": "A",
            "name": "Death Note",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1401:B": {
            "contestId": 1401,
            "index": "B",
            "name": "Ternary Sequence",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1468:E": {
            "contestId": 1468,
            "index": "E",
            "name": "Four Segments",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "991:B": {
            "contestId": 991,
            "index": "B",
            "name": "Getting an A",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "764:B": {
            "contestId": 764,
            "index": "B",
            "name": "Timofey and cubes",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "935:B": {
            "contestId": 935,
            "index": "B",
            "name": "Fafa and the Gates",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "801:B": {
            "contestId": 801,
            "index": "B",
            "name": "Valued Keys",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1391:B": {
            "contestId": 1391,
            "index": "B",
            "name": "Fix You",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1391:A": {
            "contestId": 1391,
            "index": "A",
            "name": "Suborrays",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1426:B": {
            "contestId": 1426,
            "index": "B",
            "name": "Symmetric Matrix",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1440:B": {
            "contestId": 1440,
            "index": "B",
            "name": "Sum of Medians",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "847:G": {
            "contestId": 847,
            "index": "G",
            "name": "University Classes",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "412:B": {
            "contestId": 412,
            "index": "B",
            "name": "Network Configuration",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "299:B": {
            "contestId": 299,
            "index": "B",
            "name": "Ksusha the Squirrel",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "16:B": {
            "contestId": 16,
            "index": "B",
            "name": "Burglar and Matches",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1451:B": {
            "contestId": 1451,
            "index": "B",
            "name": "Non-Substring Subsequence",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "dp",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1494:A": {
            "contestId": 1494,
            "index": "A",
            "name": "ABC String",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "bitmasks",
                "brute force",
                "implementation"
            ]
        },
        "1612:B": {
            "contestId": 1612,
            "index": "B",
            "name": "Special Permutation",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1663:F": {
            "contestId": 1663,
            "index": "F",
            "name": "In Every Generation...",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "strings"
            ]
        },
        "1663:E": {
            "contestId": 1663,
            "index": "E",
            "name": "Are You Safe?",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "1663:G": {
            "contestId": 1663,
            "index": "G",
            "name": "Six Characters",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "strings"
            ]
        },
        "1663:D": {
            "contestId": 1663,
            "index": "D",
            "name": "Is it rated - 3",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1663:B": {
            "contestId": 1663,
            "index": "B",
            "name": "Mike's Sequence",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "divide and conquer",
                "implementation",
                "math"
            ]
        },
        "1663:H": {
            "contestId": 1663,
            "index": "H",
            "name": "Cross-Language Program",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        "747:B": {
            "contestId": 747,
            "index": "B",
            "name": "Mammoth's Genome Decoding",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "165:B": {
            "contestId": 165,
            "index": "B",
            "name": "Burning Midnight Oil",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "implementation"
            ]
        },
        "160:B": {
            "contestId": 160,
            "index": "B",
            "name": "Unlucky Ticket",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "66:B": {
            "contestId": 66,
            "index": "B",
            "name": "Petya and Countryside",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "58:B": {
            "contestId": 58,
            "index": "B",
            "name": "Coins",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "365:B": {
            "contestId": 365,
            "index": "B",
            "name": "The Fibonacci Segment",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1468:N": {
            "contestId": 1468,
            "index": "N",
            "name": "Waste Sorting",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "445:B": {
            "contestId": 445,
            "index": "B",
            "name": "DZY Loves Chemistry",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dsu",
                "greedy"
            ]
        },
        "501:B": {
            "contestId": 501,
            "index": "B",
            "name": "Misha and Changing Handles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "data structures",
                "dsu",
                "strings"
            ]
        },
        "622:B": {
            "contestId": 622,
            "index": "B",
            "name": "The Time",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1150:B": {
            "contestId": 1150,
            "index": "B",
            "name": "Tiling Challenge",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "239:A": {
            "contestId": 239,
            "index": "A",
            "name": "Two Bags of Potatoes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1208:A": {
            "contestId": 1208,
            "index": "A",
            "name": "XORinacci",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "572:A": {
            "contestId": 572,
            "index": "A",
            "name": "Arrays",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "sortings"
            ]
        },
        "1141:B": {
            "contestId": 1141,
            "index": "B",
            "name": "Maximal Continuous Rest",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1113:A": {
            "contestId": 1113,
            "index": "A",
            "name": "Sasha and His Trip",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1582:B": {
            "contestId": 1582,
            "index": "B",
            "name": "Luntik and Subsequences",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1559:B": {
            "contestId": 1559,
            "index": "B",
            "name": "Mocha and Red and Blue",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 900,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1584:C": {
            "contestId": 1584,
            "index": "C",
            "name": "Two Arrays",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1585:B": {
            "contestId": 1585,
            "index": "B",
            "name": "Array Eversion",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "306:A": {
            "contestId": 306,
            "index": "A",
            "name": "Candies",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "931:A": {
            "contestId": 931,
            "index": "A",
            "name": "Friends Meeting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "291:A": {
            "contestId": 291,
            "index": "A",
            "name": "Spyke Talks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "*special",
                "implementation",
                "sortings"
            ]
        },
        "854:A": {
            "contestId": 854,
            "index": "A",
            "name": "Fraction",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        "900:A": {
            "contestId": 900,
            "index": "A",
            "name": "Find Extra One",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        "202:A": {
            "contestId": 202,
            "index": "A",
            "name": "LLPS",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "910:A": {
            "contestId": 910,
            "index": "A",
            "name": "The Way to Home",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1474:A": {
            "contestId": 1474,
            "index": "A",
            "name": "Puzzle From the Future",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "255:A": {
            "contestId": 255,
            "index": "A",
            "name": "Greg's Workout",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1041:A": {
            "contestId": 1041,
            "index": "A",
            "name": "Heist",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1118:A": {
            "contestId": 1118,
            "index": "A",
            "name": "Water Buying",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "330:A": {
            "contestId": 330,
            "index": "A",
            "name": "Cakeminator",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "448:A": {
            "contestId": 448,
            "index": "A",
            "name": "Rewards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1466:A": {
            "contestId": 1466,
            "index": "A",
            "name": "Bovine Dilemma",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "geometry",
                "math"
            ]
        },
        "1003:A": {
            "contestId": 1003,
            "index": "A",
            "name": "Polycarp's Pockets",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1183:A": {
            "contestId": 1183,
            "index": "A",
            "name": "Nearest Interesting Number",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1097:A": {
            "contestId": 1097,
            "index": "A",
            "name": "Gennady and a Card Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "946:A": {
            "contestId": 946,
            "index": "A",
            "name": "Partition",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1436:A": {
            "contestId": 1436,
            "index": "A",
            "name": "Reorder",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1562:A": {
            "contestId": 1562,
            "index": "A",
            "name": "The Miracle and the Sleeper",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1194:A": {
            "contestId": 1194,
            "index": "A",
            "name": "Remove a Progression",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "609:A": {
            "contestId": 609,
            "index": "A",
            "name": "USB Flash Drives",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1065:A": {
            "contestId": 1065,
            "index": "A",
            "name": "Vasya and Chocolate",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "898:A": {
            "contestId": 898,
            "index": "A",
            "name": "Rounding",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "621:A": {
            "contestId": 621,
            "index": "A",
            "name": "Wet Shark and Odd and Even",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "987:A": {
            "contestId": 987,
            "index": "A",
            "name": "Infinity Gauntlet",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "919:A": {
            "contestId": 919,
            "index": "A",
            "name": "Supermarket",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "899:A": {
            "contestId": 899,
            "index": "A",
            "name": "Splitting in Teams",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "99:A": {
            "contestId": 99,
            "index": "A",
            "name": "Help Far Away Kingdom",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "strings"
            ]
        },
        "172:A": {
            "contestId": 172,
            "index": "A",
            "name": "Phone Code",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 800,
            "tags": [
                "*special",
                "brute force",
                "implementation"
            ]
        },
        "802:M": {
            "contestId": 802,
            "index": "M",
            "name": "April Fools' Problem (easy)",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "802:G": {
            "contestId": 802,
            "index": "G",
            "name": "Fake News (easy)",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "386:A": {
            "contestId": 386,
            "index": "A",
            "name": "Second-Price Auction",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "760:A": {
            "contestId": 760,
            "index": "A",
            "name": "Petr and a calendar",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "245:A": {
            "contestId": 245,
            "index": "A",
            "name": "System Administrator",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "859:A": {
            "contestId": 859,
            "index": "A",
            "name": "Declined Finalists",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "658:A": {
            "contestId": 658,
            "index": "A",
            "name": "Bear and Reverse Radewoosh",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "157:A": {
            "contestId": 157,
            "index": "A",
            "name": "Game Outcome",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "411:A": {
            "contestId": 411,
            "index": "A",
            "name": "Password Check",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "440:A": {
            "contestId": 440,
            "index": "A",
            "name": "Forgotten Episode",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "794:A": {
            "contestId": 794,
            "index": "A",
            "name": "Bank Robbery",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "588:B": {
            "contestId": 588,
            "index": "B",
            "name": "Duff in Love",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "math"
            ]
        },
        "1092:A": {
            "contestId": 1092,
            "index": "A",
            "name": "Uniform String",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1092:B": {
            "contestId": 1092,
            "index": "B",
            "name": "Teams Forming",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "sortings"
            ]
        },
        "1473:A": {
            "contestId": 1473,
            "index": "A",
            "name": "Replacing Elements",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "sortings"
            ]
        },
        "554:B": {
            "contestId": 554,
            "index": "B",
            "name": "Ohana Cleans Up",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "strings"
            ]
        },
        "701:A": {
            "contestId": 701,
            "index": "A",
            "name": "Cards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1143:A": {
            "contestId": 1143,
            "index": "A",
            "name": "The Doors",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "586:A": {
            "contestId": 586,
            "index": "A",
            "name": "Alena's Schedule",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1351:A": {
            "contestId": 1351,
            "index": "A",
            "name": "A+B (Trial Problem)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "509:A": {
            "contestId": 509,
            "index": "A",
            "name": "Maximum in Table",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1284:A": {
            "contestId": 1284,
            "index": "A",
            "name": "New Year and Naming",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1150:A": {
            "contestId": 1150,
            "index": "A",
            "name": "Stock Arbitraging",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1185:A": {
            "contestId": 1185,
            "index": "A",
            "name": "Ropewalkers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "769:A": {
            "contestId": 769,
            "index": "A",
            "name": "Year of University Entrance",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "*special",
                "implementation",
                "sortings"
            ]
        },
        "361:B": {
            "contestId": 361,
            "index": "B",
            "name": "Levko and Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "361:A": {
            "contestId": 361,
            "index": "A",
            "name": "Levko and Table",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "401:A": {
            "contestId": 401,
            "index": "A",
            "name": "Vanya and Cards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1047:A": {
            "contestId": 1047,
            "index": "A",
            "name": "Little C Loves 3 I",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1180:A": {
            "contestId": 1180,
            "index": "A",
            "name": "Alex and a Rhombus",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "dp",
                "implementation",
                "math"
            ]
        },
        "1114:A": {
            "contestId": 1114,
            "index": "A",
            "name": "Got Any Grapes?",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1104:A": {
            "contestId": 1104,
            "index": "A",
            "name": "Splitting into digits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "837:A": {
            "contestId": 837,
            "index": "A",
            "name": "Text Volume",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1525:A": {
            "contestId": 1525,
            "index": "A",
            "name": "Potion-making",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "551:A": {
            "contestId": 551,
            "index": "A",
            "name": "GukiZ and Contest",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "sortings"
            ]
        },
        "1519:A": {
            "contestId": 1519,
            "index": "A",
            "name": "Red and Blue Beans",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1130:A": {
            "contestId": 1130,
            "index": "A",
            "name": "Be Positive",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1725:A": {
            "contestId": 1725,
            "index": "A",
            "name": "Accumulation of Dominoes",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "678:A": {
            "contestId": 678,
            "index": "A",
            "name": "Johny Likes Numbers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "918:A": {
            "contestId": 918,
            "index": "A",
            "name": "Eleven",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1081:A": {
            "contestId": 1081,
            "index": "A",
            "name": "Definite Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "49:A": {
            "contestId": 49,
            "index": "A",
            "name": "Sleuth",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "16:A": {
            "contestId": 16,
            "index": "A",
            "name": "Flag",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1159:A": {
            "contestId": 1159,
            "index": "A",
            "name": "A pile of stones",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1085:A": {
            "contestId": 1085,
            "index": "A",
            "name": "Right-Left Cipher",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "46:B": {
            "contestId": 46,
            "index": "B",
            "name": "T-shirts from Sponsor",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1099:A": {
            "contestId": 1099,
            "index": "A",
            "name": "Snowball",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "47:B": {
            "contestId": 47,
            "index": "B",
            "name": "Coins",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "47:A": {
            "contestId": 47,
            "index": "A",
            "name": "Triangular numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "710:A": {
            "contestId": 710,
            "index": "A",
            "name": "King Moves",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "854:B": {
            "contestId": 854,
            "index": "B",
            "name": "Maxim Buys an Apartment",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "46:A": {
            "contestId": 46,
            "index": "A",
            "name": "Ball Game",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "912:A": {
            "contestId": 912,
            "index": "A",
            "name": "Tricky Alchemy",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "764:A": {
            "contestId": 764,
            "index": "A",
            "name": "Taymyr is calling you",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1031:A": {
            "contestId": 1031,
            "index": "A",
            "name": "Golden Plate",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1060:A": {
            "contestId": 1060,
            "index": "A",
            "name": "Phone Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "688:A": {
            "contestId": 688,
            "index": "A",
            "name": "Opponents",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "672:A": {
            "contestId": 672,
            "index": "A",
            "name": "Summer Camp",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1152:A": {
            "contestId": 1152,
            "index": "A",
            "name": "Neko Finds Grapes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1584:B": {
            "contestId": 1584,
            "index": "B",
            "name": "Coloring Rectangles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "102961:Z": {
            "contestId": 102961,
            "index": "Z",
            "name": "Nearest Smaller Values",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1609:A": {
            "contestId": 1609,
            "index": "A",
            "name": "Divide and Multiply",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1666:D": {
            "contestId": 1666,
            "index": "D",
            "name": "Deletive Editing",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "218:B": {
            "contestId": 218,
            "index": "B",
            "name": "Airport",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "433:A": {
            "contestId": 433,
            "index": "A",
            "name": "Kitahara Haruki's Gift",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "431:B": {
            "contestId": 431,
            "index": "B",
            "name": "Shower Line",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "352:B": {
            "contestId": 352,
            "index": "B",
            "name": "Jeff and Periods",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1370:B": {
            "contestId": 1370,
            "index": "B",
            "name": "GCD Compression",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "463:A": {
            "contestId": 463,
            "index": "A",
            "name": "Caisa and Sugar",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1506:A": {
            "contestId": 1506,
            "index": "A",
            "name": "Strange Table",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1784:A": {
            "contestId": 1784,
            "index": "A",
            "name": "Monsters (easy version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "762:A": {
            "contestId": 762,
            "index": "A",
            "name": "k-th divisor",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1025:A": {
            "contestId": 1025,
            "index": "A",
            "name": "Doggo Recoloring",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "27:A": {
            "contestId": 27,
            "index": "A",
            "name": "Next Test",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1167:A": {
            "contestId": 1167,
            "index": "A",
            "name": "Telephone Number",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "strings"
            ]
        },
        "1445:A": {
            "contestId": 1445,
            "index": "A",
            "name": "Array Rearrangment",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1249:A": {
            "contestId": 1249,
            "index": "A",
            "name": "Yet Another Dividing into Teams",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "653:A": {
            "contestId": 653,
            "index": "A",
            "name": "Bear and Three Balls",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "sortings"
            ]
        },
        "1512:D": {
            "contestId": 1512,
            "index": "D",
            "name": "Corrupted Array",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        "1506:B": {
            "contestId": 1506,
            "index": "B",
            "name": "Partial Replacement",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1095:B": {
            "contestId": 1095,
            "index": "B",
            "name": "Array Stabilization",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1139:A": {
            "contestId": 1139,
            "index": "A",
            "name": "Even Substrings",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1330:A": {
            "contestId": 1330,
            "index": "A",
            "name": "Dreamoon and Ranking Collection",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1291:A": {
            "contestId": 1291,
            "index": "A",
            "name": "Even But Not Even",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "strings"
            ]
        },
        "129:A": {
            "contestId": 129,
            "index": "A",
            "name": "Cookies",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1726:B": {
            "contestId": 1726,
            "index": "B",
            "name": "Mainak and Interesting Sequence",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        "1453:A": {
            "contestId": 1453,
            "index": "A",
            "name": "Cancel the Trains",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1459:A": {
            "contestId": 1459,
            "index": "A",
            "name": "Red-Blue Shuffle",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "math",
                "probabilities"
            ]
        },
        "597:A": {
            "contestId": 597,
            "index": "A",
            "name": "Divisibility",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "math"
            ]
        },
        "1478:B": {
            "contestId": 1478,
            "index": "B",
            "name": "Nezzar and Lucky Number",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1480:B": {
            "contestId": 1480,
            "index": "B",
            "name": "The Great Hero",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1492:A": {
            "contestId": 1492,
            "index": "A",
            "name": "Three swimmers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1594:A": {
            "contestId": 1594,
            "index": "A",
            "name": "Consecutive Sum Riddle",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "839:A": {
            "contestId": 839,
            "index": "A",
            "name": "Arya and Bran",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "903:A": {
            "contestId": 903,
            "index": "A",
            "name": "Hungry Student Problem",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "611:A": {
            "contestId": 611,
            "index": "A",
            "name": "New Year and Days",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1181:A": {
            "contestId": 1181,
            "index": "A",
            "name": "Chunga-Changa",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1537:D": {
            "contestId": 1537,
            "index": "D",
            "name": "Deleting Divisors",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "games",
                "math",
                "number theory"
            ]
        },
        "285:C": {
            "contestId": 285,
            "index": "C",
            "name": "Building Permutation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1133:C": {
            "contestId": 1133,
            "index": "C",
            "name": "Balanced Team",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "sortings",
                "two pointers"
            ]
        },
        "1304:B": {
            "contestId": 1304,
            "index": "B",
            "name": "Longest Palindrome",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1471:B": {
            "contestId": 1471,
            "index": "B",
            "name": "Strange List",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1626:B": {
            "contestId": 1626,
            "index": "B",
            "name": "Minor Reduction",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1157:B": {
            "contestId": 1157,
            "index": "B",
            "name": "Long Number",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1455:B": {
            "contestId": 1455,
            "index": "B",
            "name": "Jumps",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1491:B": {
            "contestId": 1491,
            "index": "B",
            "name": "Minimal Cost",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1107:A": {
            "contestId": 1107,
            "index": "A",
            "name": "Digits Sequence Dividing",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1573:A": {
            "contestId": 1573,
            "index": "A",
            "name": "Countdown",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1248:A": {
            "contestId": 1248,
            "index": "A",
            "name": "Integer Points",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "1497:A": {
            "contestId": 1497,
            "index": "A",
            "name": "Meximization",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1613:C": {
            "contestId": 1613,
            "index": "C",
            "name": "Poisoned Dagger",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search"
            ]
        },
        "1612:C": {
            "contestId": 1612,
            "index": "C",
            "name": "Chat Ban",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1717:A": {
            "contestId": 1717,
            "index": "A",
            "name": "Madoka and Strange Thoughts",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "166:E": {
            "contestId": 166,
            "index": "E",
            "name": "Tetrahedron",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "dp",
                "math",
                "matrices"
            ]
        },
        "2:A": {
            "contestId": 2,
            "index": "A",
            "name": "Winner",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "hashing",
                "implementation"
            ]
        },
        "1526:C1": {
            "contestId": 1526,
            "index": "C1",
            "name": "Potions (Easy Version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1500,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy"
            ]
        },
        "580:C": {
            "contestId": 580,
            "index": "C",
            "name": "Kefa and Park",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "515:C": {
            "contestId": 515,
            "index": "C",
            "name": "Drazil and Factorial",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1245:C": {
            "contestId": 1245,
            "index": "C",
            "name": "Constanze's Machine",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "dp"
            ]
        },
        "1113:B": {
            "contestId": 1113,
            "index": "B",
            "name": "Sasha and Magnetic Machines",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "number theory"
            ]
        },
        "1119:B": {
            "contestId": 1119,
            "index": "B",
            "name": "Alyona and a Narrow Fridge",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "flows",
                "greedy",
                "sortings"
            ]
        },
        "1615:B": {
            "contestId": 1615,
            "index": "B",
            "name": "And It's Non-Zero",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "greedy",
                "math"
            ]
        },
        "1622:C": {
            "contestId": 1622,
            "index": "C",
            "name": "Set or Decrease",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1690:E": {
            "contestId": 1690,
            "index": "E",
            "name": "Price Maximization",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "two pointers"
            ]
        },
        "1779:D": {
            "contestId": 1779,
            "index": "D",
            "name": "Boris and His Amazing Haircut",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "dsu",
                "greedy",
                "sortings"
            ]
        },
        "1462:D": {
            "contestId": 1462,
            "index": "D",
            "name": "Add to Neighbour and Remove",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1443:C": {
            "contestId": 1443,
            "index": "C",
            "name": "The Delivery Dilemma",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1443:B": {
            "contestId": 1443,
            "index": "B",
            "name": "Saving the City",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1617:C": {
            "contestId": 1617,
            "index": "C",
            "name": "Paprika and Permutation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1627:C": {
            "contestId": 1627,
            "index": "C",
            "name": "Not Assigning",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "number theory",
                "trees"
            ]
        },
        "1657:C": {
            "contestId": 1657,
            "index": "C",
            "name": "Bracket Sequence Deletion",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1454:D": {
            "contestId": 1454,
            "index": "D",
            "name": "Number into Sequence",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1644:C": {
            "contestId": 1644,
            "index": "C",
            "name": "Increase Subarray Sums",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1197:C": {
            "contestId": 1197,
            "index": "C",
            "name": "Array Splitting",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1201:C": {
            "contestId": 1201,
            "index": "C",
            "name": "Maximum Median",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1476:B": {
            "contestId": 1476,
            "index": "B",
            "name": "Inflation",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1618:D": {
            "contestId": 1618,
            "index": "D",
            "name": "Array and Operations",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1095:C": {
            "contestId": 1095,
            "index": "C",
            "name": "Powers Of Two",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "bitmasks",
                "greedy"
            ]
        },
        "1731:C": {
            "contestId": 1731,
            "index": "C",
            "name": "Even Subarrays",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "brute force",
                "hashing",
                "math",
                "number theory"
            ]
        },
        "1731:D": {
            "contestId": 1731,
            "index": "D",
            "name": "Valiant's New Map",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        "1519:D": {
            "contestId": 1519,
            "index": "D",
            "name": "Maximum Sum of Products",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "dp",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "1519:C": {
            "contestId": 1519,
            "index": "C",
            "name": "Berland Regional",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "number theory",
                "sortings"
            ]
        },
        "1650:C": {
            "contestId": 1650,
            "index": "C",
            "name": "Weight of the System of Nested Segments",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "hashing",
                "implementation",
                "sortings"
            ]
        },
        "1763:C": {
            "contestId": 1763,
            "index": "C",
            "name": "Another Array Problem",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1660:C": {
            "contestId": 1660,
            "index": "C",
            "name": "Get an Even String",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "strings"
            ]
        },
        "1656:C": {
            "contestId": 1656,
            "index": "C",
            "name": "Make Equal With Mod",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory",
                "sortings"
            ]
        },
        "276:C": {
            "contestId": 276,
            "index": "C",
            "name": "Little Girl and Maximum Sum",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1375:C": {
            "contestId": 1375,
            "index": "C",
            "name": "Element Extermination",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        "1285:C": {
            "contestId": 1285,
            "index": "C",
            "name": "Fadi and LCM",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "479:C": {
            "contestId": 479,
            "index": "C",
            "name": "Exams",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1774:C": {
            "contestId": 1774,
            "index": "C",
            "name": "Ice and Fire",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "1762:C": {
            "contestId": 1762,
            "index": "C",
            "name": "Binary Strings are Fun",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1400,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1249:C1": {
            "contestId": 1249,
            "index": "C1",
            "name": "Good Numbers (easy version)",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1733:C": {
            "contestId": 1733,
            "index": "C",
            "name": "Parity Shuffle Sorting",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1227:B": {
            "contestId": 1227,
            "index": "B",
            "name": "Box",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        "975:C": {
            "contestId": 975,
            "index": "C",
            "name": "Valhalla Siege",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "binary search"
            ]
        },
        "1497:B": {
            "contestId": 1497,
            "index": "B",
            "name": "M-arrays",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1578:E": {
            "contestId": 1578,
            "index": "E",
            "name": "Easy Scheduling",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1553:B": {
            "contestId": 1553,
            "index": "B",
            "name": "Reverse String",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "brute force",
                "dp",
                "hashing",
                "implementation",
                "strings"
            ]
        },
        "1547:D": {
            "contestId": 1547,
            "index": "D",
            "name": "Co-growing Sequence",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1542:C": {
            "contestId": 1542,
            "index": "C",
            "name": "Strange Function",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1542:B": {
            "contestId": 1542,
            "index": "B",
            "name": "Plus and Multiply",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1545:A": {
            "contestId": 1545,
            "index": "A",
            "name": "AquaMoon and Strange Sort",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "sortings"
            ]
        },
        "1758:C": {
            "contestId": 1758,
            "index": "C",
            "name": "Almost All Multiples",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "greedy",
                "number theory"
            ]
        },
        "384:C": {
            "contestId": 384,
            "index": "C",
            "name": "Milking cows",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "greedy"
            ]
        },
        "1521:B": {
            "contestId": 1521,
            "index": "B",
            "name": "Nastia and a Good Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1381:A1": {
            "contestId": 1381,
            "index": "A1",
            "name": "Prefix Flip (Easy Version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "strings"
            ]
        },
        "1371:C": {
            "contestId": 1371,
            "index": "C",
            "name": "A Cookie for You",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1470:A": {
            "contestId": 1470,
            "index": "A",
            "name": "Strange Birthday Party",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "545:D": {
            "contestId": 545,
            "index": "D",
            "name": "Queue",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1401:C": {
            "contestId": 1401,
            "index": "C",
            "name": "Mere Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory",
                "sortings"
            ]
        },
        "1352:D": {
            "contestId": 1352,
            "index": "D",
            "name": "Alice, Bob and Candies",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1785:C": {
            "contestId": 1785,
            "index": "C",
            "name": "Monsters (hard version)",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1785:A": {
            "contestId": 1785,
            "index": "A",
            "name": "Monsters (easy version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1372:B": {
            "contestId": 1372,
            "index": "B",
            "name": "Omkar and Last Class of Math",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1365:B": {
            "contestId": 1365,
            "index": "B",
            "name": "Trouble Sort",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1335:D": {
            "contestId": 1335,
            "index": "D",
            "name": "Anti-Sudoku",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "476:B": {
            "contestId": 476,
            "index": "B",
            "name": "Dreamoon and WiFi",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "brute force",
                "combinatorics",
                "dp",
                "math",
                "probabilities"
            ]
        },
        "1328:B": {
            "contestId": 1328,
            "index": "B",
            "name": "K-th Beautiful String",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "brute force",
                "combinatorics",
                "implementation",
                "math"
            ]
        },
        "1786:B": {
            "contestId": 1786,
            "index": "B",
            "name": "Cake Assembly Line",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "sortings"
            ]
        },
        "1791:G2": {
            "contestId": 1791,
            "index": "G2",
            "name": "Teleporters (Hard Version)",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1365:A": {
            "contestId": 1365,
            "index": "A",
            "name": "Matrix Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "games",
                "greedy",
                "implementation"
            ]
        },
        "115:A": {
            "contestId": 115,
            "index": "A",
            "name": "Party",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "1779:C": {
            "contestId": 1779,
            "index": "C",
            "name": "Least Prefix Sum",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "1494:B": {
            "contestId": 1494,
            "index": "B",
            "name": "Berland Crossword",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "bitmasks",
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1330:B": {
            "contestId": 1330,
            "index": "B",
            "name": "Dreamoon Likes Permutations",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1380:B": {
            "contestId": 1380,
            "index": "B",
            "name": "Universal Solution",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy"
            ]
        },
        "1474:C": {
            "contestId": 1474,
            "index": "C",
            "name": "Array Destruction",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "295:A": {
            "contestId": 295,
            "index": "A",
            "name": "Greg and Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1452:B": {
            "contestId": 1452,
            "index": "B",
            "name": "Toy Blocks",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1840:D": {
            "contestId": 1840,
            "index": "D",
            "name": "Wooden Toy Festival",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "102951:B": {
            "contestId": 102951,
            "index": "B",
            "name": "Studying Algorithms",
            "type": "PROGRAMMING",
            "tags": []
        },
        "863:B": {
            "contestId": 863,
            "index": "B",
            "name": "Kayaking",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1833:E": {
            "contestId": 1833,
            "index": "E",
            "name": "Round Dance",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "shortest paths"
            ]
        },
        "1691:C": {
            "contestId": 1691,
            "index": "C",
            "name": "Sum of Substrings",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "strings"
            ]
        },
        "650:A": {
            "contestId": 650,
            "index": "A",
            "name": "Watchmen",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "data structures",
                "geometry",
                "math"
            ]
        },
        "1216:C": {
            "contestId": 1216,
            "index": "C",
            "name": "White Sheet",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "374:B": {
            "contestId": 374,
            "index": "B",
            "name": "Inna and Nine",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "combinatorics",
                "greedy"
            ]
        },
        "216:B": {
            "contestId": 216,
            "index": "B",
            "name": "Forming Teams",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "implementation"
            ]
        },
        "244:B": {
            "contestId": 244,
            "index": "B",
            "name": "Undoubtedly Lucky Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar"
            ]
        },
        "94:B": {
            "contestId": 94,
            "index": "B",
            "name": "Friends",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "graphs",
                "implementation",
                "math"
            ]
        },
        "1829:G": {
            "contestId": 1829,
            "index": "G",
            "name": "Hits Different",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "math"
            ]
        },
        "1829:F": {
            "contestId": 1829,
            "index": "F",
            "name": "Forever Winter",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        "189:B": {
            "contestId": 189,
            "index": "B",
            "name": "Counting Rhombi",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "281:B": {
            "contestId": 281,
            "index": "B",
            "name": "Nearest Fraction",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "brute force",
                "implementation",
                "two pointers"
            ]
        },
        "63:B": {
            "contestId": 63,
            "index": "B",
            "name": "Settlers' Training",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "225:B": {
            "contestId": 225,
            "index": "B",
            "name": "Well-known Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy",
                "number theory"
            ]
        },
        "214:B": {
            "contestId": 214,
            "index": "B",
            "name": "Hometask",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "260:B": {
            "contestId": 260,
            "index": "B",
            "name": "Ancient Prophesy",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "197:B": {
            "contestId": 197,
            "index": "B",
            "name": "Limit",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "math"
            ]
        },
        "231:B": {
            "contestId": 231,
            "index": "B",
            "name": "Magic, Wizardry and Wonders",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "195:B": {
            "contestId": 195,
            "index": "B",
            "name": "After Training",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "data structures",
                "implementation",
                "math"
            ]
        },
        "320:B": {
            "contestId": 320,
            "index": "B",
            "name": "Ping-Pong (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        "96:B": {
            "contestId": 96,
            "index": "B",
            "name": "Lucky Numbers (easy)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force"
            ]
        },
        "342:B": {
            "contestId": 342,
            "index": "B",
            "name": "Xenia and Spies",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "228:B": {
            "contestId": 228,
            "index": "B",
            "name": "Two Tables",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "192:B": {
            "contestId": 192,
            "index": "B",
            "name": "Walking in the Rain",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "205:B": {
            "contestId": 205,
            "index": "B",
            "name": "Little Elephant and Sorting",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "219:B": {
            "contestId": 219,
            "index": "B",
            "name": "Special Offer! Super Price 999 Bourles!",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation"
            ]
        },
        "233:B": {
            "contestId": 233,
            "index": "B",
            "name": "Non-square Equation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "binary search",
                "brute force",
                "math"
            ]
        },
        "437:B": {
            "contestId": 437,
            "index": "B",
            "name": "The Child and Set",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "143:B": {
            "contestId": 143,
            "index": "B",
            "name": "Help Kingdom of Far Far Away 2",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "129:B": {
            "contestId": 129,
            "index": "B",
            "name": "Students and Shoelaces",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "359:B": {
            "contestId": 359,
            "index": "B",
            "name": "Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        "151:B": {
            "contestId": 151,
            "index": "B",
            "name": "Phone Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "349:B": {
            "contestId": 349,
            "index": "B",
            "name": "Color the Fence",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "337:B": {
            "contestId": 337,
            "index": "B",
            "name": "Routine Problem",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "312:B": {
            "contestId": 312,
            "index": "B",
            "name": "Archer",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "math",
                "probabilities"
            ]
        },
        "110:B": {
            "contestId": 110,
            "index": "B",
            "name": "Lucky String",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "1818:C": {
            "contestId": 1818,
            "index": "C",
            "name": "Almost Increasing Subsequence",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "binary search",
                "dp",
                "greedy"
            ]
        },
        "116:B": {
            "contestId": 116,
            "index": "B",
            "name": "Little Pigs and Wolves",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "416:B": {
            "contestId": 416,
            "index": "B",
            "name": "Art Union",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        "514:B": {
            "contestId": 514,
            "index": "B",
            "name": "Han Solo and Lazer Gun",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "data structures",
                "geometry",
                "implementation",
                "math"
            ]
        },
        "289:B": {
            "contestId": 289,
            "index": "B",
            "name": "Polo the Penguin and Matrix",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "dp",
                "implementation",
                "sortings",
                "ternary search"
            ]
        },
        "357:B": {
            "contestId": 357,
            "index": "B",
            "name": "Flag Day",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "408:B": {
            "contestId": 408,
            "index": "B",
            "name": "Garland",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "366:B": {
            "contestId": 366,
            "index": "B",
            "name": "Dima and To-do List",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "133:B": {
            "contestId": 133,
            "index": "B",
            "name": "Unary",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "155:B": {
            "contestId": 155,
            "index": "B",
            "name": "Combination",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "330:B": {
            "contestId": 330,
            "index": "B",
            "name": "Road Construction",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        "157:B": {
            "contestId": 157,
            "index": "B",
            "name": "Trace",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "geometry",
                "sortings"
            ]
        },
        "387:B": {
            "contestId": 387,
            "index": "B",
            "name": "George and Round",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "two pointers"
            ]
        },
        "509:B": {
            "contestId": 509,
            "index": "B",
            "name": "Painting Pebbles",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "493:B": {
            "contestId": 493,
            "index": "B",
            "name": "Vasya and Wrestling",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation"
            ]
        },
        "469:B": {
            "contestId": 469,
            "index": "B",
            "name": "Chat Online",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "362:B": {
            "contestId": 362,
            "index": "B",
            "name": "Petya and Staircases",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "432:B": {
            "contestId": 432,
            "index": "B",
            "name": "Football Kit",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "259:B": {
            "contestId": 259,
            "index": "B",
            "name": "Little Elephant and Magic Square",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "285:B": {
            "contestId": 285,
            "index": "B",
            "name": "Find Marble",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "450:B": {
            "contestId": 450,
            "index": "B",
            "name": "Jzzhu and Sequences",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "279:A": {
            "contestId": 279,
            "index": "A",
            "name": "Point on Spiral",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "brute force",
                "geometry",
                "implementation"
            ]
        },
        "370:A": {
            "contestId": 370,
            "index": "A",
            "name": "Rook, Bishop and King",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "graphs",
                "math",
                "shortest paths"
            ]
        },
        "257:A": {
            "contestId": 257,
            "index": "A",
            "name": "Sockets",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "416:A": {
            "contestId": 416,
            "index": "A",
            "name": "Guess a number!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "358:A": {
            "contestId": 358,
            "index": "A",
            "name": "Dima and Continuous Line",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "192:A": {
            "contestId": 192,
            "index": "A",
            "name": "Funky Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "binary search",
                "brute force",
                "implementation"
            ]
        },
        "234:A": {
            "contestId": 234,
            "index": "A",
            "name": "Lefthanders and Righthanders ",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "462:A": {
            "contestId": 462,
            "index": "A",
            "name": "Appleman and Easy Task",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "305:A": {
            "contestId": 305,
            "index": "A",
            "name": "Strange Addition",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        "197:A": {
            "contestId": 197,
            "index": "A",
            "name": "Plate Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "games",
                "math"
            ]
        },
        "1108:D": {
            "contestId": 1108,
            "index": "D",
            "name": "Diverse Garland",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "1628:A": {
            "contestId": 1628,
            "index": "A",
            "name": "Meximum Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "1624:D": {
            "contestId": 1624,
            "index": "D",
            "name": "Palindromes Coloring",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        "1451:C": {
            "contestId": 1451,
            "index": "C",
            "name": "String Equality",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "dp",
                "greedy",
                "hashing",
                "implementation",
                "strings"
            ]
        },
        "1605:C": {
            "contestId": 1605,
            "index": "C",
            "name": "Dominant Character",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "448:B": {
            "contestId": 448,
            "index": "B",
            "name": "Suffix Structures",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1167:C": {
            "contestId": 1167,
            "index": "C",
            "name": "News Distribution",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1820:C": {
            "contestId": 1820,
            "index": "C",
            "name": "Constructive Problem",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "18:A": {
            "contestId": 18,
            "index": "A",
            "name": "Triangle",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "geometry"
            ]
        },
        "374:A": {
            "contestId": 374,
            "index": "A",
            "name": "Inna and Pink Pony",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 2000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "393:A": {
            "contestId": 393,
            "index": "A",
            "name": "Nineteen",
            "type": "PROGRAMMING",
            "points": 500,
            "tags": []
        },
        "390:A": {
            "contestId": 390,
            "index": "A",
            "name": "Inna and Alarm Clock",
            "type": "PROGRAMMING",
            "points": 500,
            "tags": [
                "implementation"
            ]
        },
        "397:A": {
            "contestId": 397,
            "index": "A",
            "name": "On Segment's Own Points",
            "type": "PROGRAMMING",
            "points": 500,
            "tags": [
                "implementation"
            ]
        },
        "1816:C": {
            "contestId": 1816,
            "index": "C",
            "name": "Ian and Array Sorting",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "math",
                "sortings"
            ]
        },
        "1320:A": {
            "contestId": 1320,
            "index": "A",
            "name": "Journey Planning",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1535:C": {
            "contestId": 1535,
            "index": "C",
            "name": "Unstable String",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        "1303:B": {
            "contestId": 1303,
            "index": "B",
            "name": "National Project",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "math"
            ]
        },
        "1354:C2": {
            "contestId": 1354,
            "index": "C2",
            "name": "Not So Simple Polygon Embedding",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "geometry",
                "math"
            ]
        },
        "1354:C1": {
            "contestId": 1354,
            "index": "C1",
            "name": "Simple Polygon Embedding",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "geometry",
                "math",
                "ternary search"
            ]
        },
        "1312:C": {
            "contestId": 1312,
            "index": "C",
            "name": "Adding Powers",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "bitmasks",
                "greedy",
                "implementation",
                "math",
                "number theory",
                "ternary search"
            ]
        },
        "1548:A": {
            "contestId": 1548,
            "index": "A",
            "name": "Web of Lies",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "brute force",
                "graphs",
                "greedy"
            ]
        },
        "1515:C": {
            "contestId": 1515,
            "index": "C",
            "name": "Phoenix and Towers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        "1393:B": {
            "contestId": 1393,
            "index": "B",
            "name": "Applejack and Storages",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1805:C": {
            "contestId": 1805,
            "index": "C",
            "name": "Place for a Selfie",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "geometry",
                "math"
            ]
        },
        "277:A": {
            "contestId": 277,
            "index": "A",
            "name": "Learning Languages",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dsu"
            ]
        },
        "1490:E": {
            "contestId": 1490,
            "index": "E",
            "name": "Accidental Victory",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "greedy"
            ]
        },
        "1362:C": {
            "contestId": 1362,
            "index": "C",
            "name": "Johnny and Another Rating Drop",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "bitmasks",
                "greedy",
                "math"
            ]
        },
        "550:B": {
            "contestId": 550,
            "index": "B",
            "name": "Preparing Olympiad",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1400,
            "tags": [
                "bitmasks",
                "brute force"
            ]
        },
        "538:B": {
            "contestId": 538,
            "index": "B",
            "name": "Quasi Binary",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1332:B": {
            "contestId": 1332,
            "index": "B",
            "name": "Composite Coloring",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1355:D": {
            "contestId": 1355,
            "index": "D",
            "name": "Game With Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1463:B": {
            "contestId": 1463,
            "index": "B",
            "name": "Find The Array",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1798:C": {
            "contestId": 1798,
            "index": "C",
            "name": "Candy Store",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1520:E": {
            "contestId": 1520,
            "index": "E",
            "name": "Arranging The Sheep",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1369:C": {
            "contestId": 1369,
            "index": "C",
            "name": "RationalLee",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "greedy",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1806:D": {
            "contestId": 1806,
            "index": "D",
            "name": "DSU Master",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "dp",
                "dsu",
                "math"
            ]
        },
        "1506:D": {
            "contestId": 1506,
            "index": "D",
            "name": "Epic Transformation",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        "1806:C": {
            "contestId": 1806,
            "index": "C",
            "name": "Sequence Master",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        "1380:C": {
            "contestId": 1380,
            "index": "C",
            "name": "Create The Teams",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1475:C": {
            "contestId": 1475,
            "index": "C",
            "name": "Ball in Berland",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "combinatorics",
                "graphs",
                "math"
            ]
        },
        "414:B": {
            "contestId": 414,
            "index": "B",
            "name": "Mashmokh and ACM",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "combinatorics",
                "dp",
                "number theory"
            ]
        },
        "1311:C": {
            "contestId": 1311,
            "index": "C",
            "name": "Perform the Combo",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force"
            ]
        },
        "1804:D": {
            "contestId": 1804,
            "index": "D",
            "name": "Accommodation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "486:B": {
            "contestId": 486,
            "index": "B",
            "name": "OR in Matrix",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "hashing",
                "implementation"
            ]
        },
        "1802:D": {
            "contestId": 1802,
            "index": "D",
            "name": "Buying gifts",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1627:B": {
            "contestId": 1627,
            "index": "B",
            "name": "Not Sitting",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "games",
                "greedy",
                "sortings"
            ]
        },
        "617:B": {
            "contestId": 617,
            "index": "B",
            "name": "Chocolate",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "combinatorics"
            ]
        },
        "1795:C": {
            "contestId": 1795,
            "index": "C",
            "name": "Tea Tasting",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        "1350:B": {
            "contestId": 1350,
            "index": "B",
            "name": "Orac and Models",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dp",
                "math",
                "number theory"
            ]
        },
        "1794:D": {
            "contestId": 1794,
            "index": "D",
            "name": "Counting Factorizations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "dp",
                "math",
                "number theory"
            ]
        },
        "1802:C": {
            "contestId": 1802,
            "index": "C",
            "name": "The Very Beautiful Blanket",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "1374:D": {
            "contestId": 1374,
            "index": "D",
            "name": "Zero Remainder Array",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1365:C": {
            "contestId": 1365,
            "index": "C",
            "name": "Rotation Matching",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1418:B": {
            "contestId": 1418,
            "index": "B",
            "name": "Negative Prefixes",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1420:C1": {
            "contestId": 1420,
            "index": "C1",
            "name": "Pokémon Army (easy version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "1799:C": {
            "contestId": 1799,
            "index": "C",
            "name": "Double Lexicographically Minimum",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "380:C": {
            "contestId": 380,
            "index": "C",
            "name": "Sereja and Brackets",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "data structures",
                "schedules"
            ]
        },
        "339:D": {
            "contestId": 339,
            "index": "D",
            "name": "Xenia and Bit Operations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "data structures",
                "trees"
            ]
        },
        "1789:C": {
            "contestId": 1789,
            "index": "C",
            "name": "Serval and Toxel's Arrays",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "combinatorics",
                "dp",
                "implementation",
                "math"
            ]
        },
        "1327:B": {
            "contestId": 1327,
            "index": "B",
            "name": "Princesses and Princes",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "graphs",
                "greedy"
            ]
        },
        "1324:D": {
            "contestId": 1324,
            "index": "D",
            "name": "Pair of Topics",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "data structures",
                "sortings",
                "two pointers"
            ]
        },
        "1348:B": {
            "contestId": 1348,
            "index": "B",
            "name": "Phoenix and Beauty",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1407:B": {
            "contestId": 1407,
            "index": "B",
            "name": "Big Vova",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1433:E": {
            "contestId": 1433,
            "index": "E",
            "name": "Two Round Dances",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1373:C": {
            "contestId": 1373,
            "index": "C",
            "name": "Pluses and Minuses",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "math"
            ]
        },
        "217:A": {
            "contestId": 217,
            "index": "A",
            "name": "Ice Skating",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1624:C": {
            "contestId": 1624,
            "index": "C",
            "name": "Division by Two and Permutation",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "flows",
                "graph matchings",
                "greedy",
                "math"
            ]
        },
        "893:C": {
            "contestId": 893,
            "index": "C",
            "name": "Rumor",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        "1466:C": {
            "contestId": 1466,
            "index": "C",
            "name": "Canine poetry",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "strings"
            ]
        },
        "1366:B": {
            "contestId": 1366,
            "index": "B",
            "name": "Shuffle",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "math",
                "two pointers"
            ]
        },
        "519:C": {
            "contestId": 519,
            "index": "C",
            "name": "A and B and Team Training",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1497:C2": {
            "contestId": 1497,
            "index": "C2",
            "name": "k-LCM (hard version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1341:B": {
            "contestId": 1341,
            "index": "B",
            "name": "Nastya and Door",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "136:B": {
            "contestId": 136,
            "index": "B",
            "name": "Ternary Logic",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "967:A": {
            "contestId": 967,
            "index": "A",
            "name": "Mind the Gap",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "159:B": {
            "contestId": 159,
            "index": "B",
            "name": "Matchmaker",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "*special",
                "greedy",
                "sortings"
            ]
        },
        "883:M": {
            "contestId": 883,
            "index": "M",
            "name": "Quadcopter Competition",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1642:C": {
            "contestId": 1642,
            "index": "C",
            "name": "Great Sequence",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1553:C": {
            "contestId": 1553,
            "index": "C",
            "name": "Penalty",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1559:C": {
            "contestId": 1559,
            "index": "C",
            "name": "Mocha and Hiking",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        "1561:C": {
            "contestId": 1561,
            "index": "C",
            "name": "Deep Down Below",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "102961:H": {
            "contestId": 102961,
            "index": "H",
            "name": "Maximum Subarray Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "535:B": {
            "contestId": 535,
            "index": "B",
            "name": "Tavas and SaDDas",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "bitmasks",
                "brute force",
                "combinatorics",
                "implementation"
            ]
        },
        "1068:B": {
            "contestId": 1068,
            "index": "B",
            "name": "LCM",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1511:B": {
            "contestId": 1511,
            "index": "B",
            "name": "GCD Length",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1107:B": {
            "contestId": 1107,
            "index": "B",
            "name": "Digital root",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1085:B": {
            "contestId": 1085,
            "index": "B",
            "name": "Div Times Mod",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "911:B": {
            "contestId": 911,
            "index": "B",
            "name": "Two Cakes",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "binary search",
                "brute force",
                "implementation"
            ]
        },
        "776:A": {
            "contestId": 776,
            "index": "A",
            "name": "A Serial Killer",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "302:B": {
            "contestId": 302,
            "index": "B",
            "name": "Eugeny and Play List",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "binary search",
                "implementation",
                "two pointers"
            ]
        },
        "1362:B": {
            "contestId": 1362,
            "index": "B",
            "name": "Johnny and His Hobbies",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "bitmasks",
                "brute force"
            ]
        },
        "1202:A": {
            "contestId": 1202,
            "index": "A",
            "name": "You Are Given Two Binary Strings...",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "bitmasks",
                "greedy"
            ]
        },
        "243:A": {
            "contestId": 243,
            "index": "A",
            "name": "The Brand New Function",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "bitmasks"
            ]
        },
        "484:A": {
            "contestId": 484,
            "index": "A",
            "name": "Bits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "379:B": {
            "contestId": 379,
            "index": "B",
            "name": "New Year Present",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "6:B": {
            "contestId": 6,
            "index": "B",
            "name": "President's Office",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "100971:F": {
            "contestId": 100971,
            "index": "F",
            "name": "Two Points",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100971:D": {
            "contestId": 100971,
            "index": "D",
            "name": "Laying Cables",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100971:L": {
            "contestId": 100971,
            "index": "L",
            "name": "Chess Match",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100971:G": {
            "contestId": 100971,
            "index": "G",
            "name": "Repair",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100971:K": {
            "contestId": 100971,
            "index": "K",
            "name": "Palindromization",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100971:B": {
            "contestId": 100971,
            "index": "B",
            "name": "Derangement",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100971:C": {
            "contestId": 100971,
            "index": "C",
            "name": "Triangles",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1036:C": {
            "contestId": 1036,
            "index": "C",
            "name": "Classy Numbers",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        "797:B": {
            "contestId": 797,
            "index": "B",
            "name": "Odd sum",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "101853:C": {
            "contestId": 101853,
            "index": "C",
            "name": "Intersections",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101853:A": {
            "contestId": 101853,
            "index": "A",
            "name": "Zero Array",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101853:I": {
            "contestId": 101853,
            "index": "I",
            "name": "Circles",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1739:E": {
            "contestId": 1739,
            "index": "E",
            "name": "Cleaning Robot",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        "1020:B": {
            "contestId": 1020,
            "index": "B",
            "name": "Badge",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs"
            ]
        },
        "1051:C": {
            "contestId": 1051,
            "index": "C",
            "name": "Vasya and Multisets",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "101755:J": {
            "contestId": 101755,
            "index": "J",
            "name": "Parallelograms",
            "type": "PROGRAMMING",
            "tags": []
        },
        "665:C": {
            "contestId": 665,
            "index": "C",
            "name": "Simple Strings",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "strings"
            ]
        },
        "859:C": {
            "contestId": 859,
            "index": "C",
            "name": "Pie Rules",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "dp",
                "games"
            ]
        },
        "56:D": {
            "contestId": 56,
            "index": "D",
            "name": "Changing a String",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp"
            ]
        },
        "100886:G": {
            "contestId": 100886,
            "index": "G",
            "name": "Maximum Product",
            "type": "PROGRAMMING",
            "tags": []
        },
        "628:D": {
            "contestId": 628,
            "index": "D",
            "name": "Magic Numbers",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dp"
            ]
        },
        "798:C": {
            "contestId": 798,
            "index": "C",
            "name": "Mike and gcd problem",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dp",
                "greedy",
                "number theory"
            ]
        },
        "undefined:102": {
            "problemsetName": "acmsguru",
            "index": "102",
            "name": "Coprimes",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1177:B": {
            "contestId": 1177,
            "index": "B",
            "name": "Digits Sequence (Hard Edition)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "binary search",
                "divide and conquer",
                "implementation"
            ]
        },
        "977:F": {
            "contestId": 977,
            "index": "F",
            "name": "Consecutive Subsequence",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dp"
            ]
        },
        "264:B": {
            "contestId": 264,
            "index": "B",
            "name": "Good Sequences",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "dp",
                "number theory"
            ]
        },
        "630:F": {
            "contestId": 630,
            "index": "F",
            "name": "Selection of Personnel",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "102267:I": {
            "contestId": 102267,
            "index": "I",
            "name": "Ultimate Army",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102267:H": {
            "contestId": 102267,
            "index": "H",
            "name": "Circle of Polygon",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102267:B": {
            "contestId": 102267,
            "index": "B",
            "name": "Primes",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102267:K": {
            "contestId": 102267,
            "index": "K",
            "name": "Birthday Puzzle",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102267:C": {
            "contestId": 102267,
            "index": "C",
            "name": "Matryoshka Dolls",
            "type": "PROGRAMMING",
            "tags": []
        },
        "43:C": {
            "contestId": 43,
            "index": "C",
            "name": "Lucky Tickets",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1459:C": {
            "contestId": 1459,
            "index": "C",
            "name": "Row GCD",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1062:B": {
            "contestId": 1062,
            "index": "B",
            "name": "Math",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "101653:M": {
            "contestId": 101653,
            "index": "M",
            "name": "Polyhedra",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101653:N": {
            "contestId": 101653,
            "index": "N",
            "name": "Majority",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103256:E1": {
            "contestId": 103256,
            "index": "E1",
            "name": "Coins Game (easy version)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103256:C": {
            "contestId": 103256,
            "index": "C",
            "name": "Ultimate Huron Sorting",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103256:B": {
            "contestId": 103256,
            "index": "B",
            "name": "Huron Jam",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103256:A": {
            "contestId": 103256,
            "index": "A",
            "name": "Coffee Bar",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103736:A": {
            "contestId": 103736,
            "index": "A",
            "name": "Hello, ACMer!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101341:B": {
            "contestId": 101341,
            "index": "B",
            "name": "Pursuing the Happiness",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101341:G": {
            "contestId": 101341,
            "index": "G",
            "name": "I love Codeforces",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101341:M": {
            "contestId": 101341,
            "index": "M",
            "name": "Last Man Standing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101341:D": {
            "contestId": 101341,
            "index": "D",
            "name": "Jumps",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102267:D": {
            "contestId": 102267,
            "index": "D",
            "name": "Robots Easy",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1682:C": {
            "contestId": 1682,
            "index": "C",
            "name": "LIS or Reverse LIS?",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "102535:C": {
            "contestId": 102535,
            "index": "C",
            "name": "Working with Locks 3",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100819:M": {
            "contestId": 100819,
            "index": "M",
            "name": "Magic Trick",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100819:T": {
            "contestId": 100819,
            "index": "T",
            "name": "Triangle",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100819:R": {
            "contestId": 100819,
            "index": "R",
            "name": "Class Time",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100819:P": {
            "contestId": 100819,
            "index": "P",
            "name": "Complexity",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100819:Q": {
            "contestId": 100819,
            "index": "Q",
            "name": "Excellence",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100819:N": {
            "contestId": 100819,
            "index": "N",
            "name": "Egg Drop",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1121:B": {
            "contestId": 1121,
            "index": "B",
            "name": "Mike and Children",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "462:B": {
            "contestId": 462,
            "index": "B",
            "name": "Appleman and Card Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "961:B": {
            "contestId": 961,
            "index": "B",
            "name": "Lecture Sleep",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        "1526:C2": {
            "contestId": 1526,
            "index": "C2",
            "name": "Potions (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "15:A": {
            "contestId": 15,
            "index": "A",
            "name": "Cottage Village",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1077:B": {
            "contestId": 1077,
            "index": "B",
            "name": "Disturbed People",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "322:A": {
            "contestId": 322,
            "index": "A",
            "name": "Ciel and Dancing",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "659:C": {
            "contestId": 659,
            "index": "C",
            "name": "Tanya and Toys",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "548:A": {
            "contestId": 548,
            "index": "A",
            "name": "Mike and Fax",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "888:A": {
            "contestId": 888,
            "index": "A",
            "name": "Local Extrema",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1220:B": {
            "contestId": 1220,
            "index": "B",
            "name": "Multiplication Table",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1237:B": {
            "contestId": 1237,
            "index": "B",
            "name": "Balanced Tunnel",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "data structures",
                "sortings",
                "two pointers"
            ]
        },
        "1236:C": {
            "contestId": 1236,
            "index": "C",
            "name": "Labs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1459:B": {
            "contestId": 1459,
            "index": "B",
            "name": "Move and Turn",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "dp",
                "math"
            ]
        },
        "1742:G": {
            "contestId": 1742,
            "index": "G",
            "name": "Orray",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1730:B": {
            "contestId": 1730,
            "index": "B",
            "name": "Meeting on the Line",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "binary search",
                "geometry",
                "greedy",
                "implementation",
                "math",
                "ternary search"
            ]
        },
        "1774:E": {
            "contestId": 1774,
            "index": "E",
            "name": "Two Chess Pieces",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "1774:D": {
            "contestId": 1774,
            "index": "D",
            "name": "Same Count One",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "1767:D": {
            "contestId": 1767,
            "index": "D",
            "name": "Playoff",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1762:D": {
            "contestId": 1762,
            "index": "D",
            "name": "GCD Queries ",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "interactive",
                "number theory"
            ]
        },
        "1758:D": {
            "contestId": 1758,
            "index": "D",
            "name": "Range = √Sum",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "math",
                "two pointers"
            ]
        },
        "1761:C": {
            "contestId": 1761,
            "index": "C",
            "name": "Set Construction",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        "1759:E": {
            "contestId": 1759,
            "index": "E",
            "name": "The Humanoid",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "sortings"
            ]
        },
        "1740:E": {
            "contestId": 1740,
            "index": "E",
            "name": "Hanging Hearts",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "1740:D": {
            "contestId": 1740,
            "index": "D",
            "name": "Knowledge Cards",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        "716:A": {
            "contestId": 716,
            "index": "A",
            "name": "Crazy Computer",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "215:A": {
            "contestId": 215,
            "index": "A",
            "name": "Bicycle Chain",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1413:A": {
            "contestId": 1413,
            "index": "A",
            "name": "Finding Sasuke",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "246:A": {
            "contestId": 246,
            "index": "A",
            "name": "Buggy Sorting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "711:A": {
            "contestId": 711,
            "index": "A",
            "name": "Bus to Udayland",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "38:A": {
            "contestId": 38,
            "index": "A",
            "name": "Army",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1490:A": {
            "contestId": 1490,
            "index": "A",
            "name": "Dense Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "499:A": {
            "contestId": 499,
            "index": "A",
            "name": "Watching a movie",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "363:A": {
            "contestId": 363,
            "index": "A",
            "name": "Soroban",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "424:A": {
            "contestId": 424,
            "index": "A",
            "name": "Squats",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "104119:1": {
            "contestId": 104119,
            "index": "1",
            "name": "Самолёт",
            "type": "PROGRAMMING",
            "tags": []
        },
        "415:A": {
            "contestId": 415,
            "index": "A",
            "name": "Mashmokh and Lights",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "408:A": {
            "contestId": 408,
            "index": "A",
            "name": "Line to Cashier",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "426:A": {
            "contestId": 426,
            "index": "A",
            "name": "Sereja and Mugs",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "595:A": {
            "contestId": 595,
            "index": "A",
            "name": "Vitaly and Night",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "127:A": {
            "contestId": 127,
            "index": "A",
            "name": "Wasted Time",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "geometry"
            ]
        },
        "591:A": {
            "contestId": 591,
            "index": "A",
            "name": "Wizards' Duel",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "298:B": {
            "contestId": 298,
            "index": "B",
            "name": "Sail",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1178:C": {
            "contestId": 1178,
            "index": "C",
            "name": "Tiles",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "greedy",
                "math"
            ]
        },
        "296:A": {
            "contestId": 296,
            "index": "A",
            "name": "Yaroslav and Permutations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "353:A": {
            "contestId": 353,
            "index": "A",
            "name": "Domino",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "254:A": {
            "contestId": 254,
            "index": "A",
            "name": "Cards with Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "350:A": {
            "contestId": 350,
            "index": "A",
            "name": "TL",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "258:A": {
            "contestId": 258,
            "index": "A",
            "name": "Little Elephant and Bits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "242:B": {
            "contestId": 242,
            "index": "B",
            "name": "Big Segment",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "342:A": {
            "contestId": 342,
            "index": "A",
            "name": "Xenia and Divisors",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "186:A": {
            "contestId": 186,
            "index": "A",
            "name": "Comparing Strings",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1514:A": {
            "contestId": 1514,
            "index": "A",
            "name": "Perfectly Imperfect Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "999:C": {
            "contestId": 999,
            "index": "C",
            "name": "Alphabetic Removals",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "676:A": {
            "contestId": 676,
            "index": "A",
            "name": "Nicholas and Permutation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "680:A": {
            "contestId": 680,
            "index": "A",
            "name": "Bear and Five Cards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "262:A": {
            "contestId": 262,
            "index": "A",
            "name": "Roma and Lucky Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "378:A": {
            "contestId": 378,
            "index": "A",
            "name": "Playing with Dice",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "278:A": {
            "contestId": 278,
            "index": "A",
            "name": "Circle Line",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "389:B": {
            "contestId": 389,
            "index": "B",
            "name": "Fox and Cross",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1566:A": {
            "contestId": 1566,
            "index": "A",
            "name": "Median Maximization",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "binary search",
                "greedy",
                "math"
            ]
        },
        "1450:B": {
            "contestId": 1450,
            "index": "B",
            "name": "Balls of Steel",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "brute force",
                "geometry",
                "greedy"
            ]
        },
        "1450:A": {
            "contestId": 1450,
            "index": "A",
            "name": "Avoid Trygub",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "387:A": {
            "contestId": 387,
            "index": "A",
            "name": "George and Sleep",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "100247:H": {
            "contestId": 100247,
            "index": "H",
            "name": "Secret Information",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100247:D": {
            "contestId": 100247,
            "index": "D",
            "name": "Hamming Distance",
            "type": "PROGRAMMING",
            "tags": []
        },
        "79:A": {
            "contestId": 79,
            "index": "A",
            "name": "Bus Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "343:B": {
            "contestId": 343,
            "index": "B",
            "name": "Alternating Current",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "343:A": {
            "contestId": 343,
            "index": "A",
            "name": "Rational Resistance",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1015:B": {
            "contestId": 1015,
            "index": "B",
            "name": "Obtaining the String",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1064:A": {
            "contestId": 1064,
            "index": "A",
            "name": "Make a triangle!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "geometry",
                "math"
            ]
        },
        "978:E": {
            "contestId": 978,
            "index": "E",
            "name": "Bus Video System",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "6:A": {
            "contestId": 6,
            "index": "A",
            "name": "Triangle",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "geometry"
            ]
        },
        "102697:004": {
            "contestId": 102697,
            "index": "004",
            "name": "Polygons",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1236:A": {
            "contestId": 1236,
            "index": "A",
            "name": "Stones",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "914:A": {
            "contestId": 914,
            "index": "A",
            "name": "Perfect Squares",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "11:A": {
            "contestId": 11,
            "index": "A",
            "name": "Increasing Sequence",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1030:B": {
            "contestId": 1030,
            "index": "B",
            "name": "Vasya and Cornfield",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "geometry"
            ]
        },
        "1009:B": {
            "contestId": 1009,
            "index": "B",
            "name": "Minimum Ternary String",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1250:F": {
            "contestId": 1250,
            "index": "F",
            "name": "Data Center",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "750:B": {
            "contestId": 750,
            "index": "B",
            "name": "New Year and North Pole",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        "12:E": {
            "contestId": 12,
            "index": "E",
            "name": "Start of the session",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms"
            ]
        },
        "12:C": {
            "contestId": 12,
            "index": "C",
            "name": "Fruits",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "12:B": {
            "contestId": 12,
            "index": "B",
            "name": "Correct Solution?",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "12:A": {
            "contestId": 12,
            "index": "A",
            "name": "Super Agent",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "81:A": {
            "contestId": 81,
            "index": "A",
            "name": "Plug-in",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "implementation"
            ]
        },
        "17:A": {
            "contestId": 17,
            "index": "A",
            "name": "Noldbach problem",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "102697:164": {
            "contestId": 102697,
            "index": "164",
            "name": "Cashier",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:020": {
            "contestId": 102697,
            "index": "020",
            "name": "Codebusters",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:019": {
            "contestId": 102697,
            "index": "019",
            "name": "Boomilever",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:018": {
            "contestId": 102697,
            "index": "018",
            "name": "Machines",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:017": {
            "contestId": 102697,
            "index": "017",
            "name": "Chem Lab: Cross the Charges",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:016": {
            "contestId": 102697,
            "index": "016",
            "name": "Gravity Vehicle Testing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:014": {
            "contestId": 102697,
            "index": "014",
            "name": "Labyrinth",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:013": {
            "contestId": 102697,
            "index": "013",
            "name": "Resistors in Parallel",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:012": {
            "contestId": 102697,
            "index": "012",
            "name": "Easy Exponentials",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:011": {
            "contestId": 102697,
            "index": "011",
            "name": "Ski Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:010": {
            "contestId": 102697,
            "index": "010",
            "name": "Points per Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:009": {
            "contestId": 102697,
            "index": "009",
            "name": "Hello CodeRams",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:008": {
            "contestId": 102697,
            "index": "008",
            "name": "N-Dimensional Distance",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:007": {
            "contestId": 102697,
            "index": "007",
            "name": "Clock Seconds",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:006": {
            "contestId": 102697,
            "index": "006",
            "name": "Distance",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:005": {
            "contestId": 102697,
            "index": "005",
            "name": "Fizz Buzz",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:003": {
            "contestId": 102697,
            "index": "003",
            "name": "Triangle Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:001": {
            "contestId": 102697,
            "index": "001",
            "name": "Square The Number",
            "type": "PROGRAMMING",
            "tags": []
        },
        "546:B": {
            "contestId": 546,
            "index": "B",
            "name": "Soldier and Badges",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "376:A": {
            "contestId": 376,
            "index": "A",
            "name": "Lever",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "102263:A": {
            "contestId": 102263,
            "index": "A",
            "name": "Is It Easy ?",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1699:B": {
            "contestId": 1699,
            "index": "B",
            "name": "Almost Ternary Matrix",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "matrices"
            ]
        },
        "215:B": {
            "contestId": 215,
            "index": "B",
            "name": "Olympic Medal",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "88:B": {
            "contestId": 88,
            "index": "B",
            "name": "Keyboard",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "implementation"
            ]
        },
        "810:B": {
            "contestId": 810,
            "index": "B",
            "name": "Summer sell-off",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1547:B": {
            "contestId": 1547,
            "index": "B",
            "name": "Alphabetical Strings",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "78:B": {
            "contestId": 78,
            "index": "B",
            "name": "Easter Eggs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "384:A": {
            "contestId": 384,
            "index": "A",
            "name": "Coder",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "721:A": {
            "contestId": 721,
            "index": "A",
            "name": "One-dimensional Japanese Crossword",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "289:A": {
            "contestId": 289,
            "index": "A",
            "name": "Polo the Penguin and Segments ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "454:A": {
            "contestId": 454,
            "index": "A",
            "name": "Little Pony and Crystal Mine",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "950:A": {
            "contestId": 950,
            "index": "A",
            "name": "Left-handers, Right-handers and Ambidexters",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "382:A": {
            "contestId": 382,
            "index": "A",
            "name": "Ksenia and Pan Scales",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "218:A": {
            "contestId": 218,
            "index": "A",
            "name": "Mountain Scenery",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        "244:A": {
            "contestId": 244,
            "index": "A",
            "name": "Dividing Orange",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "489:A": {
            "contestId": 489,
            "index": "A",
            "name": "SwapSort",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "702:B": {
            "contestId": 702,
            "index": "B",
            "name": "Powers of Two",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "data structures",
                "implementation",
                "math"
            ]
        },
        "817:C": {
            "contestId": 817,
            "index": "C",
            "name": "Really Big Numbers",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "math"
            ]
        },
        "1077:D": {
            "contestId": 1077,
            "index": "D",
            "name": "Cutting Out",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "sortings"
            ]
        },
        "1352:F": {
            "contestId": 1352,
            "index": "F",
            "name": "Binary String Reconstruction",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "math"
            ]
        },
        "1352:E": {
            "contestId": 1352,
            "index": "E",
            "name": "Special Elements",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "implementation",
                "two pointers"
            ]
        },
        "3:A": {
            "contestId": 3,
            "index": "A",
            "name": "Shortest path of the king",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "shortest paths"
            ]
        },
        "103968:A": {
            "contestId": 103968,
            "index": "A",
            "name": "Counting Celebratory Candles",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1552:A": {
            "contestId": 1552,
            "index": "A",
            "name": "Subsequence Permutation",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 800,
            "tags": [
                "sortings",
                "strings"
            ]
        },
        "1728:D": {
            "contestId": 1728,
            "index": "D",
            "name": "Letter Picking",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "games",
                "two pointers"
            ]
        },
        "1713:C": {
            "contestId": 1713,
            "index": "C",
            "name": "Build Permutation",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        "1706:C": {
            "contestId": 1706,
            "index": "C",
            "name": "Qpwoeirut And The City",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "dp",
                "flows",
                "greedy",
                "implementation"
            ]
        },
        "1703:E": {
            "contestId": 1703,
            "index": "E",
            "name": "Mirror Grid",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1566:C": {
            "contestId": 1566,
            "index": "C",
            "name": "MAX-MEX Cut",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "145:A": {
            "contestId": 145,
            "index": "A",
            "name": "Lucky Conversion",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1132:A": {
            "contestId": 1132,
            "index": "A",
            "name": "Regular Bracket Sequence",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1594:B": {
            "contestId": 1594,
            "index": "B",
            "name": "Special Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "bitmasks",
                "math"
            ]
        },
        "805:A": {
            "contestId": 805,
            "index": "A",
            "name": "Fake NP",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1195:A": {
            "contestId": 1195,
            "index": "A",
            "name": "Drinks Choosing",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1117:B": {
            "contestId": 1117,
            "index": "B",
            "name": "Emotes",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1011:A": {
            "contestId": 1011,
            "index": "A",
            "name": "Stages",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1270:A": {
            "contestId": 1270,
            "index": "A",
            "name": "Card Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "games",
                "greedy",
                "math"
            ]
        },
        "1584:A": {
            "contestId": 1584,
            "index": "A",
            "name": "Mathematical Addition",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "246:B": {
            "contestId": 246,
            "index": "B",
            "name": "Increase and Decrease",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "937:A": {
            "contestId": 937,
            "index": "A",
            "name": "Olympiad",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "631:A": {
            "contestId": 631,
            "index": "A",
            "name": "Interview",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1530:B": {
            "contestId": 1530,
            "index": "B",
            "name": "Putting Plates",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1512:B": {
            "contestId": 1512,
            "index": "B",
            "name": "Almost Rectangle",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1260:B": {
            "contestId": 1260,
            "index": "B",
            "name": "Obtain Two Zeroes",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1187:B": {
            "contestId": 1187,
            "index": "B",
            "name": "Letters Shop",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "implementation",
                "strings"
            ]
        },
        "186:B": {
            "contestId": 186,
            "index": "B",
            "name": "Growing Mushrooms",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1466:B": {
            "contestId": 1466,
            "index": "B",
            "name": "Last minute enhancements",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1288:B": {
            "contestId": 1288,
            "index": "B",
            "name": "Yet Another Meme Problem",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "209:A": {
            "contestId": 209,
            "index": "A",
            "name": "Multicolored Marbles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "dp",
                "math"
            ]
        },
        "1225:A": {
            "contestId": 1225,
            "index": "A",
            "name": "Forgetting Things",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1136:A": {
            "contestId": 1136,
            "index": "A",
            "name": "Nastya Is Reading a Book",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1398:C": {
            "contestId": 1398,
            "index": "C",
            "name": "Good Subarrays",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "dp",
                "math"
            ]
        },
        "922:A": {
            "contestId": 922,
            "index": "A",
            "name": "Cloning Toys",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1062:A": {
            "contestId": 1062,
            "index": "A",
            "name": "A Prank",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "280:B": {
            "contestId": 280,
            "index": "B",
            "name": "Maximum Xor Secondary",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "data structures",
                "implementation",
                "two pointers"
            ]
        },
        "1080:A": {
            "contestId": 1080,
            "index": "A",
            "name": "Petya and Origami",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1191:A": {
            "contestId": 1191,
            "index": "A",
            "name": "Tokitsukaze and Enhancement",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "897:A": {
            "contestId": 897,
            "index": "A",
            "name": "Scarborough Fair",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "867:A": {
            "contestId": 867,
            "index": "A",
            "name": "Between the Offices",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "727:A": {
            "contestId": 727,
            "index": "A",
            "name": "Transformation: from A to B",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "dfs and similar",
                "math"
            ]
        },
        "832:A": {
            "contestId": 832,
            "index": "A",
            "name": "Sasha and Sticks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "games",
                "math"
            ]
        },
        "409:D": {
            "contestId": 409,
            "index": "D",
            "name": "Big Data",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "*special"
            ]
        },
        "1331:A": {
            "contestId": 1331,
            "index": "A",
            "name": "Is it rated?",
            "type": "PROGRAMMING",
            "tags": [
                "*special"
            ]
        },
        "409:H": {
            "contestId": 409,
            "index": "H",
            "name": "A + B Strikes Back",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "brute force",
                "constructive algorithms",
                "dsu",
                "implementation"
            ]
        },
        "409:B": {
            "contestId": 409,
            "index": "B",
            "name": "Mysterious Language",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "*special"
            ]
        },
        "409:A": {
            "contestId": 409,
            "index": "A",
            "name": "The Great Game",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "*special"
            ]
        },
        "409:F": {
            "contestId": 409,
            "index": "F",
            "name": "000001",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "*special"
            ]
        },
        "1647:B": {
            "contestId": 1647,
            "index": "B",
            "name": "Madoka and the Elegant Gift",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        "267:A": {
            "contestId": 267,
            "index": "A",
            "name": "Subtractions",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "793:A": {
            "contestId": 793,
            "index": "A",
            "name": "Oleg and shares",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "441:A": {
            "contestId": 441,
            "index": "A",
            "name": "Valera and Antique Items",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1684:D": {
            "contestId": 1684,
            "index": "D",
            "name": "Traps",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "527:A": {
            "contestId": 527,
            "index": "A",
            "name": "Playing with Paper",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1684:C": {
            "contestId": 1684,
            "index": "C",
            "name": "Column Swapping",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1399:D": {
            "contestId": 1399,
            "index": "D",
            "name": "Binary String To Subsequences",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1055:A": {
            "contestId": 1055,
            "index": "A",
            "name": "Metro",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "graphs"
            ]
        },
        "948:A": {
            "contestId": 948,
            "index": "A",
            "name": "Protect Sheep",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "755:A": {
            "contestId": 755,
            "index": "A",
            "name": "PolandBall and Hypothesis",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "graphs",
                "math",
                "number theory"
            ]
        },
        "1675:D": {
            "contestId": 1675,
            "index": "D",
            "name": "Vertical Paths",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "graphs",
                "implementation",
                "trees"
            ]
        },
        "1669:H": {
            "contestId": 1669,
            "index": "H",
            "name": "Maximal AND",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "bitmasks",
                "greedy",
                "math"
            ]
        },
        "1248:B": {
            "contestId": 1248,
            "index": "B",
            "name": "Grow The Tree",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1102:C": {
            "contestId": 1102,
            "index": "C",
            "name": "Doors Breaking and Repairing",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "games"
            ]
        },
        "103158:L": {
            "contestId": 103158,
            "index": "L",
            "name": "Memable Ace",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:119": {
            "contestId": 102697,
            "index": "119",
            "name": "Division One",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102757:A": {
            "contestId": 102757,
            "index": "A",
            "name": "Time Machine",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102942:B": {
            "contestId": 102942,
            "index": "B",
            "name": "Make All Odd",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102830:A": {
            "contestId": 102830,
            "index": "A",
            "name": "First Problem",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102873:A": {
            "contestId": 102873,
            "index": "A",
            "name": "Catching the Impostor",
            "type": "PROGRAMMING",
            "tags": []
        },
        "630:R": {
            "contestId": 630,
            "index": "R",
            "name": "Game",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "games",
                "math"
            ]
        },
        "103647:A": {
            "contestId": 103647,
            "index": "A",
            "name": " Night Nesting",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:002": {
            "contestId": 102697,
            "index": "002",
            "name": "Triple Product",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103562:B": {
            "contestId": 103562,
            "index": "B",
            "name": "Watch Your Sugar!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103317:B": {
            "contestId": 103317,
            "index": "B",
            "name": "Pro Bending",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103317:A": {
            "contestId": 103317,
            "index": "A",
            "name": "Oseye Sort",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103294:A": {
            "contestId": 103294,
            "index": "A",
            "name": "Journey Home",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103347:B": {
            "contestId": 103347,
            "index": "B",
            "name": "Ophelia's Sadness",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103347:A": {
            "contestId": 103347,
            "index": "A",
            "name": "Ophelia's Happiness",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103455:A": {
            "contestId": 103455,
            "index": "A",
            "name": "Fundraising the Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103562:A": {
            "contestId": 103562,
            "index": "A",
            "name": "Phone Numbers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103584:A": {
            "contestId": 103584,
            "index": "A",
            "name": "New Garden",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103624:A": {
            "contestId": 103624,
            "index": "A",
            "name": "Queen Anne's Revenge",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103647:B": {
            "contestId": 103647,
            "index": "B",
            "name": "Friendly Flamingos",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1589:A": {
            "contestId": 1589,
            "index": "A",
            "name": "Mathematical Addition",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "102948:B": {
            "contestId": 102948,
            "index": "B",
            "name": "Rapid Jaguar",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102948:A": {
            "contestId": 102948,
            "index": "A",
            "name": "Spiciest Snek",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102986:B": {
            "contestId": 102986,
            "index": "B",
            "name": "Sharing Cheerios",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102986:A": {
            "contestId": 102986,
            "index": "A",
            "name": "Favorite Foods",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103036:A": {
            "contestId": 103036,
            "index": "A",
            "name": "Switching Up the Playlist",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103380:A": {
            "contestId": 103380,
            "index": "A",
            "name": "Sad Santa",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103269:C": {
            "contestId": 103269,
            "index": "C",
            "name": "Abhilash's Dog",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103269:A": {
            "contestId": 103269,
            "index": "A",
            "name": "Welcome",
            "type": "PROGRAMMING",
            "tags": []
        },
        "979:A": {
            "contestId": 979,
            "index": "A",
            "name": "Pizza, Pizza, Pizza!!!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "102397:F": {
            "contestId": 102397,
            "index": "F",
            "name": "Weird Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102397:C": {
            "contestId": 102397,
            "index": "C",
            "name": "The Ending Point",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102397:A": {
            "contestId": 102397,
            "index": "A",
            "name": "Bashar and SHAWERMA!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102397:B": {
            "contestId": 102397,
            "index": "B",
            "name": "Calculate The Area",
            "type": "PROGRAMMING",
            "tags": []
        },
        "33:A": {
            "contestId": 33,
            "index": "A",
            "name": "What is for dinner?",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1166:A": {
            "contestId": 1166,
            "index": "A",
            "name": "Silent Classroom",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "combinatorics",
                "greedy"
            ]
        },
        "1266:B": {
            "contestId": 1266,
            "index": "B",
            "name": "Dice Tower",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1174:A": {
            "contestId": 1174,
            "index": "A",
            "name": "Ehab Fails to Be Thanos",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1422:A": {
            "contestId": 1422,
            "index": "A",
            "name": "Fence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "1102:A": {
            "contestId": 1102,
            "index": "A",
            "name": "Integer Sequence Dividing",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "103624:C": {
            "contestId": 103624,
            "index": "C",
            "name": "One Piece",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103624:B": {
            "contestId": 103624,
            "index": "B",
            "name": "Balanced Cannons",
            "type": "PROGRAMMING",
            "tags": []
        },
        "707:C": {
            "contestId": 707,
            "index": "C",
            "name": "Pythagorean Triples",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "304:A": {
            "contestId": 304,
            "index": "A",
            "name": "Pythagorean Theorem II",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "799:B": {
            "contestId": 799,
            "index": "B",
            "name": "T-shirt buying",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "63:A": {
            "contestId": 63,
            "index": "A",
            "name": "Sinking Ship",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "225:A": {
            "contestId": 225,
            "index": "A",
            "name": "Dice Tower",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1481:B": {
            "contestId": 1481,
            "index": "B",
            "name": "New Colony",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1610:B": {
            "contestId": 1610,
            "index": "B",
            "name": "Kalindrome Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        "1455:C": {
            "contestId": 1455,
            "index": "C",
            "name": "Ping-pong",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "games",
                "math"
            ]
        },
        "1445:B": {
            "contestId": 1445,
            "index": "B",
            "name": "Elimination",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1438:B": {
            "contestId": 1438,
            "index": "B",
            "name": "Valerii Against Everyone",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1430:A": {
            "contestId": 1430,
            "index": "A",
            "name": "Number of Apartments",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        "1428:C": {
            "contestId": 1428,
            "index": "C",
            "name": "ABBB",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "strings"
            ]
        },
        "1637:B": {
            "contestId": 1637,
            "index": "B",
            "name": "MEX and Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1631:B": {
            "contestId": 1631,
            "index": "B",
            "name": "Fun with Even Subarrays",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1623:B": {
            "contestId": 1623,
            "index": "B",
            "name": "Game on Ranges",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "dfs and similar",
                "implementation",
                "sortings"
            ]
        },
        "1625:B": {
            "contestId": 1625,
            "index": "B",
            "name": "Elementary Particles",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1447:B": {
            "contestId": 1447,
            "index": "B",
            "name": "Numbers Box",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "79:B": {
            "contestId": 79,
            "index": "B",
            "name": "Colorful Field",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "415:B": {
            "contestId": 415,
            "index": "B",
            "name": "Mashmokh and Tokens",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "614:B": {
            "contestId": 614,
            "index": "B",
            "name": "Gena's Code",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "475:A": {
            "contestId": 475,
            "index": "A",
            "name": "Bayan Bus",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "369:B": {
            "contestId": 369,
            "index": "B",
            "name": "Valera and Contest",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "716:B": {
            "contestId": 716,
            "index": "B",
            "name": "Complete the Word",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        "560:A": {
            "contestId": 560,
            "index": "A",
            "name": "Currency System in Geraldion",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "552:A": {
            "contestId": 552,
            "index": "A",
            "name": "Vanya and Table",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "535:A": {
            "contestId": 535,
            "index": "A",
            "name": "Tavas and Nafas",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "376:B": {
            "contestId": 376,
            "index": "B",
            "name": "I.O.U.",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "400:B": {
            "contestId": 400,
            "index": "B",
            "name": "Inna and New Matrix of Candies",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation",
                "schedules"
            ]
        },
        "137:A": {
            "contestId": 137,
            "index": "A",
            "name": "Postcards and photos",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "152:B": {
            "contestId": 152,
            "index": "B",
            "name": "Steps",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "implementation"
            ]
        },
        "148:B": {
            "contestId": 148,
            "index": "B",
            "name": "Escape",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "667:A": {
            "contestId": 667,
            "index": "A",
            "name": "Pouring Rain",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "287:B": {
            "contestId": 287,
            "index": "B",
            "name": "Pipeline",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1108:A": {
            "contestId": 1108,
            "index": "A",
            "name": "Two distinct points",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "100283:K": {
            "contestId": 100283,
            "index": "K",
            "name": "Cubes Shuffling",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100283:E": {
            "contestId": 100283,
            "index": "E",
            "name": "Ghanophobia",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100814:B": {
            "contestId": 100814,
            "index": "B",
            "name": "Unlucky Teacher",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100814:I": {
            "contestId": 100814,
            "index": "I",
            "name": "Salem",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100814:F": {
            "contestId": 100814,
            "index": "F",
            "name": "Geometry",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1538:F": {
            "contestId": 1538,
            "index": "F",
            "name": "Interesting Function",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "dp",
                "math",
                "number theory"
            ]
        },
        "1443:A": {
            "contestId": 1443,
            "index": "A",
            "name": "Kids Seating",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1676:H2": {
            "contestId": 1676,
            "index": "H2",
            "name": "Maximum Crossings (Hard Version)",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "data structures",
                "divide and conquer",
                "sortings"
            ]
        },
        "1714:E": {
            "contestId": 1714,
            "index": "E",
            "name": "Add Modulo 10",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1572:A": {
            "contestId": 1572,
            "index": "A",
            "name": "Book",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1800,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "dp",
                "graphs",
                "implementation",
                "sortings"
            ]
        },
        "1694:C": {
            "contestId": 1694,
            "index": "C",
            "name": "Directional Increase",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "732:D": {
            "contestId": 732,
            "index": "D",
            "name": "Exams",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "1668:C": {
            "contestId": 1668,
            "index": "C",
            "name": "Make it Increasing",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1475:G": {
            "contestId": 1475,
            "index": "G",
            "name": "Strange Beauty",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dp",
                "math",
                "number theory",
                "sortings"
            ]
        },
        "1353:F": {
            "contestId": 1353,
            "index": "F",
            "name": "Decreasing Heights",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "1433:G": {
            "contestId": 1433,
            "index": "G",
            "name": "Reducing Delivery Cost",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "graphs",
                "shortest paths"
            ]
        },
        "1702:E": {
            "contestId": 1702,
            "index": "E",
            "name": "Split Into Two Sets",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1700:D": {
            "contestId": 1700,
            "index": "D",
            "name": "River Locks",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1625:C": {
            "contestId": 1625,
            "index": "C",
            "name": "Road Optimization",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dp"
            ]
        },
        "1312:D": {
            "contestId": 1312,
            "index": "D",
            "name": "Count the Arrays",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1131:A": {
            "contestId": 1131,
            "index": "A",
            "name": "Sea Battle",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "66:A": {
            "contestId": 66,
            "index": "A",
            "name": "Petya and Java",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "101810:I": {
            "contestId": 101810,
            "index": "I",
            "name": "Split the Number",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101810:B": {
            "contestId": 101810,
            "index": "B",
            "name": "Friends and Cookies",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1428:A": {
            "contestId": 1428,
            "index": "A",
            "name": "Box is Pull",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1612:A": {
            "contestId": 1612,
            "index": "A",
            "name": "Distance",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        "1659:B": {
            "contestId": 1659,
            "index": "B",
            "name": "Bit Flipping",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1679:C": {
            "contestId": 1679,
            "index": "C",
            "name": "Rooks Defenders",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1517:C": {
            "contestId": 1517,
            "index": "C",
            "name": "Fillomino 2",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "implementation"
            ]
        },
        "1509:B": {
            "contestId": 1509,
            "index": "B",
            "name": "TMT Document",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy"
            ]
        },
        "1516:B": {
            "contestId": 1516,
            "index": "B",
            "name": "AGAGA XOOORRR",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1514:C": {
            "contestId": 1514,
            "index": "C",
            "name": "Product 1 Modulo N",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "greedy",
                "number theory"
            ]
        },
        "1279:A": {
            "contestId": 1279,
            "index": "A",
            "name": "New Year Garland",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1282:A": {
            "contestId": 1282,
            "index": "A",
            "name": "Temporarily unavailable",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1313:A": {
            "contestId": 1313,
            "index": "A",
            "name": "Fast Food Restaurant",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1321:A": {
            "contestId": 1321,
            "index": "A",
            "name": "Contest for Robots",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy"
            ]
        },
        "1419:A": {
            "contestId": 1419,
            "index": "A",
            "name": "Digit Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "games",
                "greedy",
                "implementation"
            ]
        },
        "814:A": {
            "contestId": 814,
            "index": "A",
            "name": "An abandoned sentiment from past",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "101021:1": {
            "contestId": 101021,
            "index": "1",
            "name": "Guess the Number",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1488:A": {
            "contestId": 1488,
            "index": "A",
            "name": "From Zero To Y",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "*special",
                "math"
            ]
        },
        "1546:B": {
            "contestId": 1546,
            "index": "B",
            "name": "AquaMoon and Stolen String",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "interactive",
                "math"
            ]
        },
        "1492:B": {
            "contestId": 1492,
            "index": "B",
            "name": "Card Deck",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "data structures",
                "greedy",
                "math"
            ]
        },
        "1511:C": {
            "contestId": 1511,
            "index": "C",
            "name": "Yet Another Card Deck",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "data structures",
                "implementation",
                "trees"
            ]
        },
        "1529:B": {
            "contestId": 1529,
            "index": "B",
            "name": "Sifid and Strange Subsequences",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1100,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1523:B": {
            "contestId": 1523,
            "index": "B",
            "name": "Lord of the Values",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1534:B": {
            "contestId": 1534,
            "index": "B",
            "name": "Histogram Ugliness",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1566:D1": {
            "contestId": 1566,
            "index": "D1",
            "name": "Seating Arrangements (easy version) ",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1574:B": {
            "contestId": 1574,
            "index": "B",
            "name": "Combinatorics Homework",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "combinatorics",
                "greedy",
                "math"
            ]
        },
        "1579:B": {
            "contestId": 1579,
            "index": "B",
            "name": "Shifting Sort",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "910:B": {
            "contestId": 910,
            "index": "B",
            "name": "Door Frames",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "835:A": {
            "contestId": 835,
            "index": "A",
            "name": "Key races",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1216:A": {
            "contestId": 1216,
            "index": "A",
            "name": "Prefixes",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "strings"
            ]
        },
        "660:A": {
            "contestId": 660,
            "index": "A",
            "name": "Co-prime Array",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "114:A": {
            "contestId": 114,
            "index": "A",
            "name": "Cifera",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "675:A": {
            "contestId": 675,
            "index": "A",
            "name": "Infinite Sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "808:A": {
            "contestId": 808,
            "index": "A",
            "name": "Lucky Year",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1827:A": {
            "contestId": 1827,
            "index": "A",
            "name": "Counting Orders",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "combinatorics",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1667:F": {
            "contestId": 1667,
            "index": "F",
            "name": "Yin Yang",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3500,
            "tags": [
                "implementation"
            ]
        },
        "938:A": {
            "contestId": 938,
            "index": "A",
            "name": "Word Correction",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "938:B": {
            "contestId": 938,
            "index": "B",
            "name": "Run For Your Prize",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "363:C": {
            "contestId": 363,
            "index": "C",
            "name": "Fixing Typos",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "629:A": {
            "contestId": 629,
            "index": "A",
            "name": "Far Relative’s Birthday Cake",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "implementation"
            ]
        },
        "1822:G1": {
            "contestId": 1822,
            "index": "G1",
            "name": "Magic Triples (Easy Version)",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "data structures",
                "math",
                "number theory"
            ]
        },
        "1201:B": {
            "contestId": 1201,
            "index": "B",
            "name": "Zero Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "253:B": {
            "contestId": 253,
            "index": "B",
            "name": "Physics Practical",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "binary search",
                "dp",
                "sortings",
                "two pointers"
            ]
        },
        "1534:A": {
            "contestId": 1534,
            "index": "A",
            "name": "Colour the Flag",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1523:A": {
            "contestId": 1523,
            "index": "A",
            "name": "Game of Life",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1658:C": {
            "contestId": 1658,
            "index": "C",
            "name": "Shinju and the Lost Permutation",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1658:D1": {
            "contestId": 1658,
            "index": "D1",
            "name": "388535 (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "math"
            ]
        },
        "1644:D": {
            "contestId": 1644,
            "index": "D",
            "name": "Cross Coloring",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "implementation",
                "math"
            ]
        },
        "1648:A": {
            "contestId": 1648,
            "index": "A",
            "name": "Weird Sum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "combinatorics",
                "data structures",
                "geometry",
                "math",
                "matrices",
                "sortings"
            ]
        },
        "1654:C": {
            "contestId": 1654,
            "index": "C",
            "name": "Alice and the Cake",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1647:C": {
            "contestId": 1647,
            "index": "C",
            "name": "Madoka and Childish Pranks",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1651:C": {
            "contestId": 1651,
            "index": "C",
            "name": "Fault-tolerant Network",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "data structures",
                "implementation"
            ]
        },
        "1650:D": {
            "contestId": 1650,
            "index": "D",
            "name": "Twist the Permutation",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1646:C": {
            "contestId": 1646,
            "index": "C",
            "name": "Factorials and Powers of Two",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        "1513:A": {
            "contestId": 1513,
            "index": "A",
            "name": "Array and Peaks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1638:C": {
            "contestId": 1638,
            "index": "C",
            "name": "Inversion Graph",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "math"
            ]
        },
        "1739:C": {
            "contestId": 1739,
            "index": "C",
            "name": "Card Game",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "dp",
                "games"
            ]
        },
        "1782:C": {
            "contestId": 1782,
            "index": "C",
            "name": "Equal Frequencies",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "1766:D": {
            "contestId": 1766,
            "index": "D",
            "name": "Lucky Chains",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1088:B": {
            "contestId": 1088,
            "index": "B",
            "name": "Ehab and subtraction",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "895:A": {
            "contestId": 895,
            "index": "A",
            "name": "Pizza Separation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1831:C": {
            "contestId": 1831,
            "index": "C",
            "name": "Copil Copac Draws Trees",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "1825:C": {
            "contestId": 1825,
            "index": "C",
            "name": "LuoTianyi and the Show",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1797:C": {
            "contestId": 1797,
            "index": "C",
            "name": "Li Hua and Chess",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "interactive"
            ]
        },
        "1793:D": {
            "contestId": 1793,
            "index": "D",
            "name": "Moscow Gorillas",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "1029:A": {
            "contestId": 1029,
            "index": "A",
            "name": "Many Equal Substrings",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1030:C": {
            "contestId": 1030,
            "index": "C",
            "name": "Vasya and Golden Ticket",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1037:A": {
            "contestId": 1037,
            "index": "A",
            "name": "Packets",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1037:B": {
            "contestId": 1037,
            "index": "B",
            "name": "Reach Median",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1038:C": {
            "contestId": 1038,
            "index": "C",
            "name": "Gambling",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1065:B": {
            "contestId": 1065,
            "index": "B",
            "name": "Vasya and Isolated Vertices",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        "1076:A": {
            "contestId": 1076,
            "index": "A",
            "name": "Minimizing the String",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1076:C": {
            "contestId": 1076,
            "index": "C",
            "name": "Meme Problem",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1077:C": {
            "contestId": 1077,
            "index": "C",
            "name": "Good Array",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": []
        },
        "1093:C": {
            "contestId": 1093,
            "index": "C",
            "name": "Mishka and the Last Exam",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1096:B": {
            "contestId": 1096,
            "index": "B",
            "name": "Substring Removal",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "combinatorics",
                "math",
                "strings"
            ]
        },
        "1104:B": {
            "contestId": 1104,
            "index": "B",
            "name": "Game with string",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "data structures",
                "implementation",
                "math"
            ]
        },
        "1108:C": {
            "contestId": 1108,
            "index": "C",
            "name": "Nice Garland",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1165:C": {
            "contestId": 1165,
            "index": "C",
            "name": "Good String",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1174:B": {
            "contestId": 1174,
            "index": "B",
            "name": "Ehab Is an Odd Person",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "sortings"
            ]
        },
        "1174:C": {
            "contestId": 1174,
            "index": "C",
            "name": "Ehab and a Special Coloring Problem",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        "1176:C": {
            "contestId": 1176,
            "index": "C",
            "name": "Lose it!",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1307:B": {
            "contestId": 1307,
            "index": "B",
            "name": "Cow and Friend",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "geometry",
                "greedy",
                "math"
            ]
        },
        "1549:B": {
            "contestId": 1549,
            "index": "B",
            "name": "Gregor and the Pawn Game",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "dfs and similar",
                "dp",
                "flows",
                "graph matchings",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        "1721:C": {
            "contestId": 1721,
            "index": "C",
            "name": "Min-Max Array Transformation",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "greedy",
                "two pointers"
            ]
        },
        "1708:C": {
            "contestId": 1708,
            "index": "C",
            "name": "Doremy's IQ",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "1699:C": {
            "contestId": 1699,
            "index": "C",
            "name": "The Third Problem",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        "1451:A": {
            "contestId": 1451,
            "index": "A",
            "name": "Subtract or Divide",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1583:A": {
            "contestId": 1583,
            "index": "A",
            "name": "Windblume Ode",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1604:A": {
            "contestId": 1604,
            "index": "A",
            "name": "Era",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1617:A": {
            "contestId": 1617,
            "index": "A",
            "name": "Forbidden Subsequence",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        "1700:C": {
            "contestId": 1700,
            "index": "C",
            "name": "Helping the Nature",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        "1695:C": {
            "contestId": 1695,
            "index": "C",
            "name": "Zero Path",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "1201:A": {
            "contestId": 1201,
            "index": "A",
            "name": "Important Exam",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1163:A": {
            "contestId": 1163,
            "index": "A",
            "name": "Eating Soup",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1433:B": {
            "contestId": 1433,
            "index": "B",
            "name": "Yet Another Bookshelf",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1006:B": {
            "contestId": 1006,
            "index": "B",
            "name": "Polycarp's Practice",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1139:B": {
            "contestId": 1139,
            "index": "B",
            "name": "Chocolates",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "32:A": {
            "contestId": 32,
            "index": "A",
            "name": "Reconnaissance",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force"
            ]
        },
        "112:C": {
            "contestId": 112,
            "index": "C",
            "name": "Petya and Inequiations",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "242:C": {
            "contestId": 242,
            "index": "C",
            "name": "King's Path",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "graphs",
                "hashing",
                "shortest paths"
            ]
        },
        "960:B": {
            "contestId": 960,
            "index": "B",
            "name": "Minimize the error",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "960:A": {
            "contestId": 960,
            "index": "A",
            "name": "Check the string",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "768:B": {
            "contestId": 768,
            "index": "B",
            "name": "Code For 1",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "divide and conquer"
            ]
        },
        "1017:A": {
            "contestId": 1017,
            "index": "A",
            "name": "The Rank",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "706:A": {
            "contestId": 706,
            "index": "A",
            "name": "Beru-taxi",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "geometry",
                "implementation"
            ]
        },
        "1345:A": {
            "contestId": 1345,
            "index": "A",
            "name": "Puzzle Pieces",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "439:B": {
            "contestId": 439,
            "index": "B",
            "name": "Devu, the Dumb Guy",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1817:A": {
            "contestId": 1817,
            "index": "A",
            "name": "Almost Increasing Subsequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "binary search",
                "data structures",
                "greedy"
            ]
        },
        "1527:C": {
            "contestId": 1527,
            "index": "C",
            "name": "Sequence Pair Weight",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "hashing",
                "implementation",
                "math"
            ]
        },
        "710:B": {
            "contestId": 710,
            "index": "B",
            "name": "Optimal Point on a Line",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "sortings"
            ]
        },
        "488:A": {
            "contestId": 488,
            "index": "A",
            "name": "Giga Tower",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force"
            ]
        },
        "1393:A": {
            "contestId": 1393,
            "index": "A",
            "name": "Rainbow Dash, Fluttershy and Chess Coloring",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1375:A": {
            "contestId": 1375,
            "index": "A",
            "name": "Sign Flipping",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "735:A": {
            "contestId": 735,
            "index": "A",
            "name": "Ostap and Grasshopper",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "101968:D": {
            "contestId": 101968,
            "index": "D",
            "name": "Two Sequences",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1426:C": {
            "contestId": 1426,
            "index": "C",
            "name": "Increase and Copy",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        "162:B": {
            "contestId": 162,
            "index": "B",
            "name": "Binary notation",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special"
            ]
        },
        "162:A": {
            "contestId": 162,
            "index": "A",
            "name": "Pentagonal numbers",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "188:A": {
            "contestId": 188,
            "index": "A",
            "name": "Hexagonal Numbers",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "*special"
            ]
        },
        "188:F": {
            "contestId": 188,
            "index": "F",
            "name": "Binary Notation",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "188:D": {
            "contestId": 188,
            "index": "D",
            "name": "Asterisks",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "188:C": {
            "contestId": 188,
            "index": "C",
            "name": "LCM",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "implementation",
                "math"
            ]
        },
        "188:B": {
            "contestId": 188,
            "index": "B",
            "name": "A + Reverse B",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "719:A": {
            "contestId": 719,
            "index": "A",
            "name": "Vitya in the Countryside",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "104308:C": {
            "contestId": 104308,
            "index": "C",
            "name": "Optimal Pairing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104303:B": {
            "contestId": 104303,
            "index": "B",
            "name": "熙巨打票",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104339:B": {
            "contestId": 104339,
            "index": "B",
            "name": "Four kettlebells",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104303:A": {
            "contestId": 104303,
            "index": "A",
            "name": "签到啦~",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104308:G": {
            "contestId": 104308,
            "index": "G",
            "name": "Keyboard Warrior Roshid",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104168:B1": {
            "contestId": 104168,
            "index": "B1",
            "name": "Longest Common Suffix",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104168:A": {
            "contestId": 104168,
            "index": "A",
            "name": "Divisor Difference",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104257:E": {
            "contestId": 104257,
            "index": "E",
            "name": "Easter Eggs",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104257:A": {
            "contestId": 104257,
            "index": "A",
            "name": "Acceptable Answer",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104282:A": {
            "contestId": 104282,
            "index": "A",
            "name": "Zawei The Rock",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104289:B": {
            "contestId": 104289,
            "index": "B",
            "name": "OR-bitax",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104289:C": {
            "contestId": 104289,
            "index": "C",
            "name": "Equal Digits",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104237:E": {
            "contestId": 104237,
            "index": "E",
            "name": "Tree Counting",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104237:B": {
            "contestId": 104237,
            "index": "B",
            "name": "Road Intersections",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104237:A": {
            "contestId": 104237,
            "index": "A",
            "name": "Fun with Food Audits",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104262:C": {
            "contestId": 104262,
            "index": "C",
            "name": "Calibration Complications",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104261:C": {
            "contestId": 104261,
            "index": "C",
            "name": "Calibration Complications",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104261:B": {
            "contestId": 104261,
            "index": "B",
            "name": "Pluto Discovery!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104261:A": {
            "contestId": 104261,
            "index": "A",
            "name": "Planetary Status",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1144:B": {
            "contestId": 1144,
            "index": "B",
            "name": "Parity Alternated Deletions",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1144:A": {
            "contestId": 1144,
            "index": "A",
            "name": "Diverse Strings",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "104246:G": {
            "contestId": 104246,
            "index": "G",
            "name": "Grid Walk",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104246:F": {
            "contestId": 104246,
            "index": "F",
            "name": "Find Rewards from RAPL",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104246:H": {
            "contestId": 104246,
            "index": "H",
            "name": "How Far have You been?",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104246:C": {
            "contestId": 104246,
            "index": "C",
            "name": "Cave & Tommy",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104246:D": {
            "contestId": 104246,
            "index": "D",
            "name": "Distribute the Pizza",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104246:A": {
            "contestId": 104246,
            "index": "A",
            "name": "AI vs Programmers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1589:B": {
            "contestId": 1589,
            "index": "B",
            "name": "Coloring Rectangles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "1589:C": {
            "contestId": 1589,
            "index": "C",
            "name": "Two Arrays",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1452:C": {
            "contestId": 1452,
            "index": "C",
            "name": "Two Brackets",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1452:A": {
            "contestId": 1452,
            "index": "A",
            "name": "Robot Program",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1776:L": {
            "contestId": 1776,
            "index": "L",
            "name": "Controllers",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1776:F": {
            "contestId": 1776,
            "index": "F",
            "name": "Train Splitting",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        "637:B": {
            "contestId": 637,
            "index": "B",
            "name": "Chat Order",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "*special",
                "binary search",
                "constructive algorithms",
                "data structures",
                "sortings"
            ]
        },
        "1278:A": {
            "contestId": 1278,
            "index": "A",
            "name": "Shuffle Hashing",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1397:B": {
            "contestId": 1397,
            "index": "B",
            "name": "Power Sequence",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "math",
                "number theory",
                "sortings"
            ]
        },
        "1659:C": {
            "contestId": 1659,
            "index": "C",
            "name": "Line Empire",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1515:D": {
            "contestId": 1515,
            "index": "D",
            "name": "Phoenix and Socks",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "1552:B": {
            "contestId": 1552,
            "index": "B",
            "name": "Running for Gold",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "combinatorics",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        "1630:A": {
            "contestId": 1630,
            "index": "A",
            "name": "And Matching",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "1621:B": {
            "contestId": 1621,
            "index": "B",
            "name": "Integers Shop",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1673:C": {
            "contestId": 1673,
            "index": "C",
            "name": "Palindrome Basis",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "math",
                "number theory"
            ]
        },
        "1419:D2": {
            "contestId": 1419,
            "index": "D2",
            "name": "Sage's Birthday (hard version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "1462:E1": {
            "contestId": 1462,
            "index": "E1",
            "name": "Close Tuples (easy version)",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "combinatorics",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1487:D": {
            "contestId": 1487,
            "index": "D",
            "name": "Pythagorean Triples",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1492:C": {
            "contestId": 1492,
            "index": "C",
            "name": "Maximum width",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "1272:D": {
            "contestId": 1272,
            "index": "D",
            "name": "Remove One Element",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "1234:C": {
            "contestId": 1234,
            "index": "C",
            "name": "Pipes",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "1389:C": {
            "contestId": 1389,
            "index": "C",
            "name": "Good String",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "1490:F": {
            "contestId": 1490,
            "index": "F",
            "name": "Equalize the Array",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1304:C": {
            "contestId": 1304,
            "index": "C",
            "name": "Air Conditioner",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "dp",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        "1418:C": {
            "contestId": 1418,
            "index": "C",
            "name": "Mortal Kombat Tower",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dp",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "1547:E": {
            "contestId": 1547,
            "index": "E",
            "name": "Air Conditioners",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "shortest paths",
                "sortings",
                "two pointers"
            ]
        },
        "1276:A": {
            "contestId": 1276,
            "index": "A",
            "name": "As Simple as One and Two",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1215:B": {
            "contestId": 1215,
            "index": "B",
            "name": "The Number of Products",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "combinatorics",
                "dp",
                "implementation"
            ]
        },
        "1461:B": {
            "contestId": 1461,
            "index": "B",
            "name": "Find the Spruce",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        "1195:B": {
            "contestId": 1195,
            "index": "B",
            "name": "Sport Mafia",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "binary search",
                "brute force",
                "math"
            ]
        },
        "1667:A": {
            "contestId": 1667,
            "index": "A",
            "name": "Make it Increasing",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1217:A": {
            "contestId": 1217,
            "index": "A",
            "name": "Creating a Character",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1498:B": {
            "contestId": 1498,
            "index": "B",
            "name": "Box Fitting",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "bitmasks",
                "data structures",
                "greedy"
            ]
        },
        "1641:A": {
            "contestId": 1641,
            "index": "A",
            "name": "Great Sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "174:A": {
            "contestId": 174,
            "index": "A",
            "name": "Problem About Equation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "104:A": {
            "contestId": 104,
            "index": "A",
            "name": "Blackjack",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "177:A2": {
            "contestId": 177,
            "index": "A2",
            "name": "Good Matrix Elements",
            "type": "PROGRAMMING",
            "points": 70,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "181:A": {
            "contestId": 181,
            "index": "A",
            "name": "Series of Crimes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "geometry",
                "implementation"
            ]
        },
        "177:A1": {
            "contestId": 177,
            "index": "A1",
            "name": "Good Matrix Elements",
            "type": "PROGRAMMING",
            "points": 30,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1398:B": {
            "contestId": 1398,
            "index": "B",
            "name": "Substring Removal Game",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "games",
                "greedy",
                "sortings"
            ]
        },
        "1425:A": {
            "contestId": 1425,
            "index": "A",
            "name": "Arena of Greed",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "games",
                "greedy"
            ]
        },
        "1251:B": {
            "contestId": 1251,
            "index": "B",
            "name": "Binary Palindromes",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1392:C": {
            "contestId": 1392,
            "index": "C",
            "name": "Omkar and Waterslide",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1143:B": {
            "contestId": 1143,
            "index": "B",
            "name": "Nirvana",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "103688:I": {
            "contestId": 103688,
            "index": "I",
            "name": "Equal Sum Arrays",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101147:D": {
            "contestId": 101147,
            "index": "D",
            "name": "Popcorn",
            "type": "PROGRAMMING",
            "tags": []
        },
        "602:B": {
            "contestId": 602,
            "index": "B",
            "name": "Approximating a Constant Range",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        "101915:K": {
            "contestId": 101915,
            "index": "K",
            "name": "Poor Ramzi",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101915:D": {
            "contestId": 101915,
            "index": "D",
            "name": "Largest Group",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101915:A": {
            "contestId": 101915,
            "index": "A",
            "name": "Printing Books",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101915:H": {
            "contestId": 101915,
            "index": "H",
            "name": "Buying Products",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101915:F": {
            "contestId": 101915,
            "index": "F",
            "name": "A Missing Problem in TCPC2017",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101915:C": {
            "contestId": 101915,
            "index": "C",
            "name": "Shahhoud Training Hussain",
            "type": "PROGRAMMING",
            "tags": []
        },
        "369:A": {
            "contestId": 369,
            "index": "A",
            "name": "Valera and Plates",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "104069:H": {
            "contestId": 104069,
            "index": "H",
            "name": "Harada Football Clube",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104069:F": {
            "contestId": 104069,
            "index": "F",
            "name": "Food Queue",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104069:E": {
            "contestId": 104069,
            "index": "E",
            "name": "El Classificador",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104069:G": {
            "contestId": 104069,
            "index": "G",
            "name": "Grand Meeting",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104069:D": {
            "contestId": 104069,
            "index": "D",
            "name": "Diary of Hapiness",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104069:I": {
            "contestId": 104069,
            "index": "I",
            "name": "Irritating Carlinhos",
            "type": "PROGRAMMING",
            "tags": []
        },
        "778:A": {
            "contestId": 778,
            "index": "A",
            "name": "String Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy",
                "strings"
            ]
        },
        "754:B": {
            "contestId": 754,
            "index": "B",
            "name": "Ilya and tic-tac-toe game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "102881:N": {
            "contestId": 102881,
            "index": "N",
            "name": "Baby !Ehab",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1045:I": {
            "contestId": 1045,
            "index": "I",
            "name": "Palindrome Pairs",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "hashing",
                "strings"
            ]
        },
        "733:A": {
            "contestId": 733,
            "index": "A",
            "name": "Grasshopper And the String",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "465:A": {
            "contestId": 465,
            "index": "A",
            "name": "inc ARG",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "45:A": {
            "contestId": 45,
            "index": "A",
            "name": "Codecraft III",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "519:A": {
            "contestId": 519,
            "index": "A",
            "name": "A and B and Chess",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "670:D2": {
            "contestId": 670,
            "index": "D2",
            "name": "Magic Powder - 2",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "binary search",
                "implementation"
            ]
        },
        "670:D1": {
            "contestId": 670,
            "index": "D1",
            "name": "Magic Powder - 1",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "binary search",
                "brute force",
                "implementation"
            ]
        },
        "998:B": {
            "contestId": 998,
            "index": "B",
            "name": "Cutting",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1384:A": {
            "contestId": 1384,
            "index": "A",
            "name": "Common Prefixes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "101147:H": {
            "contestId": 101147,
            "index": "H",
            "name": "Commandos",
            "type": "PROGRAMMING",
            "tags": []
        },
        "30:A": {
            "contestId": 30,
            "index": "A",
            "name": "Accounting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "101810:C": {
            "contestId": 101810,
            "index": "C",
            "name": "Flip the Bits",
            "type": "PROGRAMMING",
            "tags": []
        },
        "743:A": {
            "contestId": 743,
            "index": "A",
            "name": "Vladik and flights",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "877:A": {
            "contestId": 877,
            "index": "A",
            "name": "Alex and broken contest",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "461:A": {
            "contestId": 461,
            "index": "A",
            "name": "Appleman and Toastman",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "755:B": {
            "contestId": 755,
            "index": "B",
            "name": "PolandBall and Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "binary search",
                "data structures",
                "games",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        "1119:A": {
            "contestId": 1119,
            "index": "A",
            "name": "Ilya and a Colorful Walk",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "842:A": {
            "contestId": 842,
            "index": "A",
            "name": "Kirill And The Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "two pointers"
            ]
        },
        "1121:A": {
            "contestId": 1121,
            "index": "A",
            "name": "Technogoblet of Fire",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "792:A": {
            "contestId": 792,
            "index": "A",
            "name": "New Bus Route",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "1105:A": {
            "contestId": 1105,
            "index": "A",
            "name": "Salem and Sticks ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "712:B": {
            "contestId": 712,
            "index": "B",
            "name": "Memory and Trident",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "285:A": {
            "contestId": 285,
            "index": "A",
            "name": "Slightly Decreasing Permutations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "534:A": {
            "contestId": 534,
            "index": "A",
            "name": "Exam",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "471:A": {
            "contestId": 471,
            "index": "A",
            "name": "MUH and Sticks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "245:B": {
            "contestId": 245,
            "index": "B",
            "name": "Internet Address",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "101257:D": {
            "contestId": 101257,
            "index": "D",
            "name": "!Hasan",
            "type": "PROGRAMMING",
            "tags": []
        },
        "845:A": {
            "contestId": 845,
            "index": "A",
            "name": "Chess Tourney",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "630:J": {
            "contestId": 630,
            "index": "J",
            "name": "Divisibility",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1461:D": {
            "contestId": 1461,
            "index": "D",
            "name": "Divide and Summarize",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "divide and conquer",
                "implementation",
                "sortings"
            ]
        },
        "109:A": {
            "contestId": 109,
            "index": "A",
            "name": "Lucky Sum of Digits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "989:A": {
            "contestId": 989,
            "index": "A",
            "name": "A Blend of Springtime",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "745:A": {
            "contestId": 745,
            "index": "A",
            "name": "Hongcow Learns the Cyclic Shift",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "955:A": {
            "contestId": 955,
            "index": "A",
            "name": "Feed the cat",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "975:A": {
            "contestId": 975,
            "index": "A",
            "name": "Aramic script",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1073:A": {
            "contestId": 1073,
            "index": "A",
            "name": "Diverse Substring",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "251:A": {
            "contestId": 251,
            "index": "A",
            "name": "Points on Line",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "binary search",
                "combinatorics",
                "two pointers"
            ]
        },
        "103937:C": {
            "contestId": 103937,
            "index": "C",
            "name": "Robot Inspection",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103937:A": {
            "contestId": 103937,
            "index": "A",
            "name": "Jeopardy!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1743:D": {
            "contestId": 1743,
            "index": "D",
            "name": "Problem with Random Tests",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "probabilities"
            ]
        },
        "100003:C": {
            "contestId": 100003,
            "index": "C",
            "name": "Почти беспрефиксные коды",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100003:A": {
            "contestId": 100003,
            "index": "A",
            "name": "Место у прохода, пожалуйста",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100003:E": {
            "contestId": 100003,
            "index": "E",
            "name": "Драгоценные камни",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1316:A": {
            "contestId": 1316,
            "index": "A",
            "name": "Grade Allocation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "954:B": {
            "contestId": 954,
            "index": "B",
            "name": "String Typing",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1511:D": {
            "contestId": 1511,
            "index": "D",
            "name": "Min Cost String",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "strings"
            ]
        },
        "102892:3": {
            "contestId": 102892,
            "index": "3",
            "name": "Infectious Letters",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1629:B": {
            "contestId": 1629,
            "index": "B",
            "name": "GCD Arrays",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 800,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "782:A": {
            "contestId": 782,
            "index": "A",
            "name": "Andryusha and Socks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1737:C": {
            "contestId": 1737,
            "index": "C",
            "name": "Ela and Crickets",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "games",
                "implementation",
                "math"
            ]
        },
        "1725:G": {
            "contestId": 1725,
            "index": "G",
            "name": "Garage",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "geometry",
                "math"
            ]
        },
        "1601:A": {
            "contestId": 1601,
            "index": "A",
            "name": "Array Elimination",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1415:A": {
            "contestId": 1415,
            "index": "A",
            "name": "Prison Break",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1765:K": {
            "contestId": 1765,
            "index": "K",
            "name": "Torus Path",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "630:B": {
            "contestId": 630,
            "index": "B",
            "name": "Moore's Law",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "math"
            ]
        },
        "1453:B": {
            "contestId": 1453,
            "index": "B",
            "name": "Suffix Operations",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1513:B": {
            "contestId": 1513,
            "index": "B",
            "name": "AND Sequences",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "bitmasks",
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        "1573:B": {
            "contestId": 1573,
            "index": "B",
            "name": "Swaps",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1315:C": {
            "contestId": 1315,
            "index": "C",
            "name": "Restoring Permutation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "1585:C": {
            "contestId": 1585,
            "index": "C",
            "name": "Minimize Distance",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "1534:C": {
            "contestId": 1534,
            "index": "C",
            "name": "Little Alawn's Puzzle",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "dp",
                "dsu",
                "graphs",
                "math"
            ]
        },
        "1326:C": {
            "contestId": 1326,
            "index": "C",
            "name": "Permutation Partitions",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "greedy",
                "math"
            ]
        },
        "1606:C": {
            "contestId": 1606,
            "index": "C",
            "name": "Banknotes",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "number theory"
            ]
        },
        "1351:C": {
            "contestId": 1351,
            "index": "C",
            "name": "Skier",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1279:C": {
            "contestId": 1279,
            "index": "C",
            "name": "Stack of Presents",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1266:C": {
            "contestId": 1266,
            "index": "C",
            "name": "Diverse Matrix",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1263:C": {
            "contestId": 1263,
            "index": "C",
            "name": "Everyone is a Winner!",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "binary search",
                "math",
                "meet-in-the-middle",
                "number theory"
            ]
        },
        "1256:B": {
            "contestId": 1256,
            "index": "B",
            "name": "Minimize the Permutation",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy"
            ]
        },
        "1271:C": {
            "contestId": 1271,
            "index": "C",
            "name": "Shawarma Tent",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "brute force",
                "geometry",
                "greedy",
                "implementation"
            ]
        },
        "1220:C": {
            "contestId": 1220,
            "index": "C",
            "name": "Substring Game in the Lesson",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "games",
                "greedy",
                "strings"
            ]
        },
        "1323:B": {
            "contestId": 1323,
            "index": "B",
            "name": "Count Subrectangles",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "greedy",
                "implementation"
            ]
        },
        "1301:B": {
            "contestId": 1301,
            "index": "B",
            "name": "Motarack's Birthday",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "greedy",
                "ternary search"
            ]
        },
        "1278:B": {
            "contestId": 1278,
            "index": "B",
            "name": "A and B",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1368:B": {
            "contestId": 1368,
            "index": "B",
            "name": "Codeforces Subsequences",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "strings"
            ]
        },
        "1379:B": {
            "contestId": 1379,
            "index": "B",
            "name": "Dubious Cyrpto",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1486:B": {
            "contestId": 1486,
            "index": "B",
            "name": "Eastern Exhibition",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "geometry",
                "shortest paths",
                "sortings"
            ]
        },
        "1316:B": {
            "contestId": 1316,
            "index": "B",
            "name": "String Modification",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "1263:B": {
            "contestId": 1263,
            "index": "B",
            "name": "PIN Codes",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1253:B": {
            "contestId": 1253,
            "index": "B",
            "name": "Silly Mistake",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1408:B": {
            "contestId": 1408,
            "index": "B",
            "name": "Arrays Sum",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1753:B": {
            "contestId": 1753,
            "index": "B",
            "name": "Factorial Divisibility",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "103828:J": {
            "contestId": 103828,
            "index": "J",
            "name": "Even Adjacent Product",
            "type": "PROGRAMMING",
            "tags": []
        },
        "347:A": {
            "contestId": 347,
            "index": "A",
            "name": "Difference Row",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        "undefined:460": {
            "problemsetName": "acmsguru",
            "index": "460",
            "name": "Plural Form of Nouns",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1214:B": {
            "contestId": 1214,
            "index": "B",
            "name": "Badges",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "257:B": {
            "contestId": 257,
            "index": "B",
            "name": "Playing Cubes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "games",
                "greedy",
                "implementation"
            ]
        },
        "682:B": {
            "contestId": 682,
            "index": "B",
            "name": "Alyona and Mex",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "sortings"
            ]
        },
        "518:B": {
            "contestId": 518,
            "index": "B",
            "name": "Tanya and Postcard",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "958:C1": {
            "contestId": 958,
            "index": "C1",
            "name": "Encryption (easy)",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force"
            ]
        },
        "614:A": {
            "contestId": 614,
            "index": "A",
            "name": "Link/Cut Tree",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "262:B": {
            "contestId": 262,
            "index": "B",
            "name": "Roma and Changing Signs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "583:B": {
            "contestId": 583,
            "index": "B",
            "name": "Robot's Task",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "765:B": {
            "contestId": 765,
            "index": "B",
            "name": "Code obfuscation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1263:D": {
            "contestId": 1263,
            "index": "D",
            "name": "Secret Passwords",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "100093:D": {
            "contestId": 100093,
            "index": "D",
            "name": "D",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100093:B": {
            "contestId": 100093,
            "index": "B",
            "name": "B",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100093:C": {
            "contestId": 100093,
            "index": "C",
            "name": "C",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100249:B": {
            "contestId": 100249,
            "index": "B",
            "name": "Запрос изменения на отрезке",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100249:A": {
            "contestId": 100249,
            "index": "A",
            "name": "Сумма на отрезке",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103785:C": {
            "contestId": 103785,
            "index": "C",
            "name": "Dualites in Pain - The Beginning",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103785:B": {
            "contestId": 103785,
            "index": "B",
            "name": "Poku's Vacation",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103785:A": {
            "contestId": 103785,
            "index": "A",
            "name": "BCD",
            "type": "PROGRAMMING",
            "tags": []
        },
        "774:C": {
            "contestId": 774,
            "index": "C",
            "name": "Maximum Number",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "*special",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "102961:F": {
            "contestId": 102961,
            "index": "F",
            "name": "Movie Festival",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1288:C": {
            "contestId": 1288,
            "index": "C",
            "name": "Two Arrays",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        "102961:D": {
            "contestId": 102961,
            "index": "D",
            "name": "Concert Tickets",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102961:E": {
            "contestId": 102961,
            "index": "E",
            "name": "Restaurant Customers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102961:C": {
            "contestId": 102961,
            "index": "C",
            "name": "Ferris Wheel",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102961:B": {
            "contestId": 102961,
            "index": "B",
            "name": "Apartments",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102961:A": {
            "contestId": 102961,
            "index": "A",
            "name": "Distinct Numbers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1271:A": {
            "contestId": 1271,
            "index": "A",
            "name": "Suits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "757:B": {
            "contestId": 757,
            "index": "B",
            "name": "Bash's Big Day",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1415:B": {
            "contestId": 1415,
            "index": "B",
            "name": "Repainting Street",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1100,
            "tags": [
                "brute force",
                "brute force",
                "greedy"
            ]
        },
        "1547:C": {
            "contestId": 1547,
            "index": "C",
            "name": "Pair Programming",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        "1407:A": {
            "contestId": 1407,
            "index": "A",
            "name": "Ahahahahahahahaha",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "841:B": {
            "contestId": 841,
            "index": "B",
            "name": "Godsend",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "games",
                "math"
            ]
        },
        "1413:B": {
            "contestId": 1413,
            "index": "B",
            "name": "A New Technique",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "842:B": {
            "contestId": 842,
            "index": "B",
            "name": "Gleb And Pizza",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "geometry"
            ]
        },
        "1042:A": {
            "contestId": 1042,
            "index": "A",
            "name": "Benches",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "binary search",
                "implementation"
            ]
        },
        "505:A": {
            "contestId": 505,
            "index": "A",
            "name": "Mr. Kitayuta's Gift",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1144:D": {
            "contestId": 1144,
            "index": "D",
            "name": "Equalize Them All",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1141:D": {
            "contestId": 1141,
            "index": "D",
            "name": "Colored Boots",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1042:D": {
            "contestId": 1042,
            "index": "D",
            "name": "Petya and Array",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "divide and conquer",
                "two pointers"
            ]
        },
        "1118:B": {
            "contestId": 1118,
            "index": "B",
            "name": "Tanya and Candies",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1133:B": {
            "contestId": 1133,
            "index": "B",
            "name": "Preparation for International Women's Day",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1102:B": {
            "contestId": 1102,
            "index": "B",
            "name": "Array K-Coloring",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1029:B": {
            "contestId": 1029,
            "index": "B",
            "name": "Creating the Contest",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1066:B": {
            "contestId": 1066,
            "index": "B",
            "name": "Heaters",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        "102035:D": {
            "contestId": 102035,
            "index": "D",
            "name": "Coach Ayoub",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1203:A": {
            "contestId": 1203,
            "index": "A",
            "name": "Circle of Students",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1066:A": {
            "contestId": 1066,
            "index": "A",
            "name": "Vova and Train",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1629:C": {
            "contestId": 1629,
            "index": "C",
            "name": "Meximum Array",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math",
                "two pointers"
            ]
        },
        "1355:E": {
            "contestId": 1355,
            "index": "E",
            "name": "Restorer Distance",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings",
                "ternary search"
            ]
        },
        "439:D": {
            "contestId": 439,
            "index": "D",
            "name": "Devu and his Brother",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "binary search",
                "sortings",
                "ternary search",
                "two pointers"
            ]
        },
        "1631:C": {
            "contestId": 1631,
            "index": "C",
            "name": "And Matching",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "1632:C": {
            "contestId": 1632,
            "index": "C",
            "name": "Strange Test",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "dp",
                "math"
            ]
        },
        "1649:C": {
            "contestId": 1649,
            "index": "C",
            "name": "Weird Sum",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "brute force",
                "implementation",
                "math",
                "matrices"
            ]
        },
        "1754:C2": {
            "contestId": 1754,
            "index": "C2",
            "name": "Make Nonzero Sum (hard version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1778:C": {
            "contestId": 1778,
            "index": "C",
            "name": "Flexible String",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "brute force",
                "strings"
            ]
        },
        "1790:F": {
            "contestId": 1790,
            "index": "F",
            "name": "Timofey and Black-White Tree",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "dfs and similar",
                "divide and conquer",
                "graphs",
                "greedy",
                "math",
                "shortest paths",
                "trees"
            ]
        },
        "982:B": {
            "contestId": 982,
            "index": "B",
            "name": "Bus of Characters",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "875:A": {
            "contestId": 875,
            "index": "A",
            "name": "Classroom Watch",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1140:D": {
            "contestId": 1140,
            "index": "D",
            "name": "Minimum Triangulation",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1591:C": {
            "contestId": 1591,
            "index": "C",
            "name": "Minimize Distance",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1559:D1": {
            "contestId": 1559,
            "index": "D1",
            "name": "Mocha and Diana (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        "525:B": {
            "contestId": 525,
            "index": "B",
            "name": "Pasha and String",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "strings"
            ]
        },
        "1583:B": {
            "contestId": 1583,
            "index": "B",
            "name": "Omkar and Heavenly Tree",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        "567:B": {
            "contestId": 567,
            "index": "B",
            "name": "Berland National Library",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "545:C": {
            "contestId": 545,
            "index": "C",
            "name": "Woodcutters",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1500,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1426:D": {
            "contestId": 1426,
            "index": "D",
            "name": "Non-zero Segments",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "102644:C": {
            "contestId": 102644,
            "index": "C",
            "name": "Fibonacci",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1536:B": {
            "contestId": 1536,
            "index": "B",
            "name": "Prinzessin der Verurteilung",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "strings"
            ]
        },
        "1581:B": {
            "contestId": 1581,
            "index": "B",
            "name": "Diameter of Graph",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "math"
            ]
        },
        "1575:A": {
            "contestId": 1575,
            "index": "A",
            "name": "Another Sorting Problem",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "data structures",
                "sortings",
                "strings"
            ]
        },
        "1805:D": {
            "contestId": 1805,
            "index": "D",
            "name": "A Wide, Wide Graph",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        "1214:A": {
            "contestId": 1214,
            "index": "A",
            "name": "Optimal Currency Exchange",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1023:A": {
            "contestId": 1023,
            "index": "A",
            "name": "Single Wildcard Pattern Matching",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "957:A": {
            "contestId": 957,
            "index": "A",
            "name": "Tritonic Iridescence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "754:A": {
            "contestId": 754,
            "index": "A",
            "name": "Lesha and array splitting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "787:A": {
            "contestId": 787,
            "index": "A",
            "name": "The Monster",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1068:A": {
            "contestId": 1068,
            "index": "A",
            "name": "Birthday",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "math"
            ]
        },
        "834:A": {
            "contestId": 834,
            "index": "A",
            "name": "The Useless Toy",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "876:A": {
            "contestId": 876,
            "index": "A",
            "name": "Trip For Meal",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1100:A": {
            "contestId": 1100,
            "index": "A",
            "name": "Roman and Browser",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "892:A": {
            "contestId": 892,
            "index": "A",
            "name": "Greed",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1075:A": {
            "contestId": 1075,
            "index": "A",
            "name": "The King's Race",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "765:A": {
            "contestId": 765,
            "index": "A",
            "name": "Neverending competitions",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1209:A": {
            "contestId": 1209,
            "index": "A",
            "name": "Paint the Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "851:A": {
            "contestId": 851,
            "index": "A",
            "name": "Arpa and a research in Mexican wave",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1038:A": {
            "contestId": 1038,
            "index": "A",
            "name": "Equality",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1189:A": {
            "contestId": 1189,
            "index": "A",
            "name": "Keanu Reeves",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "strings"
            ]
        },
        "1269:A": {
            "contestId": 1269,
            "index": "A",
            "name": "Equation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1028:A": {
            "contestId": 1028,
            "index": "A",
            "name": "Find Square",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1243:A": {
            "contestId": 1243,
            "index": "A",
            "name": "Maximum Square",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1088:A": {
            "contestId": 1088,
            "index": "A",
            "name": "Ehab and another construction problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        "984:A": {
            "contestId": 984,
            "index": "A",
            "name": "Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "sortings"
            ]
        },
        "994:A": {
            "contestId": 994,
            "index": "A",
            "name": "Fingerprints",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1244:A": {
            "contestId": 1244,
            "index": "A",
            "name": "Pens and Pencils",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "144:B": {
            "contestId": 144,
            "index": "B",
            "name": "Meeting",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "892:B": {
            "contestId": 892,
            "index": "B",
            "name": "Wrath",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "102951:A": {
            "contestId": 102951,
            "index": "A",
            "name": "Maximum Distance",
            "type": "PROGRAMMING",
            "tags": []
        },
        "743:B": {
            "contestId": 743,
            "index": "B",
            "name": "Chloe and the sequence ",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "implementation"
            ]
        },
        "987:B": {
            "contestId": 987,
            "index": "B",
            "name": "High School: Become Human",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "975:B": {
            "contestId": 975,
            "index": "B",
            "name": "Mancala",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1011:B": {
            "contestId": 1011,
            "index": "B",
            "name": "Planning The Expedition",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "binary search",
                "brute force",
                "implementation"
            ]
        },
        "758:B": {
            "contestId": 758,
            "index": "B",
            "name": "Blown Garland",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "number theory"
            ]
        },
        "934:B": {
            "contestId": 934,
            "index": "B",
            "name": "A Prosperous Lot",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1153:B": {
            "contestId": 1153,
            "index": "B",
            "name": "Serval and Toy Bricks",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "822:B": {
            "contestId": 822,
            "index": "B",
            "name": "Crossword solving",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "779:B": {
            "contestId": 779,
            "index": "B",
            "name": "Weird Rounding",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "984:B": {
            "contestId": 984,
            "index": "B",
            "name": "Minesweeper",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "834:B": {
            "contestId": 834,
            "index": "B",
            "name": "The Festive Evening",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "94:A": {
            "contestId": 94,
            "index": "A",
            "name": "Restoring Password",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "841:A": {
            "contestId": 841,
            "index": "A",
            "name": "Generous Kefa",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1076:B": {
            "contestId": 1076,
            "index": "B",
            "name": "Divisor Subtraction",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        "992:A": {
            "contestId": 992,
            "index": "A",
            "name": "Nastya and an Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "621:B": {
            "contestId": 621,
            "index": "B",
            "name": "Wet Shark and Bishops",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "implementation"
            ]
        },
        "134:A": {
            "contestId": 134,
            "index": "A",
            "name": "Average Numbers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "3:C": {
            "contestId": 3,
            "index": "C",
            "name": "Tic-tac-toe",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "games",
                "implementation"
            ]
        },
        "747:A": {
            "contestId": 747,
            "index": "A",
            "name": "Display Size",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "681:A": {
            "contestId": 681,
            "index": "A",
            "name": "A Good Contest",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1148:A": {
            "contestId": 1148,
            "index": "A",
            "name": "Another One Bites The Dust",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1281:A": {
            "contestId": 1281,
            "index": "A",
            "name": "Suffix Three",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1323:A": {
            "contestId": 1323,
            "index": "A",
            "name": "Even Subset Sum Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1207:A": {
            "contestId": 1207,
            "index": "A",
            "name": "There Are Two Types Of Burgers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1093:A": {
            "contestId": 1093,
            "index": "A",
            "name": "Dice Rolling",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "964:A": {
            "contestId": 964,
            "index": "A",
            "name": "Splits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "873:A": {
            "contestId": 873,
            "index": "A",
            "name": "Chores",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1499:A": {
            "contestId": 1499,
            "index": "A",
            "name": "Domino on Windowsill",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        "1197:A": {
            "contestId": 1197,
            "index": "A",
            "name": "DIY Wooden Ladder",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "977:E": {
            "contestId": 977,
            "index": "E",
            "name": "Cyclic Components",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1774:H": {
            "contestId": 1774,
            "index": "H",
            "name": "Maximum Permutation",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1207:B": {
            "contestId": 1207,
            "index": "B",
            "name": "Square Filling",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "1191:B": {
            "contestId": 1191,
            "index": "B",
            "name": "Tokitsukaze and Mahjong",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1117:A": {
            "contestId": 1117,
            "index": "A",
            "name": "Best Subsegment",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1105:B": {
            "contestId": 1105,
            "index": "B",
            "name": "Zuhair and Strings",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1099:B": {
            "contestId": 1099,
            "index": "B",
            "name": "Squares and Segments",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        "1366:C": {
            "contestId": 1366,
            "index": "C",
            "name": "Palindromic Paths",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1332:C": {
            "contestId": 1332,
            "index": "C",
            "name": "K-Complete Word",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1313:C1": {
            "contestId": 1313,
            "index": "C1",
            "name": "Skyscrapers (easy version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy"
            ]
        },
        "1307:C": {
            "contestId": 1307,
            "index": "C",
            "name": "Cow and Message",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "math",
                "strings"
            ]
        },
        "1296:D": {
            "contestId": 1296,
            "index": "D",
            "name": "Fight with Monsters",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1296:C": {
            "contestId": 1296,
            "index": "C",
            "name": "Yet Another Walking Robot",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1269:B": {
            "contestId": 1269,
            "index": "B",
            "name": "Modulo Equality",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "sortings"
            ]
        },
        "1264:A": {
            "contestId": 1264,
            "index": "A",
            "name": "Beautiful Regional Contest",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1256:D": {
            "contestId": 1256,
            "index": "D",
            "name": "Binary String Minimizing",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        "1242:A": {
            "contestId": 1242,
            "index": "A",
            "name": "Tile Painting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1236:B": {
            "contestId": 1236,
            "index": "B",
            "name": "Alice and the List of Presents",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1473:C": {
            "contestId": 1473,
            "index": "C",
            "name": "No More Inversions",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1461:C": {
            "contestId": 1461,
            "index": "C",
            "name": "Random Events",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        "1427:B": {
            "contestId": 1427,
            "index": "B",
            "name": "Chess Cheater",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1586:B": {
            "contestId": 1586,
            "index": "B",
            "name": "Omkar and Heavenly Tree",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "trees"
            ]
        },
        "1586:A": {
            "contestId": 1586,
            "index": "A",
            "name": "Windblume Ode",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1421:C": {
            "contestId": 1421,
            "index": "C",
            "name": "Palindromifier",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "1725:H": {
            "contestId": 1725,
            "index": "H",
            "name": "Hot Black Hot White",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1180:B": {
            "contestId": 1180,
            "index": "B",
            "name": "Nick and Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1346:B": {
            "contestId": 1346,
            "index": "B",
            "name": "Boot Camp",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "greedy"
            ]
        },
        "1183:D": {
            "contestId": 1183,
            "index": "D",
            "name": "Candy Box (easy version)",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1282:B1": {
            "contestId": 1282,
            "index": "B1",
            "name": "K for the Price of One (Easy Version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1662:H": {
            "contestId": 1662,
            "index": "H",
            "name": "Boundary",
            "type": "PROGRAMMING",
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1662:M": {
            "contestId": 1662,
            "index": "M",
            "name": "Bottle Arrangements",
            "type": "PROGRAMMING",
            "tags": [
                "constructive algorithms"
            ]
        },
        "1662:A": {
            "contestId": 1662,
            "index": "A",
            "name": "Organizing SWERC",
            "type": "PROGRAMMING",
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "102878:A": {
            "contestId": 102878,
            "index": "A",
            "name": "IQ difference",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1228:B": {
            "contestId": 1228,
            "index": "B",
            "name": "Filling the Grid",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1711:C": {
            "contestId": 1711,
            "index": "C",
            "name": "Color the Picture",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1322:A": {
            "contestId": 1322,
            "index": "A",
            "name": "Unusual Competitions",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "greedy"
            ]
        },
        "103785:F": {
            "contestId": 103785,
            "index": "F",
            "name": "No Internet IPC!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103785:D": {
            "contestId": 103785,
            "index": "D",
            "name": "Elder Ning",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1238:B": {
            "contestId": 1238,
            "index": "B",
            "name": "Kill `Em All",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1225:B2": {
            "contestId": 1225,
            "index": "B2",
            "name": "TV Subscriptions (Hard Version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "implementation",
                "two pointers"
            ]
        },
        "1216:D": {
            "contestId": 1216,
            "index": "D",
            "name": "Swords",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "math"
            ]
        },
        "1194:C": {
            "contestId": 1194,
            "index": "C",
            "name": "From S To T",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1194:B": {
            "contestId": 1194,
            "index": "B",
            "name": "Yet Another Crosses Problem",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1759:F": {
            "contestId": 1759,
            "index": "F",
            "name": "All Possible Digits",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1768:D": {
            "contestId": 1768,
            "index": "D",
            "name": "Lucky Permutation",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        "1283:E": {
            "contestId": 1283,
            "index": "E",
            "name": "New Year Parties",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1437:C": {
            "contestId": 1437,
            "index": "C",
            "name": "Chef Monocarp",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "flows",
                "graph matchings",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1398:D": {
            "contestId": 1398,
            "index": "D",
            "name": "Colored Rectangles",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1381:B": {
            "contestId": 1381,
            "index": "B",
            "name": "Unmerge",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "dp"
            ]
        },
        "1283:D": {
            "contestId": 1283,
            "index": "D",
            "name": "Christmas Trees",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "1692:H": {
            "contestId": 1692,
            "index": "H",
            "name": "Gambling",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1672:D": {
            "contestId": 1672,
            "index": "D",
            "name": "Cyclic Rotation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        "1681:D": {
            "contestId": 1681,
            "index": "D",
            "name": "Required Length",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "hashing",
                "shortest paths"
            ]
        },
        "1183:C": {
            "contestId": 1183,
            "index": "C",
            "name": "Computer Game",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1688:C": {
            "contestId": 1688,
            "index": "C",
            "name": "Manipulating History",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1690:F": {
            "contestId": 1690,
            "index": "F",
            "name": "Shifting String",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "graphs",
                "math",
                "number theory",
                "strings"
            ]
        },
        "1343:D": {
            "contestId": 1343,
            "index": "D",
            "name": "Constant Palindrome Sum",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        "1693:B": {
            "contestId": 1693,
            "index": "B",
            "name": "Fake Plastic Trees",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "1260:C": {
            "contestId": 1260,
            "index": "C",
            "name": "Infinite Fence",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1253:D": {
            "contestId": 1253,
            "index": "D",
            "name": "Harmonious Graph",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        "1706:D1": {
            "contestId": 1706,
            "index": "D1",
            "name": "Chopping Carrots (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        "1169:C": {
            "contestId": 1169,
            "index": "C",
            "name": "Increasing by Modulo",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "978:F": {
            "contestId": 978,
            "index": "F",
            "name": "Mentors",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        "1037:D": {
            "contestId": 1037,
            "index": "D",
            "name": "Valid BFS?",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        "1714:G": {
            "contestId": 1714,
            "index": "G",
            "name": "Path Prefixes",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        "1324:E": {
            "contestId": 1324,
            "index": "E",
            "name": "Sleeping Schedule",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "1554:B": {
            "contestId": 1554,
            "index": "B",
            "name": "Cobb",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1760:G": {
            "contestId": 1760,
            "index": "G",
            "name": "SlavicG's Favorite Problem",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "bitmasks",
                "dfs and similar",
                "graphs"
            ]
        },
        "1491:C": {
            "contestId": 1491,
            "index": "C",
            "name": "Pekora and Trampoline",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1368:D": {
            "contestId": 1368,
            "index": "D",
            "name": "AND, OR and square sum",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "greedy",
                "math"
            ]
        },
        "1336:B": {
            "contestId": 1336,
            "index": "B",
            "name": "Xenia and Colorful Gems",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1528:B": {
            "contestId": 1528,
            "index": "B",
            "name": "Kavi on Pairing Duty",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1165:E": {
            "contestId": 1165,
            "index": "E",
            "name": "Two Arrays and Sum of Functions",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1610:C": {
            "contestId": 1610,
            "index": "C",
            "name": "Keshi Is Throwing a Party",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "1165:D": {
            "contestId": 1165,
            "index": "D",
            "name": "Almost All Divisors",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1455:D": {
            "contestId": 1455,
            "index": "D",
            "name": "Sequence and Swaps",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1389:B": {
            "contestId": 1389,
            "index": "B",
            "name": "Array Walk",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1349:A": {
            "contestId": 1349,
            "index": "A",
            "name": "Orac and LCM",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "data structures",
                "math",
                "number theory"
            ]
        },
        "1303:C": {
            "contestId": 1303,
            "index": "C",
            "name": "Perfect Keyboard",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "greedy",
                "implementation"
            ]
        },
        "1665:C": {
            "contestId": 1665,
            "index": "C",
            "name": "Tree Infection",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        "1680:C": {
            "contestId": 1680,
            "index": "C",
            "name": "Binary String",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy",
                "strings",
                "two pointers"
            ]
        },
        "1688:D": {
            "contestId": 1688,
            "index": "D",
            "name": "The Enchanted Forest",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1689:C": {
            "contestId": 1689,
            "index": "C",
            "name": "Infected Tree",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "1703:G": {
            "contestId": 1703,
            "index": "G",
            "name": "Good Key, Bad Key",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1741:E": {
            "contestId": 1741,
            "index": "E",
            "name": "Sending a Sequence Over the Network",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dp"
            ]
        },
        "1336:A": {
            "contestId": 1336,
            "index": "A",
            "name": "Linova and Kingdom",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        "1326:D1": {
            "contestId": 1326,
            "index": "D1",
            "name": "Prefix-Suffix Palindrome (Easy version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        "1326:D2": {
            "contestId": 1326,
            "index": "D2",
            "name": "Prefix-Suffix Palindrome (Hard version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "binary search",
                "greedy",
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        "1338:A": {
            "contestId": 1338,
            "index": "A",
            "name": "Powered Addition",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "1710:A": {
            "contestId": 1710,
            "index": "A",
            "name": "Color the Picture",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1742:F": {
            "contestId": 1742,
            "index": "F",
            "name": "Smaller",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1753:A2": {
            "contestId": 1753,
            "index": "A2",
            "name": "Make Nonzero Sum (hard version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "1372:C": {
            "contestId": 1372,
            "index": "C",
            "name": "Omkar and Baseball",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "181:B": {
            "contestId": 181,
            "index": "B",
            "name": "Number of Triplets",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "brute force"
            ]
        },
        "1284:B": {
            "contestId": 1284,
            "index": "B",
            "name": "New Year and Ascent Sequence",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "dp",
                "implementation",
                "sortings"
            ]
        },
        "1100:B": {
            "contestId": 1100,
            "index": "B",
            "name": "Build a Contest",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1607:D": {
            "contestId": 1607,
            "index": "D",
            "name": "Blue-Red Permutation",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1428:B": {
            "contestId": 1428,
            "index": "B",
            "name": "Belted Rooms",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "graphs",
                "implementation"
            ]
        },
        "1245:B": {
            "contestId": 1245,
            "index": "B",
            "name": "Restricted RPS",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        "1110:B": {
            "contestId": 1110,
            "index": "B",
            "name": "Tape",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1675:E": {
            "contestId": 1675,
            "index": "E",
            "name": "Replace With the Previous, Minimize",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dsu",
                "greedy",
                "strings"
            ]
        },
        "1187:A": {
            "contestId": 1187,
            "index": "A",
            "name": "Stickers and Toys",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "math"
            ]
        },
        "1556:B": {
            "contestId": 1556,
            "index": "B",
            "name": "Take Your Places!",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1603:A": {
            "contestId": 1603,
            "index": "A",
            "name": "Di-visible Confusion",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1424:G": {
            "contestId": 1424,
            "index": "G",
            "name": "Years",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        "1422:B": {
            "contestId": 1422,
            "index": "B",
            "name": "Nice Matrix",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "6:C": {
            "contestId": 6,
            "index": "C",
            "name": "Alice, Bob and Chocolate",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "two pointers"
            ]
        },
        "803:B": {
            "contestId": 803,
            "index": "B",
            "name": "Distances to Zero",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        "482:A": {
            "contestId": 482,
            "index": "A",
            "name": "Diverse Permutation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1150:C": {
            "contestId": 1150,
            "index": "C",
            "name": "Prefix Sum Primes",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "137:B": {
            "contestId": 137,
            "index": "B",
            "name": "Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "greedy"
            ]
        },
        "651:B": {
            "contestId": 651,
            "index": "B",
            "name": "Beautiful Paintings",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1140:B": {
            "contestId": 1140,
            "index": "B",
            "name": "Good String",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "708:A": {
            "contestId": 708,
            "index": "A",
            "name": "Letters Cyclic Shift",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "625:B": {
            "contestId": 625,
            "index": "B",
            "name": "War of the Corporations",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1155:B": {
            "contestId": 1155,
            "index": "B",
            "name": "Game with Telephone Numbers",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "games",
                "greedy",
                "implementation"
            ]
        },
        "1257:C": {
            "contestId": 1257,
            "index": "C",
            "name": "Dominated Subarray",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "sortings",
                "strings",
                "two pointers"
            ]
        },
        "1033:A": {
            "contestId": 1033,
            "index": "A",
            "name": "King Escape",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "372:A": {
            "contestId": 372,
            "index": "A",
            "name": "Counting Kangaroos is Fun",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "522:B": {
            "contestId": 522,
            "index": "B",
            "name": "Photo to Remember",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "*special",
                "data structures",
                "dp",
                "implementation"
            ]
        },
        "1772:E": {
            "contestId": 1772,
            "index": "E",
            "name": "Permutation Game",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "games"
            ]
        },
        "1795:D": {
            "contestId": 1795,
            "index": "D",
            "name": "Triangle Coloring",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "496:A": {
            "contestId": 496,
            "index": "A",
            "name": "Minimum Difficulty",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "103920:A": {
            "contestId": 103920,
            "index": "A",
            "name": "Truck Driver",
            "type": "PROGRAMMING",
            "tags": []
        },
        "318:B": {
            "contestId": 318,
            "index": "B",
            "name": "Strings of Power",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        "1043:A": {
            "contestId": 1043,
            "index": "A",
            "name": "Elections",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1057:A": {
            "contestId": 1057,
            "index": "A",
            "name": "Bmail Computer Network",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "*special",
                "dfs and similar",
                "trees"
            ]
        },
        "1437:D": {
            "contestId": 1437,
            "index": "D",
            "name": "Minimal Height Tree",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths",
                "trees"
            ]
        },
        "1101:B": {
            "contestId": 1101,
            "index": "B",
            "name": "Accordion",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "104008:A": {
            "contestId": 104008,
            "index": "A",
            "name": "Lily",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1707:F": {
            "contestId": 1707,
            "index": "F",
            "name": "Bugaboo",
            "type": "PROGRAMMING",
            "points": 3250,
            "rating": 3500,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "number theory"
            ]
        },
        "1712:F": {
            "contestId": 1712,
            "index": "F",
            "name": "Triameter",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3200,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        "1713:E": {
            "contestId": 1713,
            "index": "E",
            "name": "Cross Swapping",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "2-sat",
                "data structures",
                "dsu",
                "greedy",
                "matrices"
            ]
        },
        "1704:E": {
            "contestId": 1704,
            "index": "E",
            "name": "Count Seconds",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "graphs",
                "implementation",
                "math"
            ]
        },
        "1705:D": {
            "contestId": 1705,
            "index": "D",
            "name": "Mark and Lightbulbs",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1800,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1696:E": {
            "contestId": 1696,
            "index": "E",
            "name": "Placing Jinas",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1447:D": {
            "contestId": 1447,
            "index": "D",
            "name": "Catching Cheaters",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "strings"
            ]
        },
        "1296:F": {
            "contestId": 1296,
            "index": "F",
            "name": "Berland Beauty",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        "1702:G2": {
            "contestId": 1702,
            "index": "G2",
            "name": "Passable Paths (hard version)",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        "1510:K": {
            "contestId": 1510,
            "index": "K",
            "name": "King's Task",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "graphs",
                "implementation"
            ]
        },
        "1706:D2": {
            "contestId": 1706,
            "index": "D2",
            "name": "Chopping Carrots (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy",
                "math",
                "number theory",
                "two pointers"
            ]
        },
        "1704:G": {
            "contestId": 1704,
            "index": "G",
            "name": "Mio and Lucky Array",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "fft",
                "math",
                "strings"
            ]
        },
        "1586:I": {
            "contestId": 1586,
            "index": "I",
            "name": "Omkar and Mosaic",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        "1737:G": {
            "contestId": 1737,
            "index": "G",
            "name": "Ela Takes Dancing Class",
            "type": "PROGRAMMING",
            "points": 3750,
            "rating": 3500,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        "1685:D2": {
            "contestId": 1685,
            "index": "D2",
            "name": "Permutation Weight (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1779:H": {
            "contestId": 1779,
            "index": "H",
            "name": "Olympic Team Building",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "brute force",
                "meet-in-the-middle"
            ]
        },
        "1628:F": {
            "contestId": 1628,
            "index": "F",
            "name": "Spaceship Crisis Management",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 3500,
            "tags": [
                "binary search",
                "data structures",
                "geometry",
                "sortings"
            ]
        },
        "1394:E": {
            "contestId": 1394,
            "index": "E",
            "name": "Boboniu and Banknote Collection",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3500,
            "tags": [
                "strings"
            ]
        },
        "1609:H": {
            "contestId": 1609,
            "index": "H",
            "name": "Pushing Robots",
            "type": "PROGRAMMING",
            "points": 3750,
            "rating": 3500,
            "tags": []
        },
        "1718:E": {
            "contestId": 1718,
            "index": "E",
            "name": "Impressionism",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation",
                "math"
            ]
        },
        "1055:G": {
            "contestId": 1055,
            "index": "G",
            "name": "Jellyfish Nightmare",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": []
        },
        "1770:H": {
            "contestId": 1770,
            "index": "H",
            "name": "Koxia, Mahiru and Winter Festival",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1470:F": {
            "contestId": 1470,
            "index": "F",
            "name": "Strange Covering",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3500,
            "tags": [
                "divide and conquer"
            ]
        },
        "863:A": {
            "contestId": 863,
            "index": "A",
            "name": "Quasi-palindrome",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1726:H": {
            "contestId": 1726,
            "index": "H",
            "name": "Mainak and the Bleeding Polygon",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3500,
            "tags": [
                "binary search",
                "geometry",
                "implementation",
                "math"
            ]
        },
        "1696:H": {
            "contestId": 1696,
            "index": "H",
            "name": "Maximum Product?",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "brute force",
                "combinatorics",
                "dp",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "235:A": {
            "contestId": 235,
            "index": "A",
            "name": "LCM Challenge",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "number theory"
            ]
        },
        "1761:G": {
            "contestId": 1761,
            "index": "G",
            "name": "Centroid Guess",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3500,
            "tags": [
                "interactive",
                "probabilities",
                "trees"
            ]
        },
        "799:F": {
            "contestId": 799,
            "index": "F",
            "name": "Beautiful fountains rows",
            "type": "PROGRAMMING",
            "points": 3250,
            "rating": 3500,
            "tags": [
                "data structures"
            ]
        },
        "1637:H": {
            "contestId": 1637,
            "index": "H",
            "name": "Minimize Inversions Number",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "data structures",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1110:H": {
            "contestId": 1110,
            "index": "H",
            "name": "Modest Substrings",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "dp",
                "strings"
            ]
        },
        "1687:E": {
            "contestId": 1687,
            "index": "E",
            "name": "Become Big For Me",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 3500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1147:F": {
            "contestId": 1147,
            "index": "F",
            "name": "Zigzag Game",
            "type": "PROGRAMMING",
            "points": 3250,
            "rating": 3500,
            "tags": [
                "games",
                "interactive"
            ]
        },
        "1588:F": {
            "contestId": 1588,
            "index": "F",
            "name": "Jumping Through the Array",
            "type": "PROGRAMMING",
            "points": 3750,
            "rating": 3500,
            "tags": [
                "binary search",
                "data structures",
                "graphs",
                "two pointers"
            ]
        },
        "1608:G": {
            "contestId": 1608,
            "index": "G",
            "name": "Alphabetic Tree",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3500,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "hashing",
                "string suffix structures",
                "strings",
                "trees"
            ]
        },
        "1523:H": {
            "contestId": 1523,
            "index": "H",
            "name": "Hopping Around the Array ",
            "type": "PROGRAMMING",
            "points": 3250,
            "rating": 3500,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "1305:H": {
            "contestId": 1305,
            "index": "H",
            "name": "Kuroni the Private Tutor",
            "type": "PROGRAMMING",
            "points": 4000,
            "rating": 3500,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "1190:F": {
            "contestId": 1190,
            "index": "F",
            "name": "Tokitsukaze and Powers",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 3400,
            "tags": [
                "number theory",
                "probabilities"
            ]
        },
        "1536:A": {
            "contestId": 1536,
            "index": "A",
            "name": "Omkar and Bad Story",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        "1753:E": {
            "contestId": 1753,
            "index": "E",
            "name": "N Machines",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 3300,
            "tags": [
                "binary search",
                "brute force",
                "greedy"
            ]
        },
        "1783:D": {
            "contestId": 1783,
            "index": "D",
            "name": "Different Arrays",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        "1574:C": {
            "contestId": 1574,
            "index": "C",
            "name": "Slay the Dragon",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "binary search",
                "greedy",
                "sortings",
                "ternary search"
            ]
        },
        "1754:D": {
            "contestId": 1754,
            "index": "D",
            "name": "Factorial Divisibility",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "math"
            ]
        },
        "1749:D": {
            "contestId": 1749,
            "index": "D",
            "name": "Counting Arrays",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        "100985:L": {
            "contestId": 100985,
            "index": "L",
            "name": "MaratonIME goes karting",
            "type": "PROGRAMMING",
            "tags": []
        },
        "659:E": {
            "contestId": 659,
            "index": "E",
            "name": "New Reform",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        "103:B": {
            "contestId": 103,
            "index": "B",
            "name": "Cthulhu",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "825:C": {
            "contestId": 825,
            "index": "C",
            "name": "Multi-judge Solving",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "946:C": {
            "contestId": 946,
            "index": "C",
            "name": "String Transformation",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "915:B": {
            "contestId": 915,
            "index": "B",
            "name": "Browser",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "915:A": {
            "contestId": 915,
            "index": "A",
            "name": "Garden",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1823:D": {
            "contestId": 1823,
            "index": "D",
            "name": "Unique Palindromes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "math",
                "strings"
            ]
        },
        "903:B": {
            "contestId": 903,
            "index": "B",
            "name": "The Modcrab",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "893:A": {
            "contestId": 893,
            "index": "A",
            "name": "Chess For Three",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "888:C": {
            "contestId": 888,
            "index": "C",
            "name": "K-Dominant Character",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "implementation",
                "two pointers"
            ]
        },
        "102569:F": {
            "contestId": 102569,
            "index": "F",
            "name": "Moving Target",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102569:E": {
            "contestId": 102569,
            "index": "E",
            "name": "Fluctuations of Mana",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102569:M": {
            "contestId": 102569,
            "index": "M",
            "name": "Notifications",
            "type": "PROGRAMMING",
            "tags": []
        },
        "911:A": {
            "contestId": 911,
            "index": "A",
            "name": "Nearest Minimums",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "1656:I": {
            "contestId": 1656,
            "index": "I",
            "name": "Neighbour Ordering",
            "type": "PROGRAMMING",
            "points": 4500,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        "1635:F": {
            "contestId": 1635,
            "index": "F",
            "name": "Closest Pair ",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2800,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "1635:E": {
            "contestId": 1635,
            "index": "E",
            "name": "Cars ",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "2-sat",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        "1635:D": {
            "contestId": 1635,
            "index": "D",
            "name": "Infinite Set",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "dp",
                "math",
                "matrices",
                "number theory",
                "strings"
            ]
        },
        "620:A": {
            "contestId": 620,
            "index": "A",
            "name": "Professor GukiZ's Robot",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "102697:035": {
            "contestId": 102697,
            "index": "035",
            "name": "Distinct Numbers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "729:A": {
            "contestId": 729,
            "index": "A",
            "name": "Interview with Oleg",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1056:A": {
            "contestId": 1056,
            "index": "A",
            "name": "Determine Line",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "135:A": {
            "contestId": 135,
            "index": "A",
            "name": "Replacement",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "412:A": {
            "contestId": 412,
            "index": "A",
            "name": "Poster",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "169:A": {
            "contestId": 169,
            "index": "A",
            "name": "Chores",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "sortings"
            ]
        },
        "90:B": {
            "contestId": 90,
            "index": "B",
            "name": "African Crossword",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "99:B": {
            "contestId": 99,
            "index": "B",
            "name": "Help Chef Gerasim",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "48:A": {
            "contestId": 48,
            "index": "A",
            "name": "Rock-paper-scissors",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation",
                "schedules"
            ]
        },
        "55:A": {
            "contestId": 55,
            "index": "A",
            "name": "Flea travel",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "101:A": {
            "contestId": 101,
            "index": "A",
            "name": "Homework",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "102:A": {
            "contestId": 102,
            "index": "A",
            "name": "Clothes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force"
            ]
        },
        "813:C": {
            "contestId": 813,
            "index": "C",
            "name": "The Tag Game",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        "638:B": {
            "contestId": 638,
            "index": "B",
            "name": "Making Genome in Berland",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "*special",
                "dfs and similar",
                "strings"
            ]
        },
        "633:B": {
            "contestId": 633,
            "index": "B",
            "name": "A Trivial Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1458:A": {
            "contestId": 1458,
            "index": "A",
            "name": "Row GCD",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "610:B": {
            "contestId": 610,
            "index": "B",
            "name": "Vika and Squares",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1471:C": {
            "contestId": 1471,
            "index": "C",
            "name": "Strange Birthday Party",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "1619:D": {
            "contestId": 1619,
            "index": "D",
            "name": "New Year's Problem",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "greedy",
                "sortings"
            ]
        },
        "154:B": {
            "contestId": 154,
            "index": "B",
            "name": "Colliders",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "847:B": {
            "contestId": 847,
            "index": "B",
            "name": "Preparing for Merge Sort",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        "782:B": {
            "contestId": 782,
            "index": "B",
            "name": "The Meeting Place Cannot Be Changed",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "binary search",
                "ternary search"
            ]
        },
        "723:C": {
            "contestId": 723,
            "index": "C",
            "name": "Polycarp at the Radio",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "greedy"
            ]
        },
        "587:A": {
            "contestId": 587,
            "index": "A",
            "name": "Duff and Weight Lifting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        "620:C": {
            "contestId": 620,
            "index": "C",
            "name": "Pearls in a Row",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        "91:A": {
            "contestId": 91,
            "index": "A",
            "name": "Newspaper Headline",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1765:N": {
            "contestId": 1765,
            "index": "N",
            "name": "Number Reduction",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        "797:C": {
            "contestId": 797,
            "index": "C",
            "name": "Minimal string",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "greedy",
                "strings"
            ]
        },
        "271:D": {
            "contestId": 271,
            "index": "D",
            "name": "Good Substrings",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "strings"
            ]
        },
        "126:B": {
            "contestId": 126,
            "index": "B",
            "name": "Password",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "binary search",
                "dp",
                "hashing",
                "string suffix structures",
                "strings"
            ]
        },
        "1729:E": {
            "contestId": 1729,
            "index": "E",
            "name": "Guess the Cycle Size",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "interactive",
                "probabilities"
            ]
        },
        "1792:D": {
            "contestId": 1792,
            "index": "D",
            "name": "Fixed Prefix Permutations",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "bitmasks",
                "data structures",
                "hashing",
                "math",
                "sortings"
            ]
        },
        "879:A": {
            "contestId": 879,
            "index": "A",
            "name": "Borya's Diagnosis",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "624:A": {
            "contestId": 624,
            "index": "A",
            "name": "Save Luke",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "884:A": {
            "contestId": 884,
            "index": "A",
            "name": "Book Reading",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1417:A": {
            "contestId": 1417,
            "index": "A",
            "name": "Copy-paste",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "302:A": {
            "contestId": 302,
            "index": "A",
            "name": "Eugeny and Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "755:C": {
            "contestId": 755,
            "index": "C",
            "name": "PolandBall and Forest",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "interactive",
                "trees"
            ]
        },
        "347:B": {
            "contestId": 347,
            "index": "B",
            "name": "Fixed Points",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "437:C": {
            "contestId": 437,
            "index": "C",
            "name": "The Child and Toy",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        "1305:A": {
            "contestId": 1305,
            "index": "A",
            "name": "Kuroni and the Gifts",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1106:A": {
            "contestId": 1106,
            "index": "A",
            "name": "Lunar New Year and Cross Counting",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1315:A": {
            "contestId": 1315,
            "index": "A",
            "name": "Dead Pixel",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "914:D": {
            "contestId": 914,
            "index": "D",
            "name": "Bash and a Tough Math Puzzle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "data structures",
                "number theory"
            ]
        },
        "1189:C": {
            "contestId": 1189,
            "index": "C",
            "name": "Candies!",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "math"
            ]
        },
        "1678:B2": {
            "contestId": 1678,
            "index": "B2",
            "name": "Tokitsukaze and Good 01-String (hard version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1678:C": {
            "contestId": 1678,
            "index": "C",
            "name": "Tokitsukaze and Strange Inequality",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "brute force",
                "data structures"
            ]
        },
        "1244:B": {
            "contestId": 1244,
            "index": "B",
            "name": "Rooms and Staircases",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1197:B": {
            "contestId": 1197,
            "index": "B",
            "name": "Pillars",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "103486:M": {
            "contestId": 103486,
            "index": "M",
            "name": "Sequence",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103486:A": {
            "contestId": 103486,
            "index": "A",
            "name": "Random Number Checker",
            "type": "PROGRAMMING",
            "tags": []
        },
        "602:A": {
            "contestId": 602,
            "index": "A",
            "name": "Two Bases",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "101059:B": {
            "contestId": 101059,
            "index": "B",
            "name": "Shift and Push",
            "type": "PROGRAMMING",
            "tags": []
        },
        "218:C": {
            "contestId": 218,
            "index": "C",
            "name": "Ice Skating",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "779:D": {
            "contestId": 779,
            "index": "D",
            "name": "String Game",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "strings"
            ]
        },
        "121:A": {
            "contestId": 121,
            "index": "A",
            "name": "Lucky Sum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "628:C": {
            "contestId": 628,
            "index": "C",
            "name": "Bear and String Distance",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "572:B": {
            "contestId": 572,
            "index": "B",
            "name": "Order Book",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1468:C": {
            "contestId": 1468,
            "index": "C",
            "name": "Berpizza",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "615:A": {
            "contestId": 615,
            "index": "A",
            "name": "Bulbs",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "476:D": {
            "contestId": 476,
            "index": "D",
            "name": "Dreamoon and Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "742:B": {
            "contestId": 742,
            "index": "B",
            "name": "Arpa’s obvious problem and Mehrdad’s terrible solution",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "630:K": {
            "contestId": 630,
            "index": "K",
            "name": "Indivisibility",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "102767:E": {
            "contestId": 102767,
            "index": "E",
            "name": "Singhal and Numbers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102767:D": {
            "contestId": 102767,
            "index": "D",
            "name": "Singhal and Permutations",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102767:C": {
            "contestId": 102767,
            "index": "C",
            "name": "Singhal and GCD",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102767:B": {
            "contestId": 102767,
            "index": "B",
            "name": "2024",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:159": {
            "contestId": 102697,
            "index": "159",
            "name": "Maximum Value in Pascal's Triangle",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102680:D": {
            "contestId": 102680,
            "index": "D",
            "name": "One",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102767:A": {
            "contestId": 102767,
            "index": "A",
            "name": "Favourite Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102397:J": {
            "contestId": 102397,
            "index": "J",
            "name": "AbuTahun and Flash Memories",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103029:A": {
            "contestId": 103029,
            "index": "A",
            "name": "John and nuts",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103029:B": {
            "contestId": 103029,
            "index": "B",
            "name": "John, Katya",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1152:C": {
            "contestId": 1152,
            "index": "C",
            "name": "Neko does Maths",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "803:C": {
            "contestId": 803,
            "index": "C",
            "name": "Maximal GCD",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1034:A": {
            "contestId": 1034,
            "index": "A",
            "name": "Enlarge GCD",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1800,
            "tags": [
                "number theory"
            ]
        },
        "1348:C": {
            "contestId": 1348,
            "index": "C",
            "name": "Phoenix and Distribution",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        "1689:E": {
            "contestId": 1689,
            "index": "E",
            "name": "ANDfinity",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1689:D": {
            "contestId": 1689,
            "index": "D",
            "name": "Lena and Matrix",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "data structures",
                "dp",
                "geometry",
                "shortest paths"
            ]
        },
        "1581:A": {
            "contestId": 1581,
            "index": "A",
            "name": "CQXYM Count Permutations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        "1594:E1": {
            "contestId": 1594,
            "index": "E1",
            "name": "Rubik's Cube Coloring (easy version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "27:B": {
            "contestId": 27,
            "index": "B",
            "name": "Tournament",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar",
                "greedy"
            ]
        },
        "760:B": {
            "contestId": 760,
            "index": "B",
            "name": "Frodo and pillows",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "1228:A": {
            "contestId": 1228,
            "index": "A",
            "name": "Distinct Digits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1063:A": {
            "contestId": 1063,
            "index": "A",
            "name": "Oh Those Palindromes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "1027:A": {
            "contestId": 1027,
            "index": "A",
            "name": "Palindromic Twist",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "169:B": {
            "contestId": 169,
            "index": "B",
            "name": "Replacing Digits",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy"
            ]
        },
        "981:A": {
            "contestId": 981,
            "index": "A",
            "name": "Antipalindrome",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "1405:A": {
            "contestId": 1405,
            "index": "A",
            "name": "Permutation Forgery",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "932:A": {
            "contestId": 932,
            "index": "A",
            "name": "Palindromic Supersequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1609:C": {
            "contestId": 1609,
            "index": "C",
            "name": "Complex Market Analysis",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "binary search",
                "dp",
                "implementation",
                "number theory",
                "schedules",
                "two pointers"
            ]
        },
        "1284:C": {
            "contestId": 1284,
            "index": "C",
            "name": "New Year and Permutation",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1253:C": {
            "contestId": 1253,
            "index": "C",
            "name": "Sweets Eating",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "dp",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "35:C": {
            "contestId": 35,
            "index": "C",
            "name": "Fire Again",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "brute force",
                "dfs and similar",
                "shortest paths"
            ]
        },
        "858:D": {
            "contestId": 858,
            "index": "D",
            "name": "Polycarp's phone book",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        "1188:A1": {
            "contestId": 1188,
            "index": "A1",
            "name": "Add on a Tree",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 1600,
            "tags": [
                "trees"
            ]
        },
        "814:C": {
            "contestId": 814,
            "index": "C",
            "name": "An impassioned circulation of affection",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "brute force",
                "dp",
                "strings",
                "two pointers"
            ]
        },
        "1151:D": {
            "contestId": 1151,
            "index": "D",
            "name": "Stas and the Queue at the Buffet",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "748:B": {
            "contestId": 748,
            "index": "B",
            "name": "Santa Claus and Keyboard Check",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1475:E": {
            "contestId": 1475,
            "index": "E",
            "name": "Advertising Agency",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "combinatorics",
                "math",
                "sortings"
            ]
        },
        "1084:C": {
            "contestId": 1084,
            "index": "C",
            "name": "The Fair Nut and String",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "combinatorics",
                "dp",
                "implementation"
            ]
        },
        "1702:F": {
            "contestId": 1702,
            "index": "F",
            "name": "Equate Multisets",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1225:D": {
            "contestId": 1225,
            "index": "D",
            "name": "Power Products",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "hashing",
                "math",
                "number theory"
            ]
        },
        "817:B": {
            "contestId": 817,
            "index": "B",
            "name": "Makes And The Product",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "combinatorics",
                "implementation",
                "math",
                "sortings"
            ]
        },
        "1495:A": {
            "contestId": 1495,
            "index": "A",
            "name": "Diamond Miner",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "geometry",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1255:C": {
            "contestId": 1255,
            "index": "C",
            "name": "League of Leesins",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "500:B": {
            "contestId": 500,
            "index": "B",
            "name": "New Year Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1824:A": {
            "contestId": 1824,
            "index": "A",
            "name": "LuoTianyi and the Show",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1826:D": {
            "contestId": 1826,
            "index": "D",
            "name": "Running Miles",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "104314:A": {
            "contestId": 104314,
            "index": "A",
            "name": "Natasha and Cats",
            "type": "PROGRAMMING",
            "tags": []
        },
        "152:C": {
            "contestId": 152,
            "index": "C",
            "name": "Pocket Book",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "combinatorics"
            ]
        },
        "56:E": {
            "contestId": 56,
            "index": "E",
            "name": "Domino Principle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "sortings"
            ]
        },
        "987:C": {
            "contestId": 987,
            "index": "C",
            "name": "Three displays",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "brute force",
                "dp",
                "implementation"
            ]
        },
        "1787:C": {
            "contestId": 1787,
            "index": "C",
            "name": "Remove the Bracket",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "1812:C": {
            "contestId": 1812,
            "index": "C",
            "name": "Digits",
            "type": "PROGRAMMING",
            "tags": [
                "*special"
            ]
        },
        "1579:C": {
            "contestId": 1579,
            "index": "C",
            "name": "Ticks",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1419:B": {
            "contestId": 1419,
            "index": "B",
            "name": "Stairs",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "570:B": {
            "contestId": 570,
            "index": "B",
            "name": "Simple Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "games",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1184:B1": {
            "contestId": 1184,
            "index": "B1",
            "name": "The Doctor Meets Vader (Easy)",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "sortings"
            ]
        },
        "1409:D": {
            "contestId": 1409,
            "index": "D",
            "name": "Decrease the Sum of Digits",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "math"
            ]
        },
        "807:C": {
            "contestId": 807,
            "index": "C",
            "name": "Success Rate",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1133:D": {
            "contestId": 1133,
            "index": "D",
            "name": "Zero Quantity Maximization",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "hashing",
                "math",
                "number theory"
            ]
        },
        "785:B": {
            "contestId": 785,
            "index": "B",
            "name": "Anton and Classes",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1400:D": {
            "contestId": 1400,
            "index": "D",
            "name": "Zigzags",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "combinatorics",
                "data structures",
                "math",
                "two pointers"
            ]
        },
        "104077:F": {
            "contestId": 104077,
            "index": "F",
            "name": "Hotel",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104077:J": {
            "contestId": 104077,
            "index": "J",
            "name": "Strange Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104077:C": {
            "contestId": 104077,
            "index": "C",
            "name": "Clone Ranran",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104065:M": {
            "contestId": 104065,
            "index": "M",
            "name": "Rock-Paper-Scissors Pyramid",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104065:C": {
            "contestId": 104065,
            "index": "C",
            "name": "Catch You Catch Me",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104023:A": {
            "contestId": 104023,
            "index": "A",
            "name": "Dunai",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104023:E": {
            "contestId": 104023,
            "index": "E",
            "name": "Python Will be Faster than C++",
            "type": "PROGRAMMING",
            "tags": []
        },
        "44:E": {
            "contestId": 44,
            "index": "E",
            "name": "Anfisa the Monkey",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "dp"
            ]
        },
        "8:A": {
            "contestId": 8,
            "index": "A",
            "name": "Train and Peter",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "strings"
            ]
        },
        "1841:C": {
            "contestId": 1841,
            "index": "C",
            "name": "Ranom Numbers",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "math",
                "strings"
            ]
        },
        "1838:D": {
            "contestId": 1838,
            "index": "D",
            "name": "Bracket Walk",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "data structures",
                "greedy",
                "strings"
            ]
        },
        "104053:H": {
            "contestId": 104053,
            "index": "H",
            "name": "GameX",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104053:E": {
            "contestId": 104053,
            "index": "E",
            "name": "Elevator",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104053:L": {
            "contestId": 104053,
            "index": "L",
            "name": "Station of Fate",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104095:E": {
            "contestId": 104095,
            "index": "E",
            "name": "发通知",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104095:C": {
            "contestId": 104095,
            "index": "C",
            "name": "我得重新集结部队",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104172:L": {
            "contestId": 104172,
            "index": "L",
            "name": "Permutation Compression",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104095:A": {
            "contestId": 104095,
            "index": "A",
            "name": "班委竞选",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104172:A": {
            "contestId": 104172,
            "index": "A",
            "name": "TreeScript",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104090:K": {
            "contestId": 104090,
            "index": "K",
            "name": "Master of Both",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104172:K": {
            "contestId": 104172,
            "index": "K",
            "name": "Maximum GCD",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104172:H": {
            "contestId": 104172,
            "index": "H",
            "name": "Another Goose Goose Duck Problem",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104090:C": {
            "contestId": 104090,
            "index": "C",
            "name": "No Bug No Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104090:A": {
            "contestId": 104090,
            "index": "A",
            "name": "Modulo Ruins the Legend",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104090:F": {
            "contestId": 104090,
            "index": "F",
            "name": "Da Mi Lao Shi Ai Kan De",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104090:D": {
            "contestId": 104090,
            "index": "D",
            "name": "Money Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104076:E": {
            "contestId": 104076,
            "index": "E",
            "name": "Identical Parity",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104076:A": {
            "contestId": 104076,
            "index": "A",
            "name": "Tower",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104076:K": {
            "contestId": 104076,
            "index": "K",
            "name": "Stack Sort",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104076:M": {
            "contestId": 104076,
            "index": "M",
            "name": "Best Carry Player",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1627:D": {
            "contestId": 1627,
            "index": "D",
            "name": "Not Adding",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "brute force",
                "dp",
                "math",
                "number theory"
            ]
        },
        "104059:C": {
            "contestId": 104059,
            "index": "C",
            "name": "Chaotic Construction",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104059:A": {
            "contestId": 104059,
            "index": "A",
            "name": "Alternative Architecture",
            "type": "PROGRAMMING",
            "tags": []
        },
        "344:B": {
            "contestId": 344,
            "index": "B",
            "name": "Simple Molecules",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "brute force",
                "graphs",
                "math"
            ]
        },
        "1540:A": {
            "contestId": 1540,
            "index": "A",
            "name": "Great Graphs",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "shortest paths",
                "sortings"
            ]
        },
        "1446:A": {
            "contestId": 1446,
            "index": "A",
            "name": "Knapsack",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "301:A": {
            "contestId": 301,
            "index": "A",
            "name": "Yaroslav and Sequence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "340:A": {
            "contestId": 340,
            "index": "A",
            "name": "The Wall",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "math"
            ]
        },
        "1499:C": {
            "contestId": 1499,
            "index": "C",
            "name": "Minimum Grid Path",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "math"
            ]
        },
        "41:B": {
            "contestId": 41,
            "index": "B",
            "name": "Martian Dollar",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force"
            ]
        },
        "911:D": {
            "contestId": 911,
            "index": "D",
            "name": "Inversion Counting",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "220:A": {
            "contestId": 220,
            "index": "A",
            "name": "Little Elephant and Problem",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "implementation",
                "sortings"
            ]
        },
        "53:C": {
            "contestId": 53,
            "index": "C",
            "name": "Little Frog",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        "9:B": {
            "contestId": 9,
            "index": "B",
            "name": "Running Student",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "geometry",
                "implementation"
            ]
        },
        "56:B": {
            "contestId": 56,
            "index": "B",
            "name": "Spoilt Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "69:B": {
            "contestId": 69,
            "index": "B",
            "name": "Bets",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "88:A": {
            "contestId": 88,
            "index": "A",
            "name": "Chord",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "61:B": {
            "contestId": 61,
            "index": "B",
            "name": "Hard Work",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "strings"
            ]
        },
        "103:A": {
            "contestId": 103,
            "index": "A",
            "name": "Testing Pants for Sadness",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "437:A": {
            "contestId": 437,
            "index": "A",
            "name": "The Child and Homework",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "242:A": {
            "contestId": 242,
            "index": "A",
            "name": "Heads or Tails",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "584:B": {
            "contestId": 584,
            "index": "B",
            "name": "Kolya and Tanya ",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "combinatorics"
            ]
        },
        "150:B": {
            "contestId": 150,
            "index": "B",
            "name": "Quantity of Strings",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        "102961:G": {
            "contestId": 102961,
            "index": "G",
            "name": "Sum of Two Values",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102152:C": {
            "contestId": 102152,
            "index": "C",
            "name": "Large GCD",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102535:B": {
            "contestId": 102535,
            "index": "B",
            "name": "Working with Locks 2",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102535:A": {
            "contestId": 102535,
            "index": "A",
            "name": "Working With Locks",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1332:A": {
            "contestId": 1332,
            "index": "A",
            "name": "Exercising Walk",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "780:A": {
            "contestId": 780,
            "index": "A",
            "name": "Andryusha and Socks",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1809:D": {
            "contestId": 1809,
            "index": "D",
            "name": "Binary String Sorting",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "104385:A": {
            "contestId": 104385,
            "index": "A",
            "name": "Drill Wood to Make Fire",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104385:L": {
            "contestId": 104385,
            "index": "L",
            "name": "Zhang Fei Threading Needles - Thick with Fine",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104363:F": {
            "contestId": 104363,
            "index": "F",
            "name": "Folder",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104363:A": {
            "contestId": 104363,
            "index": "A",
            "name": "Magic Computer",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103688:A": {
            "contestId": 103688,
            "index": "A",
            "name": "Bookshelf  Filling",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103688:H": {
            "contestId": 103688,
            "index": "H",
            "name": "Kanbun",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103688:F": {
            "contestId": 103688,
            "index": "F",
            "name": "342 and Xiangqi",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104354:A": {
            "contestId": 104354,
            "index": "A",
            "name": "小水獭游河南",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104337:M": {
            "contestId": 104337,
            "index": "M",
            "name": "Different Billing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104337:C": {
            "contestId": 104337,
            "index": "C",
            "name": "Darkness I",
            "type": "PROGRAMMING",
            "tags": []
        },
        "552:B": {
            "contestId": 552,
            "index": "B",
            "name": "Vanya and Books",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1375:B": {
            "contestId": 1375,
            "index": "B",
            "name": "Neighbor Grid",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "784:A": {
            "contestId": 784,
            "index": "A",
            "name": "Numbers Joke",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "*special"
            ]
        },
        "492:C": {
            "contestId": 492,
            "index": "C",
            "name": "Vanya and Exams",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1821:D": {
            "contestId": 1821,
            "index": "D",
            "name": "Black Cells",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "math"
            ]
        },
        "1815:F": {
            "contestId": 1815,
            "index": "F",
            "name": "OH NO1 (-2-3-4)",
            "type": "PROGRAMMING",
            "points": 3500,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math"
            ]
        },
        "350:B": {
            "contestId": 350,
            "index": "B",
            "name": "Resort",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "graphs"
            ]
        },
        "1810:D": {
            "contestId": 1810,
            "index": "D",
            "name": "Climbing the Tree",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "771:A": {
            "contestId": 771,
            "index": "A",
            "name": "Bear and Friendship Condition",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1391:C": {
            "contestId": 1391,
            "index": "C",
            "name": "Cyclic Permutations ",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "combinatorics",
                "dp",
                "graphs",
                "math"
            ]
        },
        "1223:A": {
            "contestId": 1223,
            "index": "A",
            "name": "CME",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1678:D": {
            "contestId": 1678,
            "index": "D",
            "name": "Tokitsukaze and Meeting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "101532:A": {
            "contestId": 101532,
            "index": "A",
            "name": "Subarrays Beauty",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102219:K": {
            "contestId": 102219,
            "index": "K",
            "name": "Help The Support Lady",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102219:J": {
            "contestId": 102219,
            "index": "J",
            "name": "Kitchen Plates",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102219:I": {
            "contestId": 102219,
            "index": "I",
            "name": "To Crash Or Not To Crash",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102219:B": {
            "contestId": 102219,
            "index": "B",
            "name": "SpongeBob SquarePants",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100676:B": {
            "contestId": 100676,
            "index": "B",
            "name": "B. Three Angles",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100676:C": {
            "contestId": 100676,
            "index": "C",
            "name": "C. Memory is Full",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100676:A": {
            "contestId": 100676,
            "index": "A",
            "name": "A. Relational Operator",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101532:B": {
            "contestId": 101532,
            "index": "B",
            "name": "Array Reconstructing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101532:J": {
            "contestId": 101532,
            "index": "J",
            "name": "The Hell Boy",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101532:G": {
            "contestId": 101532,
            "index": "G",
            "name": "Magical Indices",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1260:A": {
            "contestId": 1260,
            "index": "A",
            "name": "Heating",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "math"
            ]
        },
        "1741:G": {
            "contestId": 1741,
            "index": "G",
            "name": "Kirill and Company",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar",
                "dp",
                "flows",
                "graphs",
                "shortest paths"
            ]
        },
        "118:E": {
            "contestId": 118,
            "index": "E",
            "name": "Bertown roads",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        "1421:B": {
            "contestId": 1421,
            "index": "B",
            "name": "Putting Bricks in the Wall",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1176:E": {
            "contestId": 1176,
            "index": "E",
            "name": "Cover it!",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        "803:A": {
            "contestId": 803,
            "index": "A",
            "name": "Maximal Binary Matrix",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms"
            ]
        },
        "221:C": {
            "contestId": 221,
            "index": "C",
            "name": "Little Elephant and Problem",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "sortings"
            ]
        },
        "221:B": {
            "contestId": 221,
            "index": "B",
            "name": "Little Elephant and Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "1487:C": {
            "contestId": 1487,
            "index": "C",
            "name": "Minimum Ties",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "845:B": {
            "contestId": 845,
            "index": "B",
            "name": "Luba And The Ticket",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "813:B": {
            "contestId": 813,
            "index": "B",
            "name": "The Golden Age",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "581:B": {
            "contestId": 581,
            "index": "B",
            "name": "Luxurious Houses",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1295:D": {
            "contestId": 1295,
            "index": "D",
            "name": "Same GCDs",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1717:D": {
            "contestId": 1717,
            "index": "D",
            "name": "Madoka and The Corruption Scheme",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "891:A": {
            "contestId": 891,
            "index": "A",
            "name": "Pride",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1025:B": {
            "contestId": 1025,
            "index": "B",
            "name": "Weakened Common Divisor",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "brute force",
                "greedy",
                "number theory"
            ]
        },
        "305:B": {
            "contestId": 305,
            "index": "B",
            "name": "Continued Fractions",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "632:C": {
            "contestId": 632,
            "index": "C",
            "name": "The Smallest String Concatenation",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "sortings",
                "strings"
            ]
        },
        "1450:C1": {
            "contestId": 1450,
            "index": "C1",
            "name": "Errich-Tac-Toe (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "75:B": {
            "contestId": 75,
            "index": "B",
            "name": "Facetook Priority Wall",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "expression parsing",
                "implementation",
                "strings"
            ]
        },
        "154:A": {
            "contestId": 154,
            "index": "A",
            "name": "Hometask",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "greedy"
            ]
        },
        "962:C": {
            "contestId": 962,
            "index": "C",
            "name": "Make a Square",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1447:A": {
            "contestId": 1447,
            "index": "A",
            "name": "Add Candies",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "246:D": {
            "contestId": 246,
            "index": "D",
            "name": "Colorful Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1600,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs"
            ]
        },
        "292:B": {
            "contestId": 292,
            "index": "B",
            "name": "Network Topology",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "graphs",
                "implementation"
            ]
        },
        "1092:D1": {
            "contestId": 1092,
            "index": "D1",
            "name": "Great Vova Wall (Version 1)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "831:C": {
            "contestId": 831,
            "index": "C",
            "name": "Jury Marks",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        "355:A": {
            "contestId": 355,
            "index": "A",
            "name": "Vasya and Digital Root",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "14:A": {
            "contestId": 14,
            "index": "A",
            "name": "Letter",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "373:A": {
            "contestId": 373,
            "index": "A",
            "name": "Collecting Beats is Fun",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "447:A": {
            "contestId": 447,
            "index": "A",
            "name": "DZY Loves Hash",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "545:A": {
            "contestId": 545,
            "index": "A",
            "name": "Toy Cars",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "699:C": {
            "contestId": 699,
            "index": "C",
            "name": "Vacations",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "672:B": {
            "contestId": 672,
            "index": "B",
            "name": "Different is Good",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        "104283:B": {
            "contestId": 104283,
            "index": "B",
            "name": "Johny English and Group Formation",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1623:C": {
            "contestId": 1623,
            "index": "C",
            "name": "Balanced Stone Heaps",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "101611:A": {
            "contestId": 101611,
            "index": "A",
            "name": "Advertising Strategy",
            "type": "PROGRAMMING",
            "tags": []
        },
        "260:A": {
            "contestId": 260,
            "index": "A",
            "name": "Adding Digits",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "427:B": {
            "contestId": 427,
            "index": "B",
            "name": "Prison Transfer",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1141:C": {
            "contestId": 1141,
            "index": "C",
            "name": "Polycarp Restores Permutation",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "math"
            ]
        },
        "103800:A": {
            "contestId": 103800,
            "index": "A",
            "name": "Ginger's number",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1293:A": {
            "contestId": 1293,
            "index": "A",
            "name": "ConneR and the A.R.C. Markland-N",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "binary search",
                "brute force",
                "implementation"
            ]
        },
        "761:A": {
            "contestId": 761,
            "index": "A",
            "name": "Dasha and Stairs",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "908:A": {
            "contestId": 908,
            "index": "A",
            "name": "New Year and Counting Cards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "743:C": {
            "contestId": 743,
            "index": "C",
            "name": "Vladik and fractions",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1465:B": {
            "contestId": 1465,
            "index": "B",
            "name": "Fair Numbers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "101086:F": {
            "contestId": 101086,
            "index": "F",
            "name": "Hey JUDgE",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101028:I": {
            "contestId": 101028,
            "index": "I",
            "name": "March Rain",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102397:I": {
            "contestId": 102397,
            "index": "I",
            "name": "Dr.Hjjawi and the MCQ",
            "type": "PROGRAMMING",
            "tags": []
        },
        "877:B": {
            "contestId": 877,
            "index": "B",
            "name": "Nikita and string",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "23:A": {
            "contestId": 23,
            "index": "A",
            "name": "You're Given a String...",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "886:B": {
            "contestId": 886,
            "index": "B",
            "name": "Vlad and Cafes",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": []
        },
        "1130:C": {
            "contestId": 1130,
            "index": "C",
            "name": "Connect",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "brute force",
                "dfs and similar",
                "dsu"
            ]
        },
        "103414:A": {
            "contestId": 103414,
            "index": "A",
            "name": "Friendly Rooks",
            "type": "PROGRAMMING",
            "tags": []
        },
        "868:A": {
            "contestId": 868,
            "index": "A",
            "name": "Bark to Unlock",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "103495:A": {
            "contestId": 103495,
            "index": "A",
            "name": "Spring Couplets",
            "type": "PROGRAMMING",
            "tags": []
        },
        "914:B": {
            "contestId": 914,
            "index": "B",
            "name": "Conan and Agasa play a Card Game",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "games",
                "greedy",
                "implementation"
            ]
        },
        "1180:C": {
            "contestId": 1180,
            "index": "C",
            "name": "Valeriy and Deque",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "810:A": {
            "contestId": 810,
            "index": "A",
            "name": "Straight <<A>>",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1156:B": {
            "contestId": 1156,
            "index": "B",
            "name": "Ugly Pairs",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "greedy",
                "implementation",
                "sortings",
                "strings"
            ]
        },
        "1321:B": {
            "contestId": 1321,
            "index": "B",
            "name": "Journey Planning",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "data structures",
                "sortings"
            ]
        },
        "1059:A": {
            "contestId": 1059,
            "index": "A",
            "name": "Cashier",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "1384:C": {
            "contestId": 1384,
            "index": "C",
            "name": "String Transformation 1",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        "940:A": {
            "contestId": 940,
            "index": "A",
            "name": "Points on the line",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "greedy",
                "sortings"
            ]
        },
        "104128:G": {
            "contestId": 104128,
            "index": "G",
            "name": "Inscryption",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104128:I": {
            "contestId": 104128,
            "index": "I",
            "name": "Perfect Palindrome",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1637:D": {
            "contestId": 1637,
            "index": "D",
            "name": "Yet Another Minimization Problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dp",
                "greedy",
                "math"
            ]
        },
        "990:B": {
            "contestId": 990,
            "index": "B",
            "name": "Micro-World",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1631:D": {
            "contestId": 1631,
            "index": "D",
            "name": "Range and Partition",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "two pointers"
            ]
        },
        "1660:D": {
            "contestId": 1660,
            "index": "D",
            "name": "Maximum Product Strikes Back",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "1611:F": {
            "contestId": 1611,
            "index": "F",
            "name": "ATM and Students",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "data structures",
                "two pointers"
            ]
        },
        "808:C": {
            "contestId": 808,
            "index": "C",
            "name": "Tea Party",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        "1616:C": {
            "contestId": 1616,
            "index": "C",
            "name": "Representative Edges",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "brute force",
                "geometry",
                "implementation",
                "math"
            ]
        },
        "576:A": {
            "contestId": 576,
            "index": "A",
            "name": "Vasya and Petya's Game",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "131:C": {
            "contestId": 131,
            "index": "C",
            "name": "The World is a Theatre",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1549:C": {
            "contestId": 1549,
            "index": "C",
            "name": "Web of Lies",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1400,
            "tags": [
                "graphs",
                "greedy"
            ]
        },
        "1100:C": {
            "contestId": 1100,
            "index": "C",
            "name": "NN and the Optical Illusion",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "binary search",
                "geometry",
                "math"
            ]
        },
        "732:C": {
            "contestId": 732,
            "index": "C",
            "name": "Sanatorium",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1023:C": {
            "contestId": 1023,
            "index": "C",
            "name": "Bracket Subsequence",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "greedy"
            ]
        },
        "1656:E": {
            "contestId": 1656,
            "index": "E",
            "name": "Equal Tree Sums",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "math",
                "trees"
            ]
        },
        "1656:D": {
            "contestId": 1656,
            "index": "D",
            "name": "K-good",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1342:C": {
            "contestId": 1342,
            "index": "C",
            "name": "Yet Another Counting Problem",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1396:A": {
            "contestId": 1396,
            "index": "A",
            "name": "Multiples of Length",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        "1423:K": {
            "contestId": 1423,
            "index": "K",
            "name": "Lonely Numbers",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "math",
                "number theory",
                "two pointers"
            ]
        },
        "1305:C": {
            "contestId": 1305,
            "index": "C",
            "name": "Kuroni and Impossible Calculation",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1600,
            "tags": [
                "brute force",
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        "1603:B": {
            "contestId": 1603,
            "index": "B",
            "name": "Moderate Modular Mode",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "102348:L": {
            "contestId": 102348,
            "index": "L",
            "name": "Printer",
            "type": "PROGRAMMING",
            "tags": []
        },
        "166:C": {
            "contestId": 166,
            "index": "C",
            "name": "Median",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1447:C": {
            "contestId": 1447,
            "index": "C",
            "name": "Knapsack",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1538:D": {
            "contestId": 1538,
            "index": "D",
            "name": "Another Problem About Dividing Numbers",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1157:F": {
            "contestId": 1157,
            "index": "F",
            "name": "Maximum Balanced Circle",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "1417:B": {
            "contestId": 1417,
            "index": "B",
            "name": "Two Arrays",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "math",
                "sortings"
            ]
        },
        "1555:B": {
            "contestId": 1555,
            "index": "B",
            "name": "Two Tables",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force"
            ]
        },
        "879:B": {
            "contestId": 879,
            "index": "B",
            "name": "Table Tennis",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "1582:D": {
            "contestId": 1582,
            "index": "D",
            "name": "Vupsen, Pupsen and 0",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1395:B": {
            "contestId": 1395,
            "index": "B",
            "name": "Boboniu Plays Chess",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1070:K": {
            "contestId": 1070,
            "index": "K",
            "name": "Video Posts",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "implementation"
            ]
        },
        "928:A": {
            "contestId": 928,
            "index": "A",
            "name": "Login Verification",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "*special",
                "strings"
            ]
        },
        "50:B": {
            "contestId": 50,
            "index": "B",
            "name": "Choosing Symbol Pairs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "strings"
            ]
        },
        "381:B": {
            "contestId": 381,
            "index": "B",
            "name": "Sereja and Stairs",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "723:B": {
            "contestId": 723,
            "index": "B",
            "name": "Text Document Analysis",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "expression parsing",
                "implementation",
                "strings"
            ]
        },
        "101744:K": {
            "contestId": 101744,
            "index": "K",
            "name": "MaratonIME goes to the karaoke",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101744:I": {
            "contestId": 101744,
            "index": "I",
            "name": "MaratonIME goes to a japanese restaurant",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101744:E": {
            "contestId": 101744,
            "index": "E",
            "name": "MaratonIME rides the university bus",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101744:G": {
            "contestId": 101744,
            "index": "G",
            "name": "MaratonIME goes rowing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101744:L": {
            "contestId": 101744,
            "index": "L",
            "name": "MaratonIME goes karting",
            "type": "PROGRAMMING",
            "tags": []
        },
        "618:B": {
            "contestId": 618,
            "index": "B",
            "name": "Guess the Permutation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms"
            ]
        },
        "102397:E": {
            "contestId": 102397,
            "index": "E",
            "name": "Bashar and the bad land (Hard)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102397:D": {
            "contestId": 102397,
            "index": "D",
            "name": "Bashar and the bad land (Easy)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "39:D": {
            "contestId": 39,
            "index": "D",
            "name": "Cubical Planet",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "math"
            ]
        },
        "1051:A": {
            "contestId": 1051,
            "index": "A",
            "name": "Vasya And Password",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1505:B": {
            "contestId": 1505,
            "index": "B",
            "name": "DMCA",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "*special",
                "implementation",
                "number theory"
            ]
        },
        "976:A": {
            "contestId": 976,
            "index": "A",
            "name": "Minimum Binary Number",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "954:A": {
            "contestId": 954,
            "index": "A",
            "name": "Diagonal Walking",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "1060:B": {
            "contestId": 1060,
            "index": "B",
            "name": "Maximum Sum of Digits",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "greedy"
            ]
        },
        "870:A": {
            "contestId": 870,
            "index": "A",
            "name": "Search for Pretty Integers",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "952:A": {
            "contestId": 952,
            "index": "A",
            "name": "Quirky Quantifiers",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "102942:C": {
            "contestId": 102942,
            "index": "C",
            "name": "Team",
            "type": "PROGRAMMING",
            "tags": []
        },
        "312:A": {
            "contestId": 312,
            "index": "A",
            "name": "Whose sentence is it?",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "102961:X": {
            "contestId": 102961,
            "index": "X",
            "name": "Sum of Three Values",
            "type": "PROGRAMMING",
            "tags": []
        },
        "630:N": {
            "contestId": 630,
            "index": "N",
            "name": "Forecast",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "math"
            ]
        },
        "102892:2": {
            "contestId": 102892,
            "index": "2",
            "name": "Egocentric Subarrays",
            "type": "PROGRAMMING",
            "tags": []
        },
        "45:I": {
            "contestId": 45,
            "index": "I",
            "name": "TCMCF+++",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "greedy"
            ]
        },
        "1245:A": {
            "contestId": 1245,
            "index": "A",
            "name": "Good ol' Numbers Coloring",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1000,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "102152:H": {
            "contestId": 102152,
            "index": "H",
            "name": "The Universal String",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102152:F": {
            "contestId": 102152,
            "index": "F",
            "name": "camelCase;",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102152:G": {
            "contestId": 102152,
            "index": "G",
            "name": "The Special King",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101883:B": {
            "contestId": 101883,
            "index": "B",
            "name": "Racetrack",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101883:A": {
            "contestId": 101883,
            "index": "A",
            "name": "Adding Two Integers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "691:B": {
            "contestId": 691,
            "index": "B",
            "name": "s-palindrome",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1408:A": {
            "contestId": 1408,
            "index": "A",
            "name": "Circle Coloring",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1307:A": {
            "contestId": 1307,
            "index": "A",
            "name": "Cow and Haybales",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "965:A": {
            "contestId": 965,
            "index": "A",
            "name": "Paper Airplanes",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1437:A": {
            "contestId": 1437,
            "index": "A",
            "name": "Marketing Scheme",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1556:A": {
            "contestId": 1556,
            "index": "A",
            "name": "A Variety of Operations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "1200:A": {
            "contestId": 1200,
            "index": "A",
            "name": "Hotelier",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "data structures",
                "implementation"
            ]
        },
        "1783:E": {
            "contestId": 1783,
            "index": "E",
            "name": "Game of the Year",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "brute force",
                "data structures",
                "math",
                "number theory"
            ]
        },
        "1528:C": {
            "contestId": 1528,
            "index": "C",
            "name": "Trees of Tranquillity",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2300,
            "tags": [
                "data structures",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        "1528:A": {
            "contestId": 1528,
            "index": "A",
            "name": "Parsa's Humongous Tree",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "4:D": {
            "contestId": 4,
            "index": "D",
            "name": "Mysterious Present",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        "1:C": {
            "contestId": 1,
            "index": "C",
            "name": "Ancient Berland Circus",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "1:B": {
            "contestId": 1,
            "index": "B",
            "name": "Spreadsheet",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "315:A": {
            "contestId": 315,
            "index": "A",
            "name": "Sereja and Bottles",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "brute force"
            ]
        },
        "104146:A": {
            "contestId": 104146,
            "index": "A",
            "name": "ABCs of Men and Women",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103091:B": {
            "contestId": 103091,
            "index": "B",
            "name": "Dots and Boxes",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103091:C": {
            "contestId": 103091,
            "index": "C",
            "name": "Meta Frequency",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103091:K": {
            "contestId": 103091,
            "index": "K",
            "name": "Marbles",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103091:H": {
            "contestId": 103091,
            "index": "H",
            "name": "War",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103091:N": {
            "contestId": 103091,
            "index": "N",
            "name": "Parity",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103091:J": {
            "contestId": 103091,
            "index": "J",
            "name": "Valid Triangle",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103091:A": {
            "contestId": 103091,
            "index": "A",
            "name": "Happy XOR, Sad XOR",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101020:G": {
            "contestId": 101020,
            "index": "G",
            "name": "Cutie Pie",
            "type": "PROGRAMMING",
            "tags": []
        },
        "426:B": {
            "contestId": 426,
            "index": "B",
            "name": "Sereja and Mirroring",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "101350:C": {
            "contestId": 101350,
            "index": "C",
            "name": "Cheap Kangaroo",
            "type": "PROGRAMMING",
            "tags": []
        },
        "818:A": {
            "contestId": 818,
            "index": "A",
            "name": "Diplomas and Certificates",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "80:B": {
            "contestId": 80,
            "index": "B",
            "name": "Depression",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "997:A": {
            "contestId": 997,
            "index": "A",
            "name": "Convert to Ones",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "brute force",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "612:A": {
            "contestId": 612,
            "index": "A",
            "name": "The Text Splitting",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "implementation",
                "strings"
            ]
        },
        "704:A": {
            "contestId": 704,
            "index": "A",
            "name": "Thor",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "brute force",
                "data structures",
                "implementation"
            ]
        },
        "103920:B": {
            "contestId": 103920,
            "index": "B",
            "name": "Anya's Rocks",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1166:C": {
            "contestId": 1166,
            "index": "C",
            "name": "A Tale of Two Lands",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "binary search",
                "sortings",
                "two pointers"
            ]
        },
        "171:B": {
            "contestId": 171,
            "index": "B",
            "name": "Star",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "*special",
                "combinatorics"
            ]
        },
        "1579:E2": {
            "contestId": 1579,
            "index": "E2",
            "name": "Array Optimization by Deque",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "265:C": {
            "contestId": 265,
            "index": "C",
            "name": "Escape from Stones",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "104426:C": {
            "contestId": 104426,
            "index": "C",
            "name": "SYPUCPC Problemsetting",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104426:N": {
            "contestId": 104426,
            "index": "N",
            "name": "Ichthyophobia",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104415:D": {
            "contestId": 104415,
            "index": "D",
            "name": "Daydreaming Strings",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104412:I": {
            "contestId": 104412,
            "index": "I",
            "name": "Iron Fist Ketil vs King Canute",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104381:F": {
            "contestId": 104381,
            "index": "F",
            "name": "Hello World!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104381:A": {
            "contestId": 104381,
            "index": "A",
            "name": "Battleship",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104339:D": {
            "contestId": 104339,
            "index": "D",
            "name": "base64 encoding",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102501:C": {
            "contestId": 102501,
            "index": "C",
            "name": "Ants",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104375:A": {
            "contestId": 104375,
            "index": "A",
            "name": "Aliases",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104375:B": {
            "contestId": 104375,
            "index": "B",
            "name": "Bucket storing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104199:C": {
            "contestId": 104199,
            "index": "C",
            "name": "Безлюдный отель",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104336:A": {
            "contestId": 104336,
            "index": "A",
            "name": "Number in the Triangle",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104339:E": {
            "contestId": 104339,
            "index": "E",
            "name": "Compare",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104339:A": {
            "contestId": 104339,
            "index": "A",
            "name": "Three kings",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104101:A": {
            "contestId": 104101,
            "index": "A",
            "name": "OP",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104037:A": {
            "contestId": 104037,
            "index": "A",
            "name": "Power",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104294:C": {
            "contestId": 104294,
            "index": "C",
            "name": "Attack on Titans",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104312:A": {
            "contestId": 104312,
            "index": "A",
            "name": "Dojo Duel",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102501:I": {
            "contestId": 102501,
            "index": "I",
            "name": "Rats",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104317:A": {
            "contestId": 104317,
            "index": "A",
            "name": "Antiamuny wants to learn binary search",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104199:A": {
            "contestId": 104199,
            "index": "A",
            "name": "Лифт",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104264:A": {
            "contestId": 104264,
            "index": "A",
            "name": "Vowels",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104282:B": {
            "contestId": 104282,
            "index": "B",
            "name": "Emoji Master BSQ",
            "type": "PROGRAMMING",
            "tags": []
        },
        "171:A": {
            "contestId": 171,
            "index": "A",
            "name": "Mysterious numbers - 1",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        "102697:178": {
            "contestId": 102697,
            "index": "178",
            "name": "Multiple of Two",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:182": {
            "contestId": 102697,
            "index": "182",
            "name": "Lucky Numbers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:030": {
            "contestId": 102697,
            "index": "030",
            "name": "World Cup (Easier Version)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102063:B": {
            "contestId": 102063,
            "index": "B",
            "name": "Racetrack",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102063:A": {
            "contestId": 102063,
            "index": "A",
            "name": "Adding Two Integers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102993:D": {
            "contestId": 102993,
            "index": "D",
            "name": "Fake News",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:027": {
            "contestId": 102697,
            "index": "027",
            "name": "Money Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:029": {
            "contestId": 102697,
            "index": "029",
            "name": "Goooooooooal!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:037": {
            "contestId": 102697,
            "index": "037",
            "name": "Practice Katanas",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102697:028": {
            "contestId": 102697,
            "index": "028",
            "name": "Funny Numbers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100699:N1": {
            "contestId": 100699,
            "index": "N1",
            "name": "string",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104002:A": {
            "contestId": 104002,
            "index": "A",
            "name": "William and Mary",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104217:B": {
            "contestId": 104217,
            "index": "B",
            "name": "Max Difference",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104217:A": {
            "contestId": 104217,
            "index": "A",
            "name": "Swapped Signs",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103895:C": {
            "contestId": 103895,
            "index": "C",
            "name": "Ellie the Elephant",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103895:A": {
            "contestId": 103895,
            "index": "A",
            "name": "Love Your Llama",
            "type": "PROGRAMMING",
            "tags": []
        },
        "456:B": {
            "contestId": 456,
            "index": "B",
            "name": "Fedya and Maths",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1778:D": {
            "contestId": 1778,
            "index": "D",
            "name": "Flexible String Revisit",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "probabilities"
            ]
        },
        "1780:D": {
            "contestId": 1780,
            "index": "D",
            "name": "Bit Guessing Game",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "interactive"
            ]
        },
        "148:C": {
            "contestId": 148,
            "index": "C",
            "name": "Terse princess",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "64:E": {
            "contestId": 64,
            "index": "E",
            "name": "Prime Segment",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "brute force",
                "math",
                "number theory"
            ]
        },
        "100155:D": {
            "contestId": 100155,
            "index": "D",
            "name": "Kids Love Candies",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104380:J": {
            "contestId": 104380,
            "index": "J",
            "name": "No 7",
            "type": "PROGRAMMING",
            "tags": []
        },
        "159:D": {
            "contestId": 159,
            "index": "D",
            "name": "Palindrome pairs",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1500,
            "tags": [
                "*special",
                "brute force",
                "dp",
                "strings"
            ]
        },
        "64:C": {
            "contestId": 64,
            "index": "C",
            "name": "Table",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "*special",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "64:F": {
            "contestId": 64,
            "index": "F",
            "name": "Domain",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special",
                "expression parsing"
            ]
        },
        "64:B": {
            "contestId": 64,
            "index": "B",
            "name": "Expression",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "expression parsing"
            ]
        },
        "64:A": {
            "contestId": 64,
            "index": "A",
            "name": "Factorial",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "102215:C": {
            "contestId": 102215,
            "index": "C",
            "name": "Jumps on a Circle",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101652:N": {
            "contestId": 101652,
            "index": "N",
            "name": "Odd Palindrome",
            "type": "PROGRAMMING",
            "tags": []
        },
        "784:B": {
            "contestId": 784,
            "index": "B",
            "name": "Kids' Riddle",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special"
            ]
        },
        "103256:E2": {
            "contestId": 103256,
            "index": "E2",
            "name": "Coins Game (hard version)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "159:A": {
            "contestId": 159,
            "index": "A",
            "name": "Friends or Not",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "*special",
                "greedy",
                "implementation"
            ]
        },
        "952:D": {
            "contestId": 952,
            "index": "D",
            "name": "I'm Feeling Lucky!",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "probabilities"
            ]
        },
        "1145:B": {
            "contestId": 1145,
            "index": "B",
            "name": "Kanban Numbers",
            "type": "PROGRAMMING",
            "tags": [
                "brute force"
            ]
        },
        "1505:I": {
            "contestId": 1505,
            "index": "I",
            "name": "Mysterious language again, seriously?",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "*special"
            ]
        },
        "86:D": {
            "contestId": 86,
            "index": "D",
            "name": "Powerful array",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "100227:J": {
            "contestId": 100227,
            "index": "J",
            "name": "Cigarettes",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102191:A": {
            "contestId": 102191,
            "index": "A",
            "name": "Generous Eater",
            "type": "PROGRAMMING",
            "tags": []
        },
        "495:B": {
            "contestId": 495,
            "index": "B",
            "name": "Modular Equations",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "104059:I": {
            "contestId": 104059,
            "index": "I",
            "name": "Improving IT",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104059:L": {
            "contestId": 104059,
            "index": "L",
            "name": "Lots of Land",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104059:E": {
            "contestId": 104059,
            "index": "E",
            "name": "Enjoyable Entree",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104059:K": {
            "contestId": 104059,
            "index": "K",
            "name": "K.O. Kids",
            "type": "PROGRAMMING",
            "tags": []
        },
        "24:A": {
            "contestId": 24,
            "index": "A",
            "name": "Ring road",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "graphs"
            ]
        },
        "897:B": {
            "contestId": 897,
            "index": "B",
            "name": "Chtholly's request",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force"
            ]
        },
        "227:A": {
            "contestId": 227,
            "index": "A",
            "name": "Where do I Turn?",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "geometry"
            ]
        },
        "1788:D": {
            "contestId": 1788,
            "index": "D",
            "name": "Moving Dots",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "combinatorics",
                "math",
                "two pointers"
            ]
        },
        "1151:B": {
            "contestId": 1151,
            "index": "B",
            "name": "Dima and a Bad XOR",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp"
            ]
        },
        "699:B": {
            "contestId": 699,
            "index": "B",
            "name": "One Bomb",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "implementation"
            ]
        },
        "1089:L": {
            "contestId": 1089,
            "index": "L",
            "name": "Lazyland",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": []
        },
        "102152:I": {
            "contestId": 102152,
            "index": "I",
            "name": "Array Negations",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1512:G": {
            "contestId": 1512,
            "index": "G",
            "name": "Short Task",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "dp",
                "math",
                "number theory"
            ]
        },
        "549:A": {
            "contestId": 549,
            "index": "A",
            "name": "Face Detection",
            "type": "PROGRAMMING",
            "points": 250,
            "rating": 900,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "385:C": {
            "contestId": 385,
            "index": "C",
            "name": "Bear and Prime Numbers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "dp",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1553:D": {
            "contestId": 1553,
            "index": "D",
            "name": "Backspace",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "dp",
                "greedy",
                "strings",
                "two pointers"
            ]
        },
        "777:B": {
            "contestId": 777,
            "index": "B",
            "name": "Game of Credit Cards",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "84:B": {
            "contestId": 84,
            "index": "B",
            "name": "Magical Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "implementation"
            ]
        },
        "104157:F": {
            "contestId": 104157,
            "index": "F",
            "name": "Toilet Orders",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104024:A": {
            "contestId": 104024,
            "index": "A",
            "name": "Saki",
            "type": "PROGRAMMING",
            "tags": []
        },
        "612:B": {
            "contestId": 612,
            "index": "B",
            "name": "HDD is Outdated Technology",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "630:H": {
            "contestId": 630,
            "index": "H",
            "name": "Benches",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "629:B": {
            "contestId": 629,
            "index": "B",
            "name": "Far Relative’s Problem",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "brute force"
            ]
        },
        "1000:A": {
            "contestId": 1000,
            "index": "A",
            "name": "Codehorses T-shirts",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "104386:C": {
            "contestId": 104386,
            "index": "C",
            "name": "Prefix Sum Array",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104386:B": {
            "contestId": 104386,
            "index": "B",
            "name": "Random Array",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104386:A": {
            "contestId": 104386,
            "index": "A",
            "name": "Dungeon videogame",
            "type": "PROGRAMMING",
            "tags": []
        },
        "808:D": {
            "contestId": 808,
            "index": "D",
            "name": "Array Division",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        "1157:E": {
            "contestId": 1157,
            "index": "E",
            "name": "Minimum Array",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "greedy"
            ]
        },
        "1007:A": {
            "contestId": 1007,
            "index": "A",
            "name": "Reorder the Array",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "data structures",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "101102:C": {
            "contestId": 101102,
            "index": "C",
            "name": "Bored Judge",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102830:C": {
            "contestId": 102830,
            "index": "C",
            "name": "Kevin's Meme Reacts",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102830:B": {
            "contestId": 102830,
            "index": "B",
            "name": "Tryouts",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102873:B": {
            "contestId": 102873,
            "index": "B",
            "name": "Rabbit Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102873:F": {
            "contestId": 102873,
            "index": "F",
            "name": "Game on Grid",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102873:D": {
            "contestId": 102873,
            "index": "D",
            "name": "Sanda's Job",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102873:C": {
            "contestId": 102873,
            "index": "C",
            "name": "Similar Arrays",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103937:D": {
            "contestId": 103937,
            "index": "D",
            "name": "Hardcore Haircuts",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103937:B": {
            "contestId": 103937,
            "index": "B",
            "name": "Extravagant Elephants",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103562:C": {
            "contestId": 103562,
            "index": "C",
            "name": "Cinder",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103562:G": {
            "contestId": 103562,
            "index": "G",
            "name": "Radiant Ruby",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103562:E": {
            "contestId": 103562,
            "index": "E",
            "name": "Changing Names",
            "type": "PROGRAMMING",
            "tags": []
        },
        "690:C2": {
            "contestId": 690,
            "index": "C2",
            "name": "Brain Network (medium)",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "177:C1": {
            "contestId": 177,
            "index": "C1",
            "name": "Party",
            "type": "PROGRAMMING",
            "points": 30,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "177:C2": {
            "contestId": 177,
            "index": "C2",
            "name": "Party",
            "type": "PROGRAMMING",
            "points": 70,
            "rating": 1500,
            "tags": [
                "brute force",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "100712:J": {
            "contestId": 100712,
            "index": "J",
            "name": "Candy",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100712:C": {
            "contestId": 100712,
            "index": "C",
            "name": "Street Lamps",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100712:G": {
            "contestId": 100712,
            "index": "G",
            "name": "Heavy Coins",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100712:F": {
            "contestId": 100712,
            "index": "F",
            "name": "Travelling Salesman",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100712:K": {
            "contestId": 100712,
            "index": "K",
            "name": "Runtime Error",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100712:E": {
            "contestId": 100712,
            "index": "E",
            "name": "Epic Professor",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100712:A": {
            "contestId": 100712,
            "index": "A",
            "name": "Who Is The Winner",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104015:A": {
            "contestId": 104015,
            "index": "A",
            "name": "Candies",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104015:B": {
            "contestId": 104015,
            "index": "B",
            "name": "Computer Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "27:C": {
            "contestId": 27,
            "index": "C",
            "name": "Unordered Subsequence",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "103495:I": {
            "contestId": 103495,
            "index": "I",
            "name": "Fake Walsh Transform",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103495:K": {
            "contestId": 103495,
            "index": "K",
            "name": "Longest Continuous 1",
            "type": "PROGRAMMING",
            "tags": []
        },
        "377:A": {
            "contestId": 377,
            "index": "A",
            "name": "Maze",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "dfs and similar"
            ]
        },
        "103373:C": {
            "contestId": 103373,
            "index": "C",
            "name": "A Sorting Problem",
            "type": "PROGRAMMING",
            "tags": []
        },
        "932:B": {
            "contestId": 932,
            "index": "B",
            "name": "Recursive Queries",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar"
            ]
        },
        "177:D2": {
            "contestId": 177,
            "index": "D2",
            "name": "Encrypting Messages",
            "type": "PROGRAMMING",
            "points": 70,
            "rating": 1500,
            "tags": [
                "data structures"
            ]
        },
        "102961:J": {
            "contestId": 102961,
            "index": "J",
            "name": "Missing Coin Sum",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1304:E": {
            "contestId": 1304,
            "index": "E",
            "name": "1-Trees and Queries",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "shortest paths",
                "trees"
            ]
        },
        "1569:C": {
            "contestId": 1569,
            "index": "C",
            "name": "Jury Meeting",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1561:B": {
            "contestId": 1561,
            "index": "B",
            "name": "Charmed by the Game",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1300,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "915:F": {
            "contestId": 915,
            "index": "F",
            "name": "Imbalance Value of a Tree",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        "1239:D": {
            "contestId": 1239,
            "index": "D",
            "name": "Catowice City",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "2-sat",
                "dfs and similar",
                "graph matchings",
                "graphs"
            ]
        },
        "1611:D": {
            "contestId": 1611,
            "index": "D",
            "name": "Weights Assignment For Tree Edges",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        "1611:E1": {
            "contestId": 1611,
            "index": "E1",
            "name": "Escape The Maze (easy version)",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "greedy",
                "shortest paths",
                "trees",
                "two pointers"
            ]
        },
        "1714:F": {
            "contestId": 1714,
            "index": "F",
            "name": "Build a Tree and That Is It",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "implementation",
                "trees"
            ]
        },
        "689:E": {
            "contestId": 689,
            "index": "E",
            "name": "Mike and Geometry Problem",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "data structures",
                "dp",
                "geometry",
                "implementation"
            ]
        },
        "612:D": {
            "contestId": 612,
            "index": "D",
            "name": "The Union of k-Segments",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1720:D1": {
            "contestId": 1720,
            "index": "D1",
            "name": "Xor-Subsequence (easy version)",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "strings",
                "trees",
                "two pointers"
            ]
        },
        "1677:A": {
            "contestId": 1677,
            "index": "A",
            "name": "Tokitsukaze and Strange Inequality",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "brute force",
                "data structures",
                "dp"
            ]
        },
        "1715:D": {
            "contestId": 1715,
            "index": "D",
            "name": "2+ doors",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1900,
            "tags": [
                "2-sat",
                "bitmasks",
                "graphs",
                "greedy"
            ]
        },
        "484:B": {
            "contestId": 484,
            "index": "B",
            "name": "Maximum Value",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2100,
            "tags": [
                "binary search",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "474:F": {
            "contestId": 474,
            "index": "F",
            "name": "Ant colony",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "data structures",
                "math",
                "number theory"
            ]
        },
        "837:C": {
            "contestId": 837,
            "index": "C",
            "name": "Two Seals",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "837:B": {
            "contestId": 837,
            "index": "B",
            "name": "Flag of Berland",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1719:D1": {
            "contestId": 1719,
            "index": "D1",
            "name": "Burenka and Traditions (easy version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "825:B": {
            "contestId": 825,
            "index": "B",
            "name": "Five-In-a-Row",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "818:E": {
            "contestId": 818,
            "index": "E",
            "name": "Card Game Again",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "number theory",
                "two pointers"
            ]
        },
        "566:D": {
            "contestId": 566,
            "index": "D",
            "name": "Restructuring Company",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1900,
            "tags": [
                "data structures",
                "dsu"
            ]
        },
        "1716:E": {
            "contestId": 1716,
            "index": "E",
            "name": "Swap and Maximum Block",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "bitmasks",
                "data structures",
                "dfs and similar",
                "divide and conquer",
                "dp"
            ]
        },
        "986:A": {
            "contestId": 986,
            "index": "A",
            "name": "Fair",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "graphs",
                "greedy",
                "number theory",
                "shortest paths"
            ]
        },
        "464:A": {
            "contestId": 464,
            "index": "A",
            "name": "No to Palindromes!",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1700,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "830:A": {
            "contestId": 830,
            "index": "A",
            "name": "Office Keys",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1800,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1716:C": {
            "contestId": 1716,
            "index": "C",
            "name": "Robot in a Hallway",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "ternary search"
            ]
        },
        "1684:E": {
            "contestId": 1684,
            "index": "E",
            "name": "MEX vs DIFF",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        "1311:F": {
            "contestId": 1311,
            "index": "F",
            "name": "Moving Points",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "data structures",
                "divide and conquer",
                "implementation",
                "sortings"
            ]
        },
        "1706:E": {
            "contestId": 1706,
            "index": "E",
            "name": "Qpwoeirut and Vertices",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "divide and conquer",
                "dsu",
                "greedy",
                "trees"
            ]
        },
        "1709:C": {
            "contestId": 1709,
            "index": "C",
            "name": "Recover an RBS",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "25:D": {
            "contestId": 25,
            "index": "D",
            "name": "Roads not only in Berland",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dsu",
                "graphs",
                "trees"
            ]
        },
        "1328:E": {
            "contestId": 1328,
            "index": "E",
            "name": "Tree Queries",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "920:F": {
            "contestId": 920,
            "index": "F",
            "name": "SUM and REPLACE",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "data structures",
                "dsu",
                "number theory"
            ]
        },
        "1702:G1": {
            "contestId": 1702,
            "index": "G1",
            "name": "Passable Paths (easy version)",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "trees"
            ]
        },
        "1698:E": {
            "contestId": 1698,
            "index": "E",
            "name": "PermutationForces II",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "brute force",
                "combinatorics",
                "greedy",
                "sortings",
                "trees",
                "two pointers"
            ]
        },
        "1698:D": {
            "contestId": 1698,
            "index": "D",
            "name": "Fixed Point Guessing",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        "461:B": {
            "contestId": 461,
            "index": "B",
            "name": "Appleman and Tree",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "100963:J": {
            "contestId": 100963,
            "index": "J",
            "name": "Once Upon A Time",
            "type": "PROGRAMMING",
            "tags": []
        },
        "447:C": {
            "contestId": 447,
            "index": "C",
            "name": "DZY Loves Sequences",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "dp"
            ]
        },
        "959:E": {
            "contestId": 959,
            "index": "E",
            "name": "Mahmoud and Ehab and the xor-MST",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "dp",
                "graphs",
                "implementation",
                "math"
            ]
        },
        "1363:C": {
            "contestId": 1363,
            "index": "C",
            "name": "Game On Leaves",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "games",
                "trees"
            ]
        },
        "1536:C": {
            "contestId": 1536,
            "index": "C",
            "name": "Diluc and Kaeya",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "data structures",
                "dp",
                "hashing",
                "number theory"
            ]
        },
        "744:A": {
            "contestId": 744,
            "index": "A",
            "name": "Hongcow Builds A Nation",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "dfs and similar",
                "graphs"
            ]
        },
        "282:E": {
            "contestId": 282,
            "index": "E",
            "name": "Sausage Maximization",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        "1600:J": {
            "contestId": 1600,
            "index": "J",
            "name": "Robot Factory",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "bitmasks",
                "dfs and similar"
            ]
        },
        "1768:F": {
            "contestId": 1768,
            "index": "F",
            "name": "Wonderful Jump",
            "type": "PROGRAMMING",
            "points": 3250,
            "rating": 2900,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "510:B": {
            "contestId": 510,
            "index": "B",
            "name": "Fox And Two Dots",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "dfs and similar"
            ]
        },
        "60:B": {
            "contestId": 60,
            "index": "B",
            "name": "Serial Time!",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dsu"
            ]
        },
        "1769:C1": {
            "contestId": 1769,
            "index": "C1",
            "name": "Подкрутка I",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "*special",
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1106:D": {
            "contestId": 1106,
            "index": "D",
            "name": "Lunar New Year and a Wander",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "505:B": {
            "contestId": 505,
            "index": "B",
            "name": "Mr. Kitayuta's Colorful Graph",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "graphs"
            ]
        },
        "1747:D": {
            "contestId": 1747,
            "index": "D",
            "name": "Yet Another Problem",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "data structures"
            ]
        },
        "1767:C": {
            "contestId": 1767,
            "index": "C",
            "name": "Count Binary Strings",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "1203:D1": {
            "contestId": 1203,
            "index": "D1",
            "name": "Remove the Substring (easy version)",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1213:G": {
            "contestId": 1213,
            "index": "G",
            "name": "Path Queries",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "divide and conquer",
                "dsu",
                "graphs",
                "sortings",
                "trees"
            ]
        },
        "1081:D": {
            "contestId": 1081,
            "index": "D",
            "name": "Maximum Distance",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "dsu",
                "graphs",
                "shortest paths",
                "sortings"
            ]
        },
        "115:E": {
            "contestId": 115,
            "index": "E",
            "name": "Linear Kingdom Races",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "359:C": {
            "contestId": 359,
            "index": "C",
            "name": "Prime Number",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "706:D": {
            "contestId": 706,
            "index": "D",
            "name": "Vasiliy's Multiset",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        "1744:F": {
            "contestId": 1744,
            "index": "F",
            "name": "MEX vs MED",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "math",
                "two pointers"
            ]
        },
        "1754:F": {
            "contestId": 1754,
            "index": "F",
            "name": "The Beach",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "graphs",
                "shortest paths",
                "shortest paths",
                "shortest paths"
            ]
        },
        "1061:C": {
            "contestId": 1061,
            "index": "C",
            "name": "Multiplicity",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1253:F": {
            "contestId": 1253,
            "index": "F",
            "name": "Cheap Robot",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2500,
            "tags": [
                "binary search",
                "dsu",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        "1521:D": {
            "contestId": 1521,
            "index": "D",
            "name": "Nastia Plays with a Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dp",
                "dsu",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        "1197:E": {
            "contestId": 1197,
            "index": "E",
            "name": "Culture Code",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "dp",
                "shortest paths",
                "sortings"
            ]
        },
        "811:A": {
            "contestId": 811,
            "index": "A",
            "name": "Vladik and Courtesy",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "978:D": {
            "contestId": 978,
            "index": "D",
            "name": "Almost Arithmetic Progression",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1741:F": {
            "contestId": 1741,
            "index": "F",
            "name": "Multi-Colored Segments",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "math",
                "sortings"
            ]
        },
        "1736:E": {
            "contestId": 1736,
            "index": "E",
            "name": "Swap and Take",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1736:D": {
            "contestId": 1736,
            "index": "D",
            "name": "Equal Binary Subsequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "geometry",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "676:D": {
            "contestId": 676,
            "index": "D",
            "name": "Theseus and labyrinth",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "graphs",
                "implementation",
                "shortest paths"
            ]
        },
        "488:D": {
            "contestId": 488,
            "index": "D",
            "name": "Strip",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        "1737:D": {
            "contestId": 1737,
            "index": "D",
            "name": "Ela and the Wiring Wizard",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "brute force",
                "dp",
                "graphs",
                "greedy",
                "implementation",
                "shortest paths"
            ]
        },
        "1088:D": {
            "contestId": 1088,
            "index": "D",
            "name": "Ehab and another another xor problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "implementation",
                "interactive"
            ]
        },
        "600:D": {
            "contestId": 600,
            "index": "D",
            "name": "Area of Two Circles' Intersection",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "geometry"
            ]
        },
        "1735:E": {
            "contestId": 1735,
            "index": "E",
            "name": "House Planning",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graph matchings",
                "greedy"
            ]
        },
        "1735:D": {
            "contestId": 1735,
            "index": "D",
            "name": "Meta-set",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "brute force",
                "combinatorics",
                "data structures",
                "hashing",
                "math"
            ]
        },
        "1738:E": {
            "contestId": 1738,
            "index": "E",
            "name": "Balance Addicts",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "two pointers"
            ]
        },
        "1738:D": {
            "contestId": 1738,
            "index": "D",
            "name": "Permutation Addicts",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        "1739:D": {
            "contestId": 1739,
            "index": "D",
            "name": "Reset K Edges",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        "842:D": {
            "contestId": 842,
            "index": "D",
            "name": "Vitya and Strange Lesson",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        "1734:D": {
            "contestId": 1734,
            "index": "D",
            "name": "Slime Escape",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "1734:E": {
            "contestId": 1734,
            "index": "E",
            "name": "Rectangular Congruence",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        "1730:E": {
            "contestId": 1730,
            "index": "E",
            "name": "Maximums and Minimums",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2700,
            "tags": [
                "combinatorics",
                "data structures",
                "divide and conquer",
                "number theory"
            ]
        },
        "1730:D": {
            "contestId": 1730,
            "index": "D",
            "name": "Prefixes and Suffixes",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "strings",
                "two pointers"
            ]
        },
        "1719:E": {
            "contestId": 1719,
            "index": "E",
            "name": "Fibonacci Strings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "greedy",
                "implementation",
                "number theory"
            ]
        },
        "485:D": {
            "contestId": 485,
            "index": "D",
            "name": "Maximum Value",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "binary search",
                "sortings"
            ]
        },
        "1271:D": {
            "contestId": 1271,
            "index": "D",
            "name": "Portals",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1201:D": {
            "contestId": 1201,
            "index": "D",
            "name": "Treasure Hunting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1733:D2": {
            "contestId": 1733,
            "index": "D2",
            "name": "Zero-One (Hard Version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2000,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1323:D": {
            "contestId": 1323,
            "index": "D",
            "name": "Present",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "math",
                "sortings"
            ]
        },
        "814:D": {
            "contestId": 814,
            "index": "D",
            "name": "An overnight dance in discotheque",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "geometry",
                "greedy",
                "trees"
            ]
        },
        "1269:D": {
            "contestId": 1269,
            "index": "D",
            "name": "Domino for Young",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        "401:D": {
            "contestId": 401,
            "index": "D",
            "name": "Roman and Numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "combinatorics",
                "dp",
                "number theory"
            ]
        },
        "1726:D": {
            "contestId": 1726,
            "index": "D",
            "name": "Edge Split",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "probabilities",
                "trees"
            ]
        },
        "1173:D": {
            "contestId": 1173,
            "index": "D",
            "name": "Nauuo and Circle",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "dp",
                "geometry",
                "trees"
            ]
        },
        "1131:D": {
            "contestId": 1131,
            "index": "D",
            "name": "Gourmet choice",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        "1725:D": {
            "contestId": 1725,
            "index": "D",
            "name": "Deducing Sortability",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "binary search",
                "bitmasks",
                "math"
            ]
        },
        "1725:C": {
            "contestId": 1725,
            "index": "C",
            "name": "Circular Mirror",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "combinatorics",
                "geometry",
                "math",
                "two pointers"
            ]
        },
        "1725:K": {
            "contestId": 1725,
            "index": "K",
            "name": "Kingdom of Criticism",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "data structures",
                "dsu"
            ]
        },
        "1725:F": {
            "contestId": 1725,
            "index": "F",
            "name": "Field Photography",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "bitmasks",
                "data structures",
                "sortings"
            ]
        },
        "1725:I": {
            "contestId": 1725,
            "index": "I",
            "name": "Imitating the Key Tree",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "combinatorics",
                "dsu",
                "trees"
            ]
        },
        "1725:L": {
            "contestId": 1725,
            "index": "L",
            "name": "Lemper Cooking Competition",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "data structures"
            ]
        },
        "1725:J": {
            "contestId": 1725,
            "index": "J",
            "name": "Journey",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "dp",
                "trees"
            ]
        },
        "1725:M": {
            "contestId": 1725,
            "index": "M",
            "name": "Moving Both Hands",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        "1717:E": {
            "contestId": 1717,
            "index": "E",
            "name": "Madoka and The Best University",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1237:D": {
            "contestId": 1237,
            "index": "D",
            "name": "Balanced Playlist",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "implementation"
            ]
        },
        "1457:D": {
            "contestId": 1457,
            "index": "D",
            "name": "XOR-gun",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp"
            ]
        },
        "1525:C": {
            "contestId": 1525,
            "index": "C",
            "name": "Robot Collisions",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "556:D": {
            "contestId": 556,
            "index": "D",
            "name": "Case of Fugitive",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "greedy"
            ]
        },
        "1722:F": {
            "contestId": 1722,
            "index": "F",
            "name": "L-shapes",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "implementation"
            ]
        },
        "1605:D": {
            "contestId": 1605,
            "index": "D",
            "name": "Treelabeling",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "games",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        "1721:E": {
            "contestId": 1721,
            "index": "E",
            "name": "Prefix Function Queries",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "dp",
                "hashing",
                "string suffix structures",
                "strings",
                "trees"
            ]
        },
        "1721:D": {
            "contestId": 1721,
            "index": "D",
            "name": "Maximum AND",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "bitmasks",
                "dfs and similar",
                "divide and conquer",
                "greedy",
                "sortings"
            ]
        },
        "598:E": {
            "contestId": 598,
            "index": "E",
            "name": "Chocolate Bar",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "864:E": {
            "contestId": 864,
            "index": "E",
            "name": "Fire",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        "579:E": {
            "contestId": 579,
            "index": "E",
            "name": "Weakness and Poorness",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "ternary search"
            ]
        },
        "495:C": {
            "contestId": 495,
            "index": "C",
            "name": "Treasure",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "495:D": {
            "contestId": 495,
            "index": "D",
            "name": "Obsessive String",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "dp",
                "strings"
            ]
        },
        "1719:D2": {
            "contestId": 1719,
            "index": "D2",
            "name": "Burenka and Traditions (hard version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "dp",
                "greedy",
                "math"
            ]
        },
        "766:D": {
            "contestId": 766,
            "index": "D",
            "name": "Mahmoud and a Dictionary",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "dsu",
                "graphs"
            ]
        },
        "792:C": {
            "contestId": 792,
            "index": "C",
            "name": "Divide by Three",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1589:D": {
            "contestId": 1589,
            "index": "D",
            "name": "Guess the Permutation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "binary search",
                "combinatorics",
                "interactive",
                "math"
            ]
        },
        "1715:E": {
            "contestId": 1715,
            "index": "E",
            "name": "Long Way Home",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2400,
            "tags": [
                "data structures",
                "divide and conquer",
                "dp",
                "geometry",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "1257:E": {
            "contestId": 1257,
            "index": "E",
            "name": "The Contest",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        "1720:D2": {
            "contestId": 1720,
            "index": "D2",
            "name": "Xor-Subsequence (hard version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "data structures",
                "dp",
                "strings",
                "trees"
            ]
        },
        "1241:D": {
            "contestId": 1241,
            "index": "D",
            "name": "Sequence Sorting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp",
                "two pointers"
            ]
        },
        "1304:F1": {
            "contestId": 1304,
            "index": "F1",
            "name": "Animal Observation (easy version)",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "1304:F2": {
            "contestId": 1304,
            "index": "F2",
            "name": "Animal Observation (hard version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2400,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        "454:D": {
            "contestId": 454,
            "index": "D",
            "name": "Little Pony and Harmony Chest",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        "1350:D": {
            "contestId": 1350,
            "index": "D",
            "name": "Orac and Medians",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1426:F": {
            "contestId": 1426,
            "index": "F",
            "name": "Number of Subsequences",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "combinatorics",
                "dp",
                "strings"
            ]
        },
        "1712:E1": {
            "contestId": 1712,
            "index": "E1",
            "name": "LCM Sum (easy version)",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "combinatorics",
                "math",
                "number theory",
                "two pointers"
            ]
        },
        "1712:E2": {
            "contestId": 1712,
            "index": "E2",
            "name": "LCM Sum (hard version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2500,
            "tags": [
                "brute force",
                "data structures",
                "math",
                "number theory",
                "two pointers"
            ]
        },
        "1712:D": {
            "contestId": 1712,
            "index": "D",
            "name": "Empty Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "shortest paths"
            ]
        },
        "1200:F": {
            "contestId": 1200,
            "index": "F",
            "name": "Graph Traveler",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "dp",
                "graphs",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1200:E": {
            "contestId": 1200,
            "index": "E",
            "name": "Compress Words",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "hashing",
                "implementation",
                "string suffix structures",
                "strings"
            ]
        },
        "1200:D": {
            "contestId": 1200,
            "index": "D",
            "name": "White Lines",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        "1359:E": {
            "contestId": 1359,
            "index": "E",
            "name": "Modular Stability",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        "1612:D": {
            "contestId": 1612,
            "index": "D",
            "name": "X-Magic Pair",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "999:E": {
            "contestId": 999,
            "index": "E",
            "name": "Reachability from the Capital",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        "999:F": {
            "contestId": 999,
            "index": "F",
            "name": "Cards and Joy",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        "1345:D": {
            "contestId": 1345,
            "index": "D",
            "name": "Monopole Magnets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu"
            ]
        },
        "1654:D": {
            "contestId": 1654,
            "index": "D",
            "name": "Potion Brewing Class",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "math",
                "number theory",
                "trees"
            ]
        },
        "1713:D": {
            "contestId": 1713,
            "index": "D",
            "name": "Tournament Countdown",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "interactive",
                "number theory",
                "probabilities"
            ]
        },
        "1716:D": {
            "contestId": 1716,
            "index": "D",
            "name": "Chip Move",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "math"
            ]
        },
        "1679:D": {
            "contestId": 1679,
            "index": "D",
            "name": "Toss a Coin to Your Graph...",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "binary search",
                "dfs and similar",
                "dp",
                "graphs"
            ]
        },
        "1704:D": {
            "contestId": 1704,
            "index": "D",
            "name": "Magical Array",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "hashing",
                "implementation",
                "math"
            ]
        },
        "1493:C": {
            "contestId": 1493,
            "index": "C",
            "name": "K-beautiful Strings",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        "1690:G": {
            "contestId": 1690,
            "index": "G",
            "name": "Count the Trains",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1244:C": {
            "contestId": 1244,
            "index": "C",
            "name": "The Football Season",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1711:D": {
            "contestId": 1711,
            "index": "D",
            "name": "Rain",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "sortings"
            ]
        },
        "1709:E": {
            "contestId": 1709,
            "index": "E",
            "name": "XOR Tree",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "bitmasks",
                "data structures",
                "dfs and similar",
                "dsu",
                "greedy",
                "trees"
            ]
        },
        "1709:D": {
            "contestId": 1709,
            "index": "D",
            "name": "Rorororobot",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "math"
            ]
        },
        "1459:D": {
            "contestId": 1459,
            "index": "D",
            "name": "Glass Half Spilled",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "1708:E": {
            "contestId": 1708,
            "index": "E",
            "name": "DFS Trees",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        "1708:D": {
            "contestId": 1708,
            "index": "D",
            "name": "Difference Array",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "brute force",
                "sortings"
            ]
        },
        "1705:E": {
            "contestId": 1705,
            "index": "E",
            "name": "Mark and Professor Koro",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "combinatorics",
                "data structures",
                "greedy"
            ]
        },
        "545:E": {
            "contestId": 545,
            "index": "E",
            "name": "Paths and Trees",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        "1296:E2": {
            "contestId": 1296,
            "index": "E2",
            "name": "String Coloring (hard version)",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "776:D": {
            "contestId": 776,
            "index": "D",
            "name": "The Door Problem",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "2-sat",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "451:D": {
            "contestId": 451,
            "index": "D",
            "name": "Count Good Substrings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        "1438:C": {
            "contestId": 1438,
            "index": "C",
            "name": "Engineer Artem",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2000,
            "tags": [
                "2-sat",
                "chinese remainder theorem",
                "constructive algorithms",
                "fft",
                "flows"
            ]
        },
        "1359:D": {
            "contestId": 1359,
            "index": "D",
            "name": "Yet Another Yet Another Task",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        "1701:E": {
            "contestId": 1701,
            "index": "E",
            "name": "Text Editor",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "strings"
            ]
        },
        "1701:D": {
            "contestId": 1701,
            "index": "D",
            "name": "Permutation Restoration",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1699:D": {
            "contestId": 1699,
            "index": "D",
            "name": "Almost Triple Deletions",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "greedy"
            ]
        },
        "1612:E": {
            "contestId": 1612,
            "index": "E",
            "name": "Messages",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "probabilities",
                "sortings"
            ]
        },
        "462:D": {
            "contestId": 462,
            "index": "D",
            "name": "Appleman and Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp",
                "graphs"
            ]
        },
        "1680:E": {
            "contestId": 1680,
            "index": "E",
            "name": "Moving Chips",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "bitmasks",
                "dp",
                "greedy"
            ]
        },
        "1682:D": {
            "contestId": 1682,
            "index": "D",
            "name": "Circular Spanning Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "trees"
            ]
        },
        "1696:D": {
            "contestId": 1696,
            "index": "D",
            "name": "Permutation Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "divide and conquer",
                "greedy",
                "shortest paths"
            ]
        },
        "337:D": {
            "contestId": 337,
            "index": "D",
            "name": "Book of Evil",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "divide and conquer",
                "dp",
                "trees"
            ]
        },
        "1642:D": {
            "contestId": 1642,
            "index": "D",
            "name": "Repetitions Decoding",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "1686:D": {
            "contestId": 1686,
            "index": "D",
            "name": "Linguistics",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings",
                "strings",
                "two pointers"
            ]
        },
        "1582:E": {
            "contestId": 1582,
            "index": "E",
            "name": "Pchelyonok and Segments",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "math"
            ]
        },
        "250:D": {
            "contestId": 250,
            "index": "D",
            "name": "Building Bridge",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "geometry",
                "ternary search",
                "two pointers"
            ]
        },
        "895:C": {
            "contestId": 895,
            "index": "C",
            "name": "Square Subsets",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1695:D1": {
            "contestId": 1695,
            "index": "D1",
            "name": "Tree Queries (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "1695:D2": {
            "contestId": 1695,
            "index": "D2",
            "name": "Tree Queries (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "1694:E": {
            "contestId": 1694,
            "index": "E",
            "name": "Keshi in Search of AmShZ",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "shortest paths"
            ]
        },
        "1694:D": {
            "contestId": 1694,
            "index": "D",
            "name": "Fake Plastic Trees",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "710:E": {
            "contestId": 710,
            "index": "E",
            "name": "Generate a String",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp"
            ]
        },
        "1697:E": {
            "contestId": 1697,
            "index": "E",
            "name": "Coloring",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "dp",
                "geometry",
                "graphs",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1697:D": {
            "contestId": 1697,
            "index": "D",
            "name": "Guess The String",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        "796:D": {
            "contestId": 796,
            "index": "D",
            "name": "Police Stations",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        "703:D": {
            "contestId": 703,
            "index": "D",
            "name": "Mishka and Interesting sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures"
            ]
        },
        "1360:H": {
            "contestId": 1360,
            "index": "H",
            "name": "Binary Median",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "constructive algorithms"
            ]
        },
        "1217:D": {
            "contestId": 1217,
            "index": "D",
            "name": "Coloring Edges",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        "343:D": {
            "contestId": 343,
            "index": "D",
            "name": "Water Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "920:E": {
            "contestId": 920,
            "index": "E",
            "name": "Connected Components?",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1788:F": {
            "contestId": 1788,
            "index": "F",
            "name": "XOR, Tree, and Queries",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        "1788:E": {
            "contestId": 1788,
            "index": "E",
            "name": "Sum Over Zero",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp"
            ]
        },
        "208:E": {
            "contestId": 208,
            "index": "E",
            "name": "Blood Cousins",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        "456:E": {
            "contestId": 456,
            "index": "E",
            "name": "Civilization",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        "519:E": {
            "contestId": 519,
            "index": "E",
            "name": "A and B and Lecture Rooms",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "1187:E": {
            "contestId": 1187,
            "index": "E",
            "name": "Tree Painting",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "237:D": {
            "contestId": 237,
            "index": "D",
            "name": "T-decomposition",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        "34:E": {
            "contestId": 34,
            "index": "E",
            "name": "Collisions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "59:D": {
            "contestId": 59,
            "index": "D",
            "name": "Team Arrangement",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "131:F": {
            "contestId": 131,
            "index": "F",
            "name": "Present to Mom",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "binary search",
                "two pointers"
            ]
        },
        "109:D": {
            "contestId": 109,
            "index": "D",
            "name": "Lucky Sorting",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        "58:D": {
            "contestId": 58,
            "index": "D",
            "name": "Calendar",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "61:C": {
            "contestId": 61,
            "index": "C",
            "name": "Capture Valerian",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        "413:D": {
            "contestId": 413,
            "index": "D",
            "name": "2048",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "dp"
            ]
        },
        "50:C": {
            "contestId": 50,
            "index": "C",
            "name": "Happy Farm 5",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "geometry"
            ]
        },
        "262:E": {
            "contestId": 262,
            "index": "E",
            "name": "Maxim and Matrix",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        "435:D": {
            "contestId": 435,
            "index": "D",
            "name": "Special Grid",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "13:B": {
            "contestId": 13,
            "index": "B",
            "name": "Letter A",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        "82:C": {
            "contestId": 82,
            "index": "C",
            "name": "General Mobilization",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "sortings"
            ]
        },
        "1787:E": {
            "contestId": 1787,
            "index": "E",
            "name": "The Harmonization of XOR",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1787:D": {
            "contestId": 1787,
            "index": "D",
            "name": "Game on Axis",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "dsu",
                "graphs",
                "implementation"
            ]
        },
        "119:C": {
            "contestId": 119,
            "index": "C",
            "name": "Education Reform",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        "18:E": {
            "contestId": 18,
            "index": "E",
            "name": "Flag 2",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        "18:D": {
            "contestId": 18,
            "index": "D",
            "name": "Seller Bob",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1780:F": {
            "contestId": 1780,
            "index": "F",
            "name": "Three Chairs",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "brute force",
                "combinatorics",
                "data structures",
                "dp",
                "number theory",
                "sortings"
            ]
        },
        "1780:E": {
            "contestId": 1780,
            "index": "E",
            "name": "Josuke and Complete Graph",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "math",
                "number theory"
            ]
        },
        "128:D": {
            "contestId": 128,
            "index": "D",
            "name": "Numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "1792:E": {
            "contestId": 1792,
            "index": "E",
            "name": "Divisors and Table",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "number theory"
            ]
        },
        "433:D": {
            "contestId": 433,
            "index": "D",
            "name": "Nanami's Digital Board",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dsu",
                "implementation"
            ]
        },
        "263:C": {
            "contestId": 263,
            "index": "C",
            "name": "Circle of Numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "brute force",
                "dfs and similar",
                "implementation"
            ]
        },
        "1777:E": {
            "contestId": 1777,
            "index": "E",
            "name": "Edge Reverse",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "binary search",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "1777:D": {
            "contestId": 1777,
            "index": "D",
            "name": "Score of a Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dfs and similar",
                "dp",
                "math",
                "probabilities",
                "trees"
            ]
        },
        "818:C": {
            "contestId": 818,
            "index": "C",
            "name": "Sofa Thief",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "807:D": {
            "contestId": 807,
            "index": "D",
            "name": "Dynamic Problem Scoring",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "872:D": {
            "contestId": 872,
            "index": "D",
            "name": "Something with XOR Queries",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "brute force",
                "implementation",
                "interactive"
            ]
        },
        "189:E": {
            "contestId": 189,
            "index": "E",
            "name": "Weak Memory",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "binary search",
                "shortest paths"
            ]
        },
        "10:C": {
            "contestId": 10,
            "index": "C",
            "name": "Digital Root",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "number theory"
            ]
        },
        "427:E": {
            "contestId": 427,
            "index": "E",
            "name": "Police Patrol",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "ternary search"
            ]
        },
        "281:C": {
            "contestId": 281,
            "index": "C",
            "name": "Rectangle Puzzle",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        "237:E": {
            "contestId": 237,
            "index": "E",
            "name": "Build String",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "flows",
                "graphs"
            ]
        },
        "1092:E": {
            "contestId": 1092,
            "index": "E",
            "name": "Minimal Diameter Forest",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        "379:D": {
            "contestId": 379,
            "index": "D",
            "name": "New Year Letter",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "dp"
            ]
        },
        "513:C": {
            "contestId": 513,
            "index": "C",
            "name": "Second price auction",
            "type": "PROGRAMMING",
            "points": 8,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "probabilities"
            ]
        },
        "75:D": {
            "contestId": 75,
            "index": "D",
            "name": "Big Maximum Sum",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "math",
                "trees"
            ]
        },
        "318:D": {
            "contestId": 318,
            "index": "D",
            "name": "Ants",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dfs and similar"
            ]
        },
        "492:E": {
            "contestId": 492,
            "index": "E",
            "name": "Vanya and Field",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        "664:C": {
            "contestId": 664,
            "index": "C",
            "name": "International Olympiad",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "greedy"
            ]
        },
        "259:E": {
            "contestId": 259,
            "index": "E",
            "name": "Little Elephant and LCM",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "binary search",
                "combinatorics",
                "math"
            ]
        },
        "659:F": {
            "contestId": 659,
            "index": "F",
            "name": "Polycarp and Hay",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        "412:D": {
            "contestId": 412,
            "index": "D",
            "name": "Giving Awards",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar"
            ]
        },
        "1783:F": {
            "contestId": 1783,
            "index": "F",
            "name": "Double Sort II",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "flows",
                "graph matchings",
                "graphs"
            ]
        },
        "368:E": {
            "contestId": 368,
            "index": "E",
            "name": "Sereja and the Arrangement of Numbers",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "graphs",
                "implementation"
            ]
        },
        "1102:F": {
            "contestId": 1102,
            "index": "F",
            "name": "Elongated Matrix",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "dp",
                "graphs"
            ]
        },
        "681:D": {
            "contestId": 681,
            "index": "D",
            "name": "Gifts by the List",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "1768:E": {
            "contestId": 1768,
            "index": "E",
            "name": "Partial Sorting",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        "890:D": {
            "contestId": 890,
            "index": "D",
            "name": "Restoration of string",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "graphs",
                "greedy",
                "strings"
            ]
        },
        "1779:E": {
            "contestId": 1779,
            "index": "E",
            "name": "Anya's Simultaneous Exhibition",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "interactive",
                "sortings"
            ]
        },
        "509:E": {
            "contestId": 509,
            "index": "E",
            "name": "Pretty Song",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "math",
                "strings"
            ]
        },
        "82:D": {
            "contestId": 82,
            "index": "D",
            "name": "Two out of Three",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        "1165:F1": {
            "contestId": 1165,
            "index": "F1",
            "name": "Microtransactions (easy version)",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "1165:F2": {
            "contestId": 1165,
            "index": "F2",
            "name": "Microtransactions (hard version)",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "greedy",
                "implementation"
            ]
        },
        "761:E": {
            "contestId": 761,
            "index": "E",
            "name": "Dasha and Puzzle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        "1770:D": {
            "contestId": 1770,
            "index": "D",
            "name": "Koxia and Game",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dsu",
                "flows",
                "games",
                "graph matchings",
                "graphs",
                "implementation"
            ]
        },
        "975:D": {
            "contestId": 975,
            "index": "D",
            "name": "Ghosts",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "509:C": {
            "contestId": 509,
            "index": "C",
            "name": "Sums of Digits",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1731:E": {
            "contestId": 1731,
            "index": "E",
            "name": "Graph Cost",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "15:C": {
            "contestId": 15,
            "index": "C",
            "name": "Industrial Nim",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "games"
            ]
        },
        "844:D": {
            "contestId": 844,
            "index": "D",
            "name": "Interactive LowerBound",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "brute force",
                "interactive",
                "probabilities"
            ]
        },
        "697:E": {
            "contestId": 697,
            "index": "E",
            "name": "PLEASE",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "math",
                "number theory"
            ]
        },
        "557:D": {
            "contestId": 557,
            "index": "D",
            "name": "Vitaly and Cycle",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        "817:E": {
            "contestId": 817,
            "index": "E",
            "name": "Choosing The Commander",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        "1130:E": {
            "contestId": 1130,
            "index": "E",
            "name": "Wrong Answer",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        "1191:F": {
            "contestId": 1191,
            "index": "F",
            "name": "Tokitsukaze and Strange Rectangle",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "data structures",
                "divide and conquer"
            ]
        },
        "1763:E": {
            "contestId": 1763,
            "index": "E",
            "name": "Node Pairs",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "dp",
                "graphs",
                "math",
                "number theory"
            ]
        },
        "1763:D": {
            "contestId": 1763,
            "index": "D",
            "name": "Valid Bitonic Permutations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "dp",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "1772:F": {
            "contestId": 1772,
            "index": "F",
            "name": "Copy of a Copy of a Copy",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "implementation",
                "sortings"
            ]
        },
        "1772:G": {
            "contestId": 1772,
            "index": "G",
            "name": "Gaining Rating",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1183:G": {
            "contestId": 1183,
            "index": "G",
            "name": "Candy Box (hard version)",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "501:D": {
            "contestId": 501,
            "index": "D",
            "name": "Misha and Permutations Summation",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        "615:C": {
            "contestId": 615,
            "index": "C",
            "name": "Running Track",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dp",
                "greedy",
                "strings",
                "trees"
            ]
        },
        "787:C": {
            "contestId": 787,
            "index": "C",
            "name": "Berzerk",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dp",
                "games"
            ]
        },
        "1766:E": {
            "contestId": 1766,
            "index": "E",
            "name": "Decomposition",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "divide and conquer",
                "dp",
                "two pointers"
            ]
        },
        "1771:E": {
            "contestId": 1771,
            "index": "E",
            "name": "Hossam and a Letter",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2500,
            "tags": [
                "brute force",
                "dp",
                "implementation",
                "two pointers"
            ]
        },
        "1771:D": {
            "contestId": 1771,
            "index": "D",
            "name": "Hossam and (sub-)palindromic tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "dp",
                "strings",
                "trees"
            ]
        },
        "609:D": {
            "contestId": 609,
            "index": "D",
            "name": "Gadgets for dollars and pounds",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "greedy",
                "two pointers"
            ]
        },
        "721:D": {
            "contestId": 721,
            "index": "D",
            "name": "Maxim and Array",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        "911:E": {
            "contestId": 911,
            "index": "E",
            "name": "Stack Sorting",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "572:D": {
            "contestId": 572,
            "index": "D",
            "name": "Minimization",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "dp",
                "sortings"
            ]
        },
        "755:D": {
            "contestId": 755,
            "index": "D",
            "name": "PolandBall and Polygon",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        "611:D": {
            "contestId": 611,
            "index": "D",
            "name": "New Year and Ancient Prophecy",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dp",
                "hashing",
                "strings"
            ]
        },
        "749:D": {
            "contestId": 749,
            "index": "D",
            "name": "Leaving Auction",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        "1234:E": {
            "contestId": 1234,
            "index": "E",
            "name": "Special Permutations",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        "353:D": {
            "contestId": 353,
            "index": "D",
            "name": "Queue",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        "265:E": {
            "contestId": 265,
            "index": "E",
            "name": "Choosing Balls",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "schedules",
                "sortings"
            ]
        },
        "669:E": {
            "contestId": 669,
            "index": "E",
            "name": "Little Artem and Time Machine",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        "629:C": {
            "contestId": 629,
            "index": "C",
            "name": "Famil Door and Brackets",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "dp",
                "strings"
            ]
        },
        "758:D": {
            "contestId": 758,
            "index": "D",
            "name": "Ability To Convert",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "math",
                "strings"
            ]
        },
        "400:D": {
            "contestId": 400,
            "index": "D",
            "name": "Dima and Bacteria",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dsu",
                "graphs",
                "shortest paths"
            ]
        },
        "515:D": {
            "contestId": 515,
            "index": "D",
            "name": "Drazil and Tiles",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1009:E": {
            "contestId": 1009,
            "index": "E",
            "name": "Intercity Travelling",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "combinatorics",
                "math",
                "probabilities"
            ]
        },
        "389:E": {
            "contestId": 389,
            "index": "E",
            "name": "Fox and Card Game",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1316:D": {
            "contestId": 1316,
            "index": "D",
            "name": "Nash Matrix",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "236:D": {
            "contestId": 236,
            "index": "D",
            "name": "Let's Play Osu!",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp",
                "math",
                "probabilities"
            ]
        },
        "1199:E": {
            "contestId": 1199,
            "index": "E",
            "name": "Matching vs  Independent Set",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        "672:D": {
            "contestId": 672,
            "index": "D",
            "name": "Robin Hood",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "greedy"
            ]
        },
        "1288:E": {
            "contestId": 1288,
            "index": "E",
            "name": "Messenger Simulator",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures"
            ]
        },
        "1230:E": {
            "contestId": 1230,
            "index": "E",
            "name": "Kamil and Making a Stream",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "math",
                "number theory",
                "trees"
            ]
        },
        "1764:E": {
            "contestId": 1764,
            "index": "E",
            "name": "Doremy's Number Line",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1764:D": {
            "contestId": 1764,
            "index": "D",
            "name": "Doremy's Pegging Game",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1758:E": {
            "contestId": 1758,
            "index": "E",
            "name": "Tick, Tock",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "1080:D": {
            "contestId": 1080,
            "index": "D",
            "name": "Olya and magical square",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        "1068:D": {
            "contestId": 1068,
            "index": "D",
            "name": "Array Without Local Maximums ",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 1900,
            "tags": [
                "dp"
            ]
        },
        "964:D": {
            "contestId": 964,
            "index": "D",
            "name": "Destruction of a Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "934:D": {
            "contestId": 934,
            "index": "D",
            "name": "A Determined Cleanup",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "math"
            ]
        },
        "1761:E": {
            "contestId": 1761,
            "index": "E",
            "name": "Make It Connected",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2400,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "matrices",
                "trees",
                "two pointers"
            ]
        },
        "1761:D": {
            "contestId": 1761,
            "index": "D",
            "name": "Carry Bit",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "1754:E": {
            "contestId": 1754,
            "index": "E",
            "name": "Wish I Knew How to Sort",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "dp",
                "probabilities",
                "probabilities"
            ]
        },
        "1759:G": {
            "contestId": 1759,
            "index": "G",
            "name": "Restore the Permutation",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        "897:D": {
            "contestId": 897,
            "index": "D",
            "name": "Ithea Plays With Chtholly",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "implementation",
                "interactive"
            ]
        },
        "862:D": {
            "contestId": 862,
            "index": "D",
            "name": "Mahmoud and Ehab and the binary string",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "binary search",
                "divide and conquer",
                "interactive"
            ]
        },
        "465:D": {
            "contestId": 465,
            "index": "D",
            "name": "Restore Cube ",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "brute force"
            ]
        },
        "1748:E": {
            "contestId": 1748,
            "index": "E",
            "name": "Yet Another Array Counting Problem",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "binary search",
                "data structures",
                "divide and conquer",
                "dp",
                "flows",
                "math",
                "trees"
            ]
        },
        "1750:E": {
            "contestId": 1750,
            "index": "E",
            "name": "Bracket Cost",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "divide and conquer",
                "dp",
                "greedy",
                "strings"
            ]
        },
        "1185:E": {
            "contestId": 1185,
            "index": "E",
            "name": "Polycarp and Snakes",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2000,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1082:E": {
            "contestId": 1082,
            "index": "E",
            "name": "Increasing Frequency",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "dp",
                "greedy"
            ]
        },
        "1104:D": {
            "contestId": 1104,
            "index": "D",
            "name": "Game with modulo",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "binary search",
                "interactive",
                "math"
            ]
        },
        "1266:D": {
            "contestId": 1266,
            "index": "D",
            "name": "Decreasing Debts",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        "900:D": {
            "contestId": 900,
            "index": "D",
            "name": "Unusual Sequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "math",
                "number theory"
            ]
        },
        "474:C": {
            "contestId": 474,
            "index": "C",
            "name": "Captain Marmot",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "brute force",
                "geometry"
            ]
        },
        "1728:E": {
            "contestId": 1728,
            "index": "E",
            "name": "Red-Black Pepper",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "brute force",
                "data structures",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "474:E": {
            "contestId": 474,
            "index": "E",
            "name": "Pillars",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2000,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "sortings",
                "trees"
            ]
        },
        "526:C": {
            "contestId": 526,
            "index": "C",
            "name": "Om Nom and Candies",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2000,
            "tags": [
                "brute force",
                "greedy",
                "math"
            ]
        },
        "447:D": {
            "contestId": 447,
            "index": "D",
            "name": "DZY Loves Modification",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "data structures",
                "greedy"
            ]
        },
        "469:C": {
            "contestId": 469,
            "index": "C",
            "name": "24 Game",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        "892:E": {
            "contestId": 892,
            "index": "E",
            "name": "Envy",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2300,
            "tags": [
                "graphs"
            ]
        },
        "892:C": {
            "contestId": 892,
            "index": "C",
            "name": "Pride",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        "892:D": {
            "contestId": 892,
            "index": "D",
            "name": "Gluttony",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "469:D": {
            "contestId": 469,
            "index": "D",
            "name": "Two Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "2-sat",
                "data structures",
                "graph matchings",
                "greedy"
            ]
        },
        "1526:D": {
            "contestId": 1526,
            "index": "D",
            "name": "Kill Anton",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "math",
                "strings"
            ]
        },
        "1743:E": {
            "contestId": 1743,
            "index": "E",
            "name": "FTL",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "dp"
            ]
        },
        "1746:D": {
            "contestId": 1746,
            "index": "D",
            "name": "Paths on the Tree",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        "231:E": {
            "contestId": 231,
            "index": "E",
            "name": "Cactus",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "854:E": {
            "contestId": 854,
            "index": "E",
            "name": "Boredom",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures"
            ]
        },
        "1099:E": {
            "contestId": 1099,
            "index": "E",
            "name": "Nice table",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "588:D": {
            "contestId": 588,
            "index": "D",
            "name": "Duff in Beach",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": []
        },
        "1841:E": {
            "contestId": 1841,
            "index": "E",
            "name": "Fill the Matrix",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "greedy",
                "math"
            ]
        },
        "1841:D": {
            "contestId": 1841,
            "index": "D",
            "name": "Pairs of Segments",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "552:E": {
            "contestId": 552,
            "index": "E",
            "name": "Vanya and Brackets",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "expression parsing",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "837:E": {
            "contestId": 837,
            "index": "E",
            "name": "Vasya's Function",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "implementation",
                "math"
            ]
        },
        "165:D": {
            "contestId": 165,
            "index": "D",
            "name": "Beard Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dsu",
                "trees"
            ]
        },
        "276:E": {
            "contestId": 276,
            "index": "E",
            "name": "Little Girl and Problem on Trees",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "graphs",
                "trees"
            ]
        },
        "520:C": {
            "contestId": 520,
            "index": "C",
            "name": "DNA Alignment",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "math",
                "strings"
            ]
        },
        "520:D": {
            "contestId": 520,
            "index": "D",
            "name": "Cubes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "games",
                "greedy",
                "implementation"
            ]
        },
        "752:E": {
            "contestId": 752,
            "index": "E",
            "name": "Santa Claus and Tangerines",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        "793:D": {
            "contestId": 793,
            "index": "D",
            "name": "Presents in Bankopolis",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        "1840:G1": {
            "contestId": 1840,
            "index": "G1",
            "name": "In Search of Truth (Easy Version)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math",
                "meet-in-the-middle",
                "probabilities"
            ]
        },
        "1840:G2": {
            "contestId": 1840,
            "index": "G2",
            "name": "In Search of Truth (Hard Version)",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math",
                "meet-in-the-middle",
                "probabilities"
            ]
        },
        "811:D": {
            "contestId": 811,
            "index": "D",
            "name": "Vladik and Favorite Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "interactive"
            ]
        },
        "1776:G": {
            "contestId": 1776,
            "index": "G",
            "name": "Another Wine Tasting Event",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "strings"
            ]
        },
        "577:D": {
            "contestId": 577,
            "index": "D",
            "name": "Invariance of Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": []
        },
        "1839:E": {
            "contestId": 1839,
            "index": "E",
            "name": "Decreasing Game",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "interactive"
            ]
        },
        "1839:D": {
            "contestId": 1839,
            "index": "D",
            "name": "Ball Sorting",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp",
                "sortings"
            ]
        },
        "703:C": {
            "contestId": 703,
            "index": "C",
            "name": "Chris and Road",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "geometry",
                "implementation"
            ]
        },
        "1821:E": {
            "contestId": 1821,
            "index": "E",
            "name": "Rearrange Brackets",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        "1831:E": {
            "contestId": 1831,
            "index": "E",
            "name": "Hyperregular Bracket Strings",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "data structures",
                "hashing",
                "math",
                "number theory",
                "sortings",
                "two pointers"
            ]
        },
        "1831:D": {
            "contestId": 1831,
            "index": "D",
            "name": "The BOSS Can Count Pairs",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "math"
            ]
        },
        "270:E": {
            "contestId": 270,
            "index": "E",
            "name": "Flawed Flow",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "sortings"
            ]
        },
        "489:F": {
            "contestId": 489,
            "index": "F",
            "name": "Special Matrices",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        "828:E": {
            "contestId": 828,
            "index": "E",
            "name": "DNA Evolution",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "strings"
            ]
        },
        "732:E": {
            "contestId": 732,
            "index": "E",
            "name": "Sockets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1159:E": {
            "contestId": 1159,
            "index": "E",
            "name": "Permutation recovery",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        "1176:F": {
            "contestId": 1176,
            "index": "F",
            "name": "Destroy it!",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "implementation",
                "sortings"
            ]
        },
        "465:E": {
            "contestId": 465,
            "index": "E",
            "name": "Substitutes in Number",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        "551:D": {
            "contestId": 551,
            "index": "D",
            "name": "GukiZ and Binary Operations",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "implementation",
                "math",
                "matrices",
                "number theory"
            ]
        },
        "591:D": {
            "contestId": 591,
            "index": "D",
            "name": "Chip 'n Dale Rescue Rangers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "geometry"
            ]
        },
        "1183:F": {
            "contestId": 1183,
            "index": "F",
            "name": "Topforces Strikes Back",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "math",
                "sortings"
            ]
        },
        "1808:D": {
            "contestId": 1808,
            "index": "D",
            "name": "Petya, Petya, Petr, and Palindromes",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "two pointers"
            ]
        },
        "1525:E": {
            "contestId": 1525,
            "index": "E",
            "name": "Assimilation IV",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "probabilities",
                "two pointers"
            ]
        },
        "1833:F": {
            "contestId": 1833,
            "index": "F",
            "name": "Ira and Flamenco",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "data structures",
                "implementation",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1833:G": {
            "contestId": 1833,
            "index": "G",
            "name": "Ksyusha and Chinchilla",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "dsu",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        "1185:F": {
            "contestId": 1185,
            "index": "F",
            "name": "Two Pizzas",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "brute force"
            ]
        },
        "894:E": {
            "contestId": 894,
            "index": "E",
            "name": "Ralph and Mushrooms",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dp",
                "graphs"
            ]
        },
        "1828:E": {
            "contestId": 1828,
            "index": "E",
            "name": "Palindrome Partition",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2600,
            "tags": [
                "data structures",
                "dp",
                "hashing",
                "strings"
            ]
        },
        "1832:D1": {
            "contestId": 1832,
            "index": "D1",
            "name": "Red-Blue Operations (Easy Version)",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1832:D2": {
            "contestId": 1832,
            "index": "D2",
            "name": "Red-Blue Operations (Hard Version)",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1828:D1": {
            "contestId": 1828,
            "index": "D1",
            "name": "Range Sorting (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "dp",
                "dsu",
                "greedy"
            ]
        },
        "1828:D2": {
            "contestId": 1828,
            "index": "D2",
            "name": "Range Sorting (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy"
            ]
        },
        "1832:E": {
            "contestId": 1832,
            "index": "E",
            "name": "Combinatorics Problem",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "combinatorics",
                "dp"
            ]
        },
        "146:E": {
            "contestId": 146,
            "index": "E",
            "name": "Lucky Subsequence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        "540:E": {
            "contestId": 540,
            "index": "E",
            "name": "Infinite Inversions",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "implementation",
                "sortings",
                "trees"
            ]
        },
        "549:H": {
            "contestId": 549,
            "index": "H",
            "name": "Degenerate Matrix",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2100,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "752:D": {
            "contestId": 752,
            "index": "D",
            "name": "Santa Claus and a Palindrome",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "greedy",
                "hashing",
                "strings"
            ]
        },
        "1027:E": {
            "contestId": 1027,
            "index": "E",
            "name": "Inverse Coloring",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "333:D": {
            "contestId": 333,
            "index": "D",
            "name": "Characteristics of Rectangles",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "implementation",
                "sortings"
            ]
        },
        "912:D": {
            "contestId": 912,
            "index": "D",
            "name": "Fishes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "graphs",
                "greedy",
                "probabilities",
                "shortest paths"
            ]
        },
        "876:E": {
            "contestId": 876,
            "index": "E",
            "name": "National Property",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "2-sat",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "1826:E": {
            "contestId": 1826,
            "index": "E",
            "name": "Walk the Runway",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "brute force",
                "data structures",
                "dp",
                "graphs",
                "implementation",
                "sortings"
            ]
        },
        "1818:E": {
            "contestId": 1818,
            "index": "E",
            "name": "Similar Polynomials",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2400,
            "tags": [
                "math"
            ]
        },
        "1818:D": {
            "contestId": 1818,
            "index": "D",
            "name": "Fish Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "1823:E": {
            "contestId": 1823,
            "index": "E",
            "name": "Removing Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2500,
            "tags": [
                "brute force",
                "dp",
                "games",
                "graphs",
                "math"
            ]
        },
        "1121:F": {
            "contestId": 1121,
            "index": "F",
            "name": "Compress String",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "strings"
            ]
        },
        "466:E": {
            "contestId": 466,
            "index": "E",
            "name": "Information Graph",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        "229:D": {
            "contestId": 229,
            "index": "D",
            "name": "Towers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2100,
            "tags": [
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "1822:G2": {
            "contestId": 1822,
            "index": "G2",
            "name": "Magic Triples (Hard Version)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "data structures",
                "math",
                "number theory"
            ]
        },
        "776:E": {
            "contestId": 776,
            "index": "E",
            "name": "The Holmes Children",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "math",
                "number theory"
            ]
        },
        "1806:E": {
            "contestId": 1806,
            "index": "E",
            "name": "Tree Master",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2200,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "trees"
            ]
        },
        "631:D": {
            "contestId": 631,
            "index": "D",
            "name": "Messenger",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "hashing",
                "implementation",
                "string suffix structures",
                "strings"
            ]
        },
        "990:E": {
            "contestId": 990,
            "index": "E",
            "name": "Post Lamps",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "greedy"
            ]
        },
        "602:D": {
            "contestId": 602,
            "index": "D",
            "name": "Lipshitz Sequence",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "math"
            ]
        },
        "851:D": {
            "contestId": 851,
            "index": "D",
            "name": "Arpa and a list of numbers",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "implementation"
            ]
        },
        "572:C": {
            "contestId": 572,
            "index": "C",
            "name": "Lengthening Sticks",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "brute force",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "349:D": {
            "contestId": 349,
            "index": "D",
            "name": "Apple Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "number theory",
                "trees"
            ]
        },
        "1266:E": {
            "contestId": 1266,
            "index": "E",
            "name": "Spaceship Solitaire",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1108:E1": {
            "contestId": 1108,
            "index": "E1",
            "name": "Array and Segments (Easy version)",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "greedy",
                "implementation"
            ]
        },
        "1108:E2": {
            "contestId": 1108,
            "index": "E2",
            "name": "Array and Segments (Hard version)",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "431:D": {
            "contestId": 431,
            "index": "D",
            "name": "Random Task",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1598:E": {
            "contestId": 1598,
            "index": "E",
            "name": "Staircases",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "combinatorics",
                "data structures",
                "dfs and similar",
                "dp",
                "implementation",
                "math"
            ]
        },
        "415:E": {
            "contestId": 415,
            "index": "E",
            "name": "Mashmokh and Reverse Operation",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "divide and conquer",
                "sortings"
            ]
        },
        "1152:D": {
            "contestId": 1152,
            "index": "D",
            "name": "Neko and Aki's Prank",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dp",
                "greedy",
                "trees"
            ]
        },
        "1816:F": {
            "contestId": 1816,
            "index": "F",
            "name": "XOR Counting",
            "type": "PROGRAMMING",
            "points": 3250,
            "rating": 2600,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1816:E": {
            "contestId": 1816,
            "index": "E",
            "name": "Between",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        "1816:D": {
            "contestId": 1816,
            "index": "D",
            "name": "Sum Graph",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation",
                "interactive",
                "shortest paths",
                "trees"
            ]
        },
        "1797:E": {
            "contestId": 1797,
            "index": "E",
            "name": "Li Hua and Array",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "brute force",
                "data structures",
                "dsu",
                "math",
                "number theory",
                "two pointers"
            ]
        },
        "1797:D": {
            "contestId": 1797,
            "index": "D",
            "name": "Li Hua and Tree",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1900,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "dp",
                "implementation",
                "trees"
            ]
        },
        "754:D": {
            "contestId": 754,
            "index": "D",
            "name": "Fedor and coupons",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1213:F": {
            "contestId": 1213,
            "index": "F",
            "name": "Unstable String Sort",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "1814:D": {
            "contestId": 1814,
            "index": "D",
            "name": "Balancing Weapons",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "math",
                "two pointers"
            ]
        },
        "1106:E": {
            "contestId": 1106,
            "index": "E",
            "name": "Lunar New Year and Red Envelopes",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "976:E": {
            "contestId": 976,
            "index": "E",
            "name": "Well played!",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "greedy",
                "sortings"
            ]
        },
        "1811:F": {
            "contestId": 1811,
            "index": "F",
            "name": "Is It Flower?",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "1805:E": {
            "contestId": 1805,
            "index": "E",
            "name": "There Should Be a Lot of Maximums",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "dp",
                "trees",
                "two pointers"
            ]
        },
        "1810:E": {
            "contestId": 1810,
            "index": "E",
            "name": "Monsters",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        "789:D": {
            "contestId": 789,
            "index": "D",
            "name": "Weird journey",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        "985:D": {
            "contestId": 985,
            "index": "D",
            "name": "Sand Fortress",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        "1202:C": {
            "contestId": 1202,
            "index": "C",
            "name": "You Are Given a WASD-string...",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "math",
                "strings"
            ]
        },
        "1167:E": {
            "contestId": 1167,
            "index": "E",
            "name": "Range Deleting",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "two pointers"
            ]
        },
        "762:C": {
            "contestId": 762,
            "index": "C",
            "name": "Two strings",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "hashing",
                "strings",
                "two pointers"
            ]
        },
        "525:E": {
            "contestId": 525,
            "index": "E",
            "name": "Anya and Cubes",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "dp",
                "math",
                "meet-in-the-middle"
            ]
        },
        "129:D": {
            "contestId": 129,
            "index": "D",
            "name": "String",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "implementation",
                "string suffix structures",
                "strings"
            ]
        },
        "1108:F": {
            "contestId": 1108,
            "index": "F",
            "name": "MST Unification",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        "1798:E": {
            "contestId": 1798,
            "index": "E",
            "name": "Multitest Generator",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "brute force",
                "dp"
            ]
        },
        "1511:E": {
            "contestId": 1511,
            "index": "E",
            "name": "Colorings and Dominoes",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1154:F": {
            "contestId": 1154,
            "index": "F",
            "name": "Shovels Shop",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1241:E": {
            "contestId": 1241,
            "index": "E",
            "name": "Paint the Tree",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "768:E": {
            "contestId": 768,
            "index": "E",
            "name": "Game of Stones",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "dp",
                "games"
            ]
        },
        "1263:E": {
            "contestId": 1263,
            "index": "E",
            "name": "Editor",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "507:E": {
            "contestId": 507,
            "index": "E",
            "name": "Breaking Good",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        "104:E": {
            "contestId": 104,
            "index": "E",
            "name": "Time to Raid Cowavans",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": []
        },
        "764:D": {
            "contestId": 764,
            "index": "D",
            "name": "Timofey and rectangles",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "geometry"
            ]
        },
        "665:E": {
            "contestId": 665,
            "index": "E",
            "name": "Beautiful Subarrays",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "divide and conquer",
                "strings",
                "trees"
            ]
        },
        "1166:E": {
            "contestId": 1166,
            "index": "E",
            "name": "The LCMs Must be Large",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        "1484:E": {
            "contestId": 1484,
            "index": "E",
            "name": "Skyline Photo",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "766:E": {
            "contestId": 766,
            "index": "E",
            "name": "Mahmoud and a xor trip",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        "466:D": {
            "contestId": 466,
            "index": "D",
            "name": "Increase Sequence",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        "1804:E": {
            "contestId": 1804,
            "index": "E",
            "name": "Routing",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "brute force",
                "dfs and similar",
                "dp",
                "graphs"
            ]
        },
        "1195:E": {
            "contestId": 1195,
            "index": "E",
            "name": "OpenStreetMap",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "data structures",
                "two pointers"
            ]
        },
        "689:D": {
            "contestId": 689,
            "index": "D",
            "name": "Friends and Subsequences",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        "1255:E1": {
            "contestId": 1255,
            "index": "E1",
            "name": "Send Boxes to Alice (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "1255:E2": {
            "contestId": 1255,
            "index": "E2",
            "name": "Send Boxes to Alice (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2100,
            "tags": [
                "greedy",
                "math",
                "number theory"
            ]
        },
        "791:D": {
            "contestId": 791,
            "index": "D",
            "name": "Bear and Tree Jumps",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "577:E": {
            "contestId": 577,
            "index": "E",
            "name": "Points on Plane",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "constructive algorithms"
            ]
        },
        "1265:E": {
            "contestId": 1265,
            "index": "E",
            "name": "Beautiful Mirrors",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp",
                "math",
                "probabilities"
            ]
        },
        "1204:D1": {
            "contestId": 1204,
            "index": "D1",
            "name": "Kirk and a Binary String (easy version)",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2000,
            "tags": [
                "brute force",
                "greedy",
                "strings"
            ]
        },
        "1204:D2": {
            "contestId": 1204,
            "index": "D2",
            "name": "Kirk and a Binary String (hard version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2100,
            "tags": [
                "data structures",
                "greedy",
                "math",
                "strings"
            ]
        },
        "1800:G": {
            "contestId": 1800,
            "index": "G",
            "name": "Symmetree",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dfs and similar",
                "hashing",
                "implementation",
                "trees"
            ]
        },
        "1800:F": {
            "contestId": 1800,
            "index": "F",
            "name": "Dasha and Nightmares",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "bitmasks",
                "hashing",
                "meet-in-the-middle",
                "strings"
            ]
        },
        "1606:E": {
            "contestId": 1606,
            "index": "E",
            "name": "Arena",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1796:E": {
            "contestId": 1796,
            "index": "E",
            "name": "Colored Subgraphs",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "dfs and similar",
                "dp",
                "games",
                "greedy",
                "trees"
            ]
        },
        "1796:D": {
            "contestId": 1796,
            "index": "D",
            "name": "Maximum Subarray",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "1799:F": {
            "contestId": 1799,
            "index": "F",
            "name": "Halve or Subtract",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2700,
            "tags": [
                "binary search",
                "brute force",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1799:E": {
            "contestId": 1799,
            "index": "E",
            "name": "City Union",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "geometry",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1799:D1": {
            "contestId": 1799,
            "index": "D1",
            "name": "Hot Start Up (easy version)",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "dp"
            ]
        },
        "1799:D2": {
            "contestId": 1799,
            "index": "D2",
            "name": "Hot Start Up (hard version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2100,
            "tags": [
                "data structures",
                "dp"
            ]
        },
        "1789:D": {
            "contestId": 1789,
            "index": "D",
            "name": "Serval and Shift-Shift-Shift",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        "937:D": {
            "contestId": 937,
            "index": "D",
            "name": "Sleepy Game",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "games",
                "graphs"
            ]
        },
        "1000:B": {
            "contestId": 1000,
            "index": "B",
            "name": "Light It Up",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy"
            ]
        },
        "1000:E": {
            "contestId": 1000,
            "index": "E",
            "name": "We Need More Bosses",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        "632:D": {
            "contestId": 632,
            "index": "D",
            "name": "Longest Subsequence",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "499:E": {
            "contestId": 499,
            "index": "E",
            "name": "Array and Operations",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": []
        },
        "546:E": {
            "contestId": 546,
            "index": "E",
            "name": "Soldier and Traveling",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "flows",
                "graphs",
                "math"
            ]
        },
        "985:E": {
            "contestId": 985,
            "index": "E",
            "name": "Pencils and Boxes",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "734:E": {
            "contestId": 734,
            "index": "E",
            "name": "Anton and Tree",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "1300:E": {
            "contestId": 1300,
            "index": "E",
            "name": "Water Balance",
            "type": "PROGRAMMING",
            "points": 2250,
            "rating": 2100,
            "tags": [
                "data structures",
                "geometry",
                "greedy"
            ]
        },
        "675:C": {
            "contestId": 675,
            "index": "C",
            "name": "Money Transfers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1278:D": {
            "contestId": 1278,
            "index": "D",
            "name": "Segment Tree",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        "1332:E": {
            "contestId": 1332,
            "index": "E",
            "name": "Height All the Same",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "matrices"
            ]
        },
        "1795:E": {
            "contestId": 1795,
            "index": "E",
            "name": "Explosions?",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1117:D": {
            "contestId": 1117,
            "index": "D",
            "name": "Magic Gems",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "math",
                "matrices"
            ]
        },
        "1207:F": {
            "contestId": 1207,
            "index": "F",
            "name": "Remainder Problem",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "data structures",
                "implementation"
            ]
        },
        "486:D": {
            "contestId": 486,
            "index": "D",
            "name": "Valid Sets",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        "837:D": {
            "contestId": 837,
            "index": "D",
            "name": "Round Subset",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "math"
            ]
        },
        "544:D": {
            "contestId": 544,
            "index": "D",
            "name": "Destroying Roads",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        "320:E": {
            "contestId": 320,
            "index": "E",
            "name": "Kalila and Dimna in the Logging Industry",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2100,
            "tags": [
                "dp"
            ]
        },
        "702:E": {
            "contestId": 702,
            "index": "E",
            "name": "Analysis of Pathes in Functional Graph",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "data structures",
                "graphs"
            ]
        },
        "620:E": {
            "contestId": 620,
            "index": "E",
            "name": "New Year Tree",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "bitmasks",
                "data structures",
                "trees"
            ]
        },
        "130:A": {
            "contestId": 130,
            "index": "A",
            "name": "Hexagonal numbers",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "131:B": {
            "contestId": 131,
            "index": "B",
            "name": "Opposites Attract",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "978:G": {
            "contestId": 978,
            "index": "G",
            "name": "Petya's Exams",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1641:D": {
            "contestId": 1641,
            "index": "D",
            "name": "Two Arrays",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "brute force",
                "combinatorics",
                "greedy",
                "hashing",
                "math",
                "two pointers"
            ]
        },
        "1132:F": {
            "contestId": 1132,
            "index": "F",
            "name": "Clear the String",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dp"
            ]
        },
        "540:D": {
            "contestId": 540,
            "index": "D",
            "name": "Bad Luck Island",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "dp",
                "probabilities"
            ]
        },
        "5:C": {
            "contestId": 5,
            "index": "C",
            "name": "Longest Regular Bracket Sequence",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        "1157:D": {
            "contestId": 1157,
            "index": "D",
            "name": "N Problems During K Days",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "909:C": {
            "contestId": 909,
            "index": "C",
            "name": "Python Indentation",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1800,
            "tags": [
                "dp"
            ]
        },
        "873:B": {
            "contestId": 873,
            "index": "B",
            "name": "Balanced Substring",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "103960:F": {
            "contestId": 103960,
            "index": "F",
            "name": "Multidimensional Hangman",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103960:D": {
            "contestId": 103960,
            "index": "D",
            "name": "Displacing Particles",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103960:E": {
            "contestId": 103960,
            "index": "E",
            "name": "Eliminating Ballons",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103960:A": {
            "contestId": 103960,
            "index": "A",
            "name": "Finding Maximal Non-Trivial Monotones",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103960:I": {
            "contestId": 103960,
            "index": "I",
            "name": "Intercepting Information",
            "type": "PROGRAMMING",
            "tags": []
        },
        "598:B": {
            "contestId": 598,
            "index": "B",
            "name": "Queries on a String",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "1364:C": {
            "contestId": 1364,
            "index": "C",
            "name": "Ehab and Prefix MEXs",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        "690:A1": {
            "contestId": 690,
            "index": "A1",
            "name": "Collective Mindsets (easy)",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": []
        },
        "618:A": {
            "contestId": 618,
            "index": "A",
            "name": "Slime Combining",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "102961:M": {
            "contestId": 102961,
            "index": "M",
            "name": "Playlist",
            "type": "PROGRAMMING",
            "tags": []
        },
        "159:C": {
            "contestId": 159,
            "index": "C",
            "name": "String Manipulation 1.0",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "*special",
                "binary search",
                "brute force",
                "data structures",
                "strings"
            ]
        },
        "518:A": {
            "contestId": 518,
            "index": "A",
            "name": "Vitaly and Strings",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        "1175:B": {
            "contestId": 1175,
            "index": "B",
            "name": "Catch Overflow!",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "expression parsing",
                "implementation"
            ]
        },
        "undefined:486": {
            "problemsetName": "acmsguru",
            "index": "486",
            "name": "Bulls and Cows",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1073:B": {
            "contestId": 1073,
            "index": "B",
            "name": "Vasya and Books",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "1136:B": {
            "contestId": 1136,
            "index": "B",
            "name": "Nastya Is Playing Computer Games",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "679:A": {
            "contestId": 679,
            "index": "A",
            "name": "Bear and Prime 100",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        "101744:A": {
            "contestId": 101744,
            "index": "A",
            "name": "MaratonIME helps Pablito",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104147:F": {
            "contestId": 104147,
            "index": "F",
            "name": "Nesr El Sieve",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104147:B": {
            "contestId": 104147,
            "index": "B",
            "name": "I'll call him Hanya",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104147:K": {
            "contestId": 104147,
            "index": "K",
            "name": "Hobz is a good guy",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104147:A": {
            "contestId": 104147,
            "index": "A",
            "name": "Round 1",
            "type": "PROGRAMMING",
            "tags": []
        },
        "584:D": {
            "contestId": 584,
            "index": "D",
            "name": "Dima and Lisa",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "104157:A": {
            "contestId": 104157,
            "index": "A",
            "name": "Printing Papers",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104012:A": {
            "contestId": 104012,
            "index": "A",
            "name": "Absolutely Flat",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104168:D1": {
            "contestId": 104168,
            "index": "D1",
            "name": "Looks Divisible To Me",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104168:D2": {
            "contestId": 104168,
            "index": "D2",
            "name": "Nested Sum (Hard Version) ",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104168:C3": {
            "contestId": 104168,
            "index": "C3",
            "name": "Nested Sum (Easy Version)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "913:B": {
            "contestId": 913,
            "index": "B",
            "name": "Christmas Spruce",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "implementation",
                "trees"
            ]
        },
        "522:A": {
            "contestId": 522,
            "index": "A",
            "name": "Reposts",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "*special",
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "1140:A": {
            "contestId": 1140,
            "index": "A",
            "name": "Detective Book",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "implementation"
            ]
        },
        "102035:M": {
            "contestId": 102035,
            "index": "M",
            "name": "Ahmad Jaber Rectangles",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1003:C": {
            "contestId": 1003,
            "index": "C",
            "name": "Intense Heat",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "322:B": {
            "contestId": 322,
            "index": "B",
            "name": "Ciel and Flowers",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "combinatorics",
                "math"
            ]
        },
        "441:B": {
            "contestId": 441,
            "index": "B",
            "name": "Valera and Fruits",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "272:C": {
            "contestId": 272,
            "index": "C",
            "name": "Dima and Staircase",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "460:B": {
            "contestId": 460,
            "index": "B",
            "name": "Little Dima and Equation",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "315:B": {
            "contestId": 315,
            "index": "B",
            "name": "Sereja and Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "1732:C1": {
            "contestId": 1732,
            "index": "C1",
            "name": "Sheikh (Easy version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "binary search",
                "bitmasks",
                "greedy",
                "two pointers"
            ]
        },
        "222:B": {
            "contestId": 222,
            "index": "B",
            "name": "Cosmic Tables",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "data structures",
                "implementation"
            ]
        },
        "453:A": {
            "contestId": 453,
            "index": "A",
            "name": "Little Pony and Expected Maximum",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "probabilities"
            ]
        },
        "1718:B": {
            "contestId": 1718,
            "index": "B",
            "name": "Fibonacci Strings",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2000,
            "tags": [
                "greedy",
                "implementation",
                "math",
                "number theory"
            ]
        },
        "574:A": {
            "contestId": 574,
            "index": "A",
            "name": "Bear and Elections",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1678:E": {
            "contestId": 1678,
            "index": "E",
            "name": "Tokitsukaze and Two Colorful Tapes",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "greedy",
                "math"
            ]
        },
        "102966:A": {
            "contestId": 102966,
            "index": "A",
            "name": "Atsa's Checkers Board",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1102:E": {
            "contestId": 1102,
            "index": "E",
            "name": "Monotonic Renumeration",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "combinatorics",
                "sortings"
            ]
        },
        "1102:D": {
            "contestId": 1102,
            "index": "D",
            "name": "Balanced Ternary String",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "706:C": {
            "contestId": 706,
            "index": "C",
            "name": "Hard problem",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "dp",
                "strings"
            ]
        },
        "103886:A": {
            "contestId": 103886,
            "index": "A",
            "name": "Cereal Sort",
            "type": "PROGRAMMING",
            "tags": []
        },
        "290:B": {
            "contestId": 290,
            "index": "B",
            "name": "QR code",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "961:A": {
            "contestId": 961,
            "index": "A",
            "name": "Tetris",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "1301:C": {
            "contestId": 1301,
            "index": "C",
            "name": "Ayoub's function",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1700,
            "tags": [
                "binary search",
                "combinatorics",
                "greedy",
                "math",
                "strings"
            ]
        },
        "902:A": {
            "contestId": 902,
            "index": "A",
            "name": "Visiting a Friend",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "1628:B": {
            "contestId": 1628,
            "index": "B",
            "name": "Peculiar Movie Preferences",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1700,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "1504:C": {
            "contestId": 1504,
            "index": "C",
            "name": "Balance the Bits",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        "548:B": {
            "contestId": 548,
            "index": "B",
            "name": "Mike and Fun",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "913:C": {
            "contestId": 913,
            "index": "C",
            "name": "Party Lemonade",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "dp",
                "greedy"
            ]
        },
        "991:D": {
            "contestId": 991,
            "index": "D",
            "name": "Bishwock",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1707:A": {
            "contestId": 1707,
            "index": "A",
            "name": "Doremy's IQ",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "701:C": {
            "contestId": 701,
            "index": "C",
            "name": "They Are Everywhere",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "binary search",
                "strings",
                "two pointers"
            ]
        },
        "1539:D": {
            "contestId": 1539,
            "index": "D",
            "name": "PriceFixed",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        "1566:D2": {
            "contestId": 1566,
            "index": "D2",
            "name": "Seating Arrangements (hard version) ",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        "1633:D": {
            "contestId": 1633,
            "index": "D",
            "name": "Make Them Equal",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dp",
                "greedy"
            ]
        },
        "1562:C": {
            "contestId": 1562,
            "index": "C",
            "name": "Rings",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        "1592:C": {
            "contestId": 1592,
            "index": "C",
            "name": "Bakry and Partitioning",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "1593:E": {
            "contestId": 1593,
            "index": "E",
            "name": "Gardener and Tree",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "data structures",
                "dfs and similar",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        "151:C": {
            "contestId": 151,
            "index": "C",
            "name": "Win or Freeze",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "games",
                "greedy",
                "math",
                "number theory"
            ]
        },
        "908:C": {
            "contestId": 908,
            "index": "C",
            "name": "New Year and Curling",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "brute force",
                "geometry",
                "implementation",
                "math"
            ]
        },
        "1738:F": {
            "contestId": 1738,
            "index": "F",
            "name": "Connectivity Addicts",
            "type": "PROGRAMMING",
            "points": 2750,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "interactive",
                "shortest paths",
                "trees"
            ]
        },
        "1738:G": {
            "contestId": 1738,
            "index": "G",
            "name": "Anti-Increasing Addicts",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "math"
            ]
        },
        "1249:F": {
            "contestId": 1249,
            "index": "F",
            "name": "Maximum Weight Subset",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dp",
                "trees"
            ]
        },
        "1681:F": {
            "contestId": 1681,
            "index": "F",
            "name": "Unique Occurrences",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "dfs and similar",
                "divide and conquer",
                "dp",
                "dsu",
                "trees"
            ]
        },
        "621:E": {
            "contestId": 621,
            "index": "E",
            "name": "Wet Shark and Blocks",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 2000,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        "1385:D": {
            "contestId": 1385,
            "index": "D",
            "name": "a-Good String",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "divide and conquer",
                "dp",
                "implementation"
            ]
        },
        "441:C": {
            "contestId": 441,
            "index": "C",
            "name": "Valera and Tubes ",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "implementation"
            ]
        },
        "448:D": {
            "contestId": 448,
            "index": "D",
            "name": "Multiplication Table",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "brute force"
            ]
        },
        "1328:D": {
            "contestId": 1328,
            "index": "D",
            "name": "Carousel",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "greedy",
                "math"
            ]
        },
        "1270:C": {
            "contestId": 1270,
            "index": "C",
            "name": "Make Good",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        "1339:C": {
            "contestId": 1339,
            "index": "C",
            "name": "Powered Addition",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "greedy"
            ]
        },
        "1478:C": {
            "contestId": 1478,
            "index": "C",
            "name": "Nezzar and Symmetric Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "implementation",
                "math",
                "sortings"
            ]
        },
        "1516:C": {
            "contestId": 1516,
            "index": "C",
            "name": "Baby Ehab Partitions Again",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        "1513:C": {
            "contestId": 1513,
            "index": "C",
            "name": "Add One",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "dp",
                "matrices"
            ]
        },
        "1358:C": {
            "contestId": 1358,
            "index": "C",
            "name": "Celex Update",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "math"
            ]
        },
        "1400:C": {
            "contestId": 1400,
            "index": "C",
            "name": "Binary String Reconstruction",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "2-sat",
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        "1670:C": {
            "contestId": 1670,
            "index": "C",
            "name": "Where is the Pizza?",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 1400,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "implementation",
                "math"
            ]
        },
        "1178:A": {
            "contestId": 1178,
            "index": "A",
            "name": "Prime Minister",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "greedy"
            ]
        },
        "1840:F": {
            "contestId": 1840,
            "index": "F",
            "name": "Railguns",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "graphs"
            ]
        },
        "1840:E": {
            "contestId": 1840,
            "index": "E",
            "name": "Character Blocking",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "hashing",
                "implementation"
            ]
        },
        "1830:A": {
            "contestId": 1830,
            "index": "A",
            "name": "Copil Copac Draws Trees",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "1837:F": {
            "contestId": 1837,
            "index": "F",
            "name": "Editorial for Two",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1837:E": {
            "contestId": 1837,
            "index": "E",
            "name": "Playoff Fixing",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "combinatorics",
                "trees"
            ]
        },
        "1827:B2": {
            "contestId": 1827,
            "index": "B2",
            "name": "Range Sorting (Hard Version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy"
            ]
        },
        "1827:B1": {
            "contestId": 1827,
            "index": "B1",
            "name": "Range Sorting (Easy Version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2000,
            "tags": [
                "binary search",
                "dp",
                "dsu",
                "greedy",
                "trees",
                "two pointers"
            ]
        },
        "1824:B2": {
            "contestId": 1824,
            "index": "B2",
            "name": "LuoTianyi and the Floating Islands (Hard Version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "math",
                "probabilities",
                "trees"
            ]
        },
        "1824:B1": {
            "contestId": 1824,
            "index": "B1",
            "name": "LuoTianyi and the Floating Islands (Easy Version)",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1800,
            "tags": [
                "combinatorics",
                "math",
                "probabilities",
                "trees"
            ]
        },
        "1825:D1": {
            "contestId": 1825,
            "index": "D1",
            "name": "LuoTianyi and the Floating Islands (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "combinatorics",
                "dp",
                "math",
                "trees"
            ]
        },
        "1825:D2": {
            "contestId": 1825,
            "index": "D2",
            "name": "LuoTianyi and the Floating Islands (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "dfs and similar",
                "math",
                "trees"
            ]
        },
        "1829:H": {
            "contestId": 1829,
            "index": "H",
            "name": "Don't Blame Me",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "bitmasks",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1817:B": {
            "contestId": 1817,
            "index": "B",
            "name": "Fish Graph",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        "1520:F2": {
            "contestId": 1520,
            "index": "F2",
            "name": "Guess the K-th Zero (Hard version)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "interactive"
            ]
        },
        "1729:G": {
            "contestId": 1729,
            "index": "G",
            "name": "Cut Substrings",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "hashing",
                "strings",
                "two pointers"
            ]
        },
        "1311:E": {
            "contestId": 1311,
            "index": "E",
            "name": "Construct the Binary Tree",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "trees"
            ]
        },
        "1311:D": {
            "contestId": 1311,
            "index": "D",
            "name": "Three Integers",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "1294:F": {
            "contestId": 1294,
            "index": "F",
            "name": "Three Paths on a Tree",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        "1294:E": {
            "contestId": 1294,
            "index": "E",
            "name": "Obtain a Permutation",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1294:D": {
            "contestId": 1294,
            "index": "D",
            "name": "MEX maximizing",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "math"
            ]
        },
        "1324:F": {
            "contestId": 1324,
            "index": "F",
            "name": "Maximum White Subtree",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "1328:F": {
            "contestId": 1328,
            "index": "F",
            "name": "Make k Equal",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "greedy"
            ]
        },
        "1335:F": {
            "contestId": 1335,
            "index": "F",
            "name": "Robots on a Grid",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "data structures",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "matrices"
            ]
        },
        "1335:E1": {
            "contestId": 1335,
            "index": "E1",
            "name": "Three Blocks Palindrome (easy version)",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        "1335:E2": {
            "contestId": 1335,
            "index": "E2",
            "name": "Three Blocks Palindrome (hard version)",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        "1343:F": {
            "contestId": 1343,
            "index": "F",
            "name": "Restore the Permutation by Sorted Segments",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        "1343:E": {
            "contestId": 1343,
            "index": "E",
            "name": "Weights Distributing",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "graphs",
                "greedy",
                "shortest paths",
                "sortings"
            ]
        },
        "1360:F": {
            "contestId": 1360,
            "index": "F",
            "name": "Spy-string",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp",
                "hashing",
                "strings"
            ]
        },
        "1360:G": {
            "contestId": 1360,
            "index": "G",
            "name": "A/B Matrix",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1353:E": {
            "contestId": 1353,
            "index": "E",
            "name": "K-periodic Garland",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1819:B": {
            "contestId": 1819,
            "index": "B",
            "name": "The Butcher",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1900,
            "tags": [
                "geometry",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        "1820:D": {
            "contestId": 1820,
            "index": "D",
            "name": "The Butcher",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "brute force",
                "data structures",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        "1367:F2": {
            "contestId": 1367,
            "index": "F2",
            "name": "Flying Sort (Hard Version)",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        "1367:F1": {
            "contestId": 1367,
            "index": "F1",
            "name": "Flying Sort (Easy Version)",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        "1367:E": {
            "contestId": 1367,
            "index": "E",
            "name": "Necklace Assembly",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "number theory"
            ]
        },
        "1367:D": {
            "contestId": 1367,
            "index": "D",
            "name": "Task On The Board",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        "1815:B": {
            "contestId": 1815,
            "index": "B",
            "name": "Sum Graph",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "implementation",
                "interactive",
                "shortest paths",
                "trees"
            ]
        },
        "1374:F": {
            "contestId": 1374,
            "index": "F",
            "name": "Cyclic Shifts Sorting",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        "1374:E1": {
            "contestId": 1374,
            "index": "E1",
            "name": "Reading Books (easy version)",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1814:E": {
            "contestId": 1814,
            "index": "E",
            "name": "Chain Chips",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "matrices"
            ]
        },
        "1812:H": {
            "contestId": 1812,
            "index": "H",
            "name": "Expected Twist",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "interactive"
            ]
        },
        "1811:G1": {
            "contestId": 1811,
            "index": "G1",
            "name": "Vlad and the Nice Paths (easy version)",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1811:G2": {
            "contestId": 1811,
            "index": "G2",
            "name": "Vlad and the Nice Paths (hard version)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "combinatorics",
                "data structures",
                "dp",
                "math",
                "two pointers"
            ]
        },
        "1505:E": {
            "contestId": 1505,
            "index": "E",
            "name": "Cakewalk",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "greedy",
                "implementation",
                "shortest paths"
            ]
        },
        "1505:D": {
            "contestId": 1505,
            "index": "D",
            "name": "Xenolith? Hippodrome?",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "number theory"
            ]
        },
        "1505:H": {
            "contestId": 1505,
            "index": "H",
            "name": "L BREAK into program",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "*special"
            ]
        },
        "1505:G": {
            "contestId": 1505,
            "index": "G",
            "name": "Encoded message",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "1505:F": {
            "contestId": 1505,
            "index": "F",
            "name": "Math",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "*special",
                "math"
            ]
        },
        "1505:C": {
            "contestId": 1505,
            "index": "C",
            "name": "Fibonacci Words",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "1331:F": {
            "contestId": 1331,
            "index": "F",
            "name": "Elementary!",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "brute force",
                "dp",
                "strings"
            ]
        },
        "1331:H": {
            "contestId": 1331,
            "index": "H",
            "name": "It's showtime",
            "type": "PROGRAMMING",
            "tags": [
                "*special"
            ]
        },
        "1331:G": {
            "contestId": 1331,
            "index": "G",
            "name": "Lingua Romana",
            "type": "PROGRAMMING",
            "tags": [
                "*special"
            ]
        },
        "1331:E": {
            "contestId": 1331,
            "index": "E",
            "name": "Jordan Smiley",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "dfs and similar",
                "geometry",
                "implementation"
            ]
        },
        "1331:C": {
            "contestId": 1331,
            "index": "C",
            "name": "...And after happily lived ever they",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "bitmasks"
            ]
        },
        "1812:I": {
            "contestId": 1812,
            "index": "I",
            "name": "Mountain Climber",
            "type": "PROGRAMMING",
            "tags": [
                "*special"
            ]
        },
        "1812:G": {
            "contestId": 1812,
            "index": "G",
            "name": "Colour Vision",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "1808:E3": {
            "contestId": 1808,
            "index": "E3",
            "name": "Minibuses on Venus (hard version)",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 2800,
            "tags": [
                "brute force",
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "1808:E1": {
            "contestId": 1808,
            "index": "E1",
            "name": "Minibuses on Venus (easy version)",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "dp"
            ]
        },
        "1808:E2": {
            "contestId": 1808,
            "index": "E2",
            "name": "Minibuses on Venus (medium version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 2500,
            "tags": [
                "combinatorics",
                "divide and conquer",
                "dp",
                "matrices"
            ]
        },
        "1808:C": {
            "contestId": 1808,
            "index": "C",
            "name": "Unlucky Numbers",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "brute force",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        "1399:E2": {
            "contestId": 1399,
            "index": "E2",
            "name": "Weights Division (hard version)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "dfs and similar",
                "greedy",
                "sortings",
                "trees",
                "two pointers"
            ]
        },
        "1399:E1": {
            "contestId": 1399,
            "index": "E1",
            "name": "Weights Division (easy version)",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "data structures",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        "1399:F": {
            "contestId": 1399,
            "index": "F",
            "name": "Yet Another Segments Subset",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "dp",
                "graphs",
                "sortings"
            ]
        },
        "1385:F": {
            "contestId": 1385,
            "index": "F",
            "name": "Removing Leaves",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "data structures",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        "1385:G": {
            "contestId": 1385,
            "index": "G",
            "name": "Columns Swaps",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "2-sat",
                "dfs and similar",
                "dsu",
                "graphs",
                "implementation"
            ]
        },
        "1385:E": {
            "contestId": 1385,
            "index": "E",
            "name": "Directing Edges",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        "1426:E": {
            "contestId": 1426,
            "index": "E",
            "name": "Rock, Paper, Scissors",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "flows",
                "greedy",
                "math"
            ]
        },
        "1472:G": {
            "contestId": 1472,
            "index": "G",
            "name": "Moving to the Capital",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        "1472:F": {
            "contestId": 1472,
            "index": "F",
            "name": "New Year's Puzzle",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "brute force",
                "dp",
                "graph matchings",
                "greedy",
                "sortings"
            ]
        },
        "1409:E": {
            "contestId": 1409,
            "index": "E",
            "name": "Two Platforms",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "dp",
                "sortings",
                "two pointers"
            ]
        },
        "1409:F": {
            "contestId": 1409,
            "index": "F",
            "name": "Subsequences of Length Two",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp",
                "strings"
            ]
        },
        "1433:F": {
            "contestId": 1433,
            "index": "F",
            "name": "Zero Remainder Sum ",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "dp"
            ]
        },
        "1462:F": {
            "contestId": 1462,
            "index": "F",
            "name": "The Treasure of The Segments",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "binary search",
                "data structures",
                "greedy"
            ]
        },
        "1462:E2": {
            "contestId": 1462,
            "index": "E2",
            "name": "Close Tuples (hard version)",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "combinatorics",
                "implementation",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        "1801:A": {
            "contestId": 1801,
            "index": "A",
            "name": "The Very Beautiful Blanket",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        "1801:C": {
            "contestId": 1801,
            "index": "C",
            "name": "Music Festival",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "greedy",
                "sortings"
            ]
        },
        "1802:E": {
            "contestId": 1802,
            "index": "E",
            "name": "Music Festival",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1900,
            "tags": [
                "binary search",
                "data structures",
                "dp",
                "sortings"
            ]
        },
        "1801:B": {
            "contestId": 1801,
            "index": "B",
            "name": "Buying gifts",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1800,
            "tags": [
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        "1776:I": {
            "contestId": 1776,
            "index": "I",
            "name": "Spinach Pizza",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "games",
                "geometry",
                "greedy",
                "interactive"
            ]
        },
        "1776:C": {
            "contestId": 1776,
            "index": "C",
            "name": "Library game",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "games",
                "greedy",
                "interactive",
                "sortings"
            ]
        },
        "1776:J": {
            "contestId": 1776,
            "index": "J",
            "name": "Italian Data Centers",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "graphs",
                "shortest paths"
            ]
        },
        "1776:B": {
            "contestId": 1776,
            "index": "B",
            "name": "Vittorio Plays with LEGO Bricks",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "dp",
                "geometry"
            ]
        },
        "340:B": {
            "contestId": 340,
            "index": "B",
            "name": "Maximal Area Quadrilateral",
            "type": "PROGRAMMING",
            "points": 3000,
            "rating": 2100,
            "tags": [
                "brute force",
                "geometry"
            ]
        },
        "1795:G": {
            "contestId": 1795,
            "index": "G",
            "name": "Removal Sequences",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "bitmasks",
                "dfs and similar",
                "graphs"
            ]
        },
        "1795:F": {
            "contestId": 1795,
            "index": "F",
            "name": "Blocking Chips",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        "1781:D": {
            "contestId": 1781,
            "index": "D",
            "name": "Many Perfect Squares",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "1395:C": {
            "contestId": 1395,
            "index": "C",
            "name": "Boboniu and Bit Operations",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "brute force",
                "dp",
                "greedy"
            ]
        },
        "1054:A": {
            "contestId": 1054,
            "index": "A",
            "name": "Elevator or Stairs?",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation"
            ]
        },
        "28:B": {
            "contestId": 28,
            "index": "B",
            "name": "pSort",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1600,
            "tags": [
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        "858:A": {
            "contestId": 858,
            "index": "A",
            "name": "k-rounding",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1100,
            "tags": [
                "brute force",
                "math",
                "number theory"
            ]
        },
        "undefined:403": {
            "problemsetName": "acmsguru",
            "index": "403",
            "name": "Scientific Problem",
            "type": "PROGRAMMING",
            "tags": []
        },
        "475:B": {
            "contestId": 475,
            "index": "B",
            "name": "Strongly Connected City",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "brute force",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        "479:E": {
            "contestId": 479,
            "index": "E",
            "name": "Riding in a Lift",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "dp"
            ]
        },
        "577:B": {
            "contestId": 577,
            "index": "B",
            "name": "Modulo Sum",
            "type": "PROGRAMMING",
            "points": 1250,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "data structures",
                "dp",
                "two pointers"
            ]
        },
        "505:C": {
            "contestId": 505,
            "index": "C",
            "name": "Mr. Kitayuta, the Treasure Hunter",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "two pointers"
            ]
        },
        "204:A": {
            "contestId": 204,
            "index": "A",
            "name": "Little Elephant and Interval",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "binary search",
                "combinatorics",
                "dp"
            ]
        },
        "448:C": {
            "contestId": 448,
            "index": "C",
            "name": "Painting Fence",
            "type": "PROGRAMMING",
            "points": 2500,
            "rating": 1900,
            "tags": [
                "divide and conquer",
                "dp",
                "greedy"
            ]
        },
        "1096:D": {
            "contestId": 1096,
            "index": "D",
            "name": "Easy Problem",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "dp"
            ]
        },
        "252:C": {
            "contestId": 252,
            "index": "C",
            "name": "Points on Line",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1300,
            "tags": [
                "binary search",
                "combinatorics",
                "two pointers"
            ]
        },
        "1721:F": {
            "contestId": 1721,
            "index": "F",
            "name": "Matching Reduction",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "flows",
                "graph matchings",
                "graphs",
                "interactive"
            ]
        },
        "171:D": {
            "contestId": 171,
            "index": "D",
            "name": "Broken checker",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "*special",
                "brute force"
            ]
        },
        "171:E": {
            "contestId": 171,
            "index": "E",
            "name": "MYSTERIOUS LANGUAGE",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special"
            ]
        },
        "290:A": {
            "contestId": 290,
            "index": "A",
            "name": "Mysterious strings",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "*special",
                "implementation"
            ]
        },
        "102697:166": {
            "contestId": 102697,
            "index": "166",
            "name": "Counting Calories (Easier Version)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1305:B": {
            "contestId": 1305,
            "index": "B",
            "name": "Kuroni and Simple Strings",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings",
                "two pointers"
            ]
        },
        "1173:B": {
            "contestId": 1173,
            "index": "B",
            "name": "Nauuo and Chess",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "1215:A": {
            "contestId": 1215,
            "index": "A",
            "name": "Yellow Cards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1000,
            "tags": [
                "greedy",
                "implementation",
                "math"
            ]
        },
        "485:C": {
            "contestId": 485,
            "index": "C",
            "name": "Bits",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "implementation",
                "math"
            ]
        },
        "996:B": {
            "contestId": 996,
            "index": "B",
            "name": "World Cup",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "1105:C": {
            "contestId": 1105,
            "index": "C",
            "name": "Ayoub and Lost Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "combinatorics",
                "dp",
                "math"
            ]
        },
        "101020:B": {
            "contestId": 101020,
            "index": "B",
            "name": "Paper Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103049:K": {
            "contestId": 103049,
            "index": "K",
            "name": "Keyboardd",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102680:A": {
            "contestId": 102680,
            "index": "A",
            "name": "Passing Bills",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101102:E": {
            "contestId": 101102,
            "index": "E",
            "name": "Ya Rajaie and Books",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101608:A": {
            "contestId": 101608,
            "index": "A",
            "name": "Chrome Tabs",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101808:A": {
            "contestId": 101808,
            "index": "A",
            "name": "Martadella Strikes Again",
            "type": "PROGRAMMING",
            "tags": []
        },
        "794:B": {
            "contestId": 794,
            "index": "B",
            "name": "Cutting Carrot",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1200,
            "tags": [
                "geometry",
                "math"
            ]
        },
        "304:C": {
            "contestId": 304,
            "index": "C",
            "name": "Lucky Permutation Triple",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        "101856:K": {
            "contestId": 101856,
            "index": "K",
            "name": "Katryoshka",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101856:L": {
            "contestId": 101856,
            "index": "L",
            "name": "Lazy ERCD",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102892:1": {
            "contestId": 102892,
            "index": "1",
            "name": "Unique Elements",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102397:G": {
            "contestId": 102397,
            "index": "G",
            "name": "Super Weird Game",
            "type": "PROGRAMMING",
            "tags": []
        },
        "36:A": {
            "contestId": 36,
            "index": "A",
            "name": "Extra-terrestrial Intelligence",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "103828:E": {
            "contestId": 103828,
            "index": "E",
            "name": "Do you where is Naseem?",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101086:L": {
            "contestId": 101086,
            "index": "L",
            "name": "Chance",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101086:G": {
            "contestId": 101086,
            "index": "G",
            "name": "Paradise City",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103821:C": {
            "contestId": 103821,
            "index": "C",
            "name": "Perfect Seating",
            "type": "PROGRAMMING",
            "tags": []
        },
        "727:C": {
            "contestId": 727,
            "index": "C",
            "name": "Guess the Array",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        "1167:B": {
            "contestId": 1167,
            "index": "B",
            "name": "Lost Numbers",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "divide and conquer",
                "interactive",
                "math"
            ]
        },
        "101744:B": {
            "contestId": 101744,
            "index": "B",
            "name": "MaratonIME plays Cîrokime",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104264:B": {
            "contestId": 104264,
            "index": "B",
            "name": "String",
            "type": "PROGRAMMING",
            "tags": []
        },
        "805:C": {
            "contestId": 805,
            "index": "C",
            "name": "Find Amir",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        "101532:H": {
            "contestId": 101532,
            "index": "H",
            "name": "Corrupted Images",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104217:C": {
            "contestId": 104217,
            "index": "C",
            "name": "Sled Circle",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104217:D": {
            "contestId": 104217,
            "index": "D",
            "name": "Outfit Ordeal",
            "type": "PROGRAMMING",
            "tags": []
        },
        "660:C": {
            "contestId": 660,
            "index": "C",
            "name": "Hard Process",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "binary search",
                "dp",
                "two pointers"
            ]
        },
        "103430:B": {
            "contestId": 103430,
            "index": "B",
            "name": "Special Permutation",
            "type": "PROGRAMMING",
            "tags": []
        },
        "701:B": {
            "contestId": 701,
            "index": "B",
            "name": "Cells Not Under Attack",
            "type": "PROGRAMMING",
            "points": 750,
            "rating": 1200,
            "tags": [
                "data structures",
                "math"
            ]
        },
        "101801:F": {
            "contestId": 101801,
            "index": "F",
            "name": "F. Nim Cheater",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101801:L": {
            "contestId": 101801,
            "index": "L",
            "name": "L. Odd and Even Count",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101801:A": {
            "contestId": 101801,
            "index": "A",
            "name": "A. Can Shahhoud Solve it?",
            "type": "PROGRAMMING",
            "tags": []
        },
        "962:B": {
            "contestId": 962,
            "index": "B",
            "name": "Students in Railway Carriage",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        "111:A": {
            "contestId": 111,
            "index": "A",
            "name": "Petya and Inequiations",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1400,
            "tags": [
                "greedy"
            ]
        },
        "596:B": {
            "contestId": 596,
            "index": "B",
            "name": "Wilbur and Array",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1100,
            "tags": [
                "greedy",
                "implementation"
            ]
        },
        "259:C": {
            "contestId": 259,
            "index": "C",
            "name": "Little Elephant and Bits",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1100,
            "tags": [
                "greedy",
                "strings"
            ]
        },
        "104081:G": {
            "contestId": 104081,
            "index": "G",
            "name": "排队打卡",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103708:I": {
            "contestId": 103708,
            "index": "I",
            "name": "Isabel's Divisions",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103708:H": {
            "contestId": 103708,
            "index": "H",
            "name": "Hog Fencing",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1059:B": {
            "contestId": 1059,
            "index": "B",
            "name": "Forgery",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation"
            ]
        },
        "681:C": {
            "contestId": 681,
            "index": "C",
            "name": "Heap Operations",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        "204:B": {
            "contestId": 204,
            "index": "B",
            "name": "Little Elephant and Cards",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1500,
            "tags": [
                "binary search",
                "data structures"
            ]
        },
        "791:C": {
            "contestId": 791,
            "index": "C",
            "name": "Bear and Different Names",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        "100062:C": {
            "contestId": 100062,
            "index": "C",
            "name": "C",
            "type": "PROGRAMMING",
            "tags": []
        },
        "777:D": {
            "contestId": 777,
            "index": "D",
            "name": "Cloud of Hashtags",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1800,
            "tags": [
                "binary search",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        "100118:H": {
            "contestId": 100118,
            "index": "H",
            "name": "Ребус",
            "type": "PROGRAMMING",
            "tags": []
        },
        "1092:F": {
            "contestId": 1092,
            "index": "F",
            "name": "Tree with Maximum Cost",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        "219:D": {
            "contestId": 219,
            "index": "D",
            "name": "Choosing Capital for Treeland",
            "type": "PROGRAMMING",
            "points": 2000,
            "rating": 1700,
            "tags": [
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        "16:E": {
            "contestId": 16,
            "index": "E",
            "name": "Fish",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "bitmasks",
                "dp",
                "probabilities"
            ]
        },
        "1661:C": {
            "contestId": 1661,
            "index": "C",
            "name": "Water the Trees",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "greedy",
                "math"
            ]
        },
        "102770:I": {
            "contestId": 102770,
            "index": "I",
            "name": "Invoking the Magic",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102811:A": {
            "contestId": 102811,
            "index": "A",
            "name": "Автобусные остановки",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103821:H": {
            "contestId": 103821,
            "index": "H",
            "name": "FAT Sequences",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103821:E": {
            "contestId": 103821,
            "index": "E",
            "name": "Robovac",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103821:F": {
            "contestId": 103821,
            "index": "F",
            "name": "A + B (Harder version)",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101498:C": {
            "contestId": 101498,
            "index": "C",
            "name": "Lunch Break",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102946:A": {
            "contestId": 102946,
            "index": "A",
            "name": "A Water Problem",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103055:A": {
            "contestId": 103055,
            "index": "A",
            "name": "League of Legends",
            "type": "PROGRAMMING",
            "tags": []
        },
        "103061:N": {
            "contestId": 103061,
            "index": "N",
            "name": "anikore",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102953:1": {
            "contestId": 102953,
            "index": "1",
            "name": "Banner Display",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102028:A": {
            "contestId": 102028,
            "index": "A",
            "name": "Xu Xiake in Henan Province",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100514:Q": {
            "contestId": 100514,
            "index": "Q",
            "name": "Peace of bzjd",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100935:A": {
            "contestId": 100935,
            "index": "A",
            "name": "Time",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101343:G": {
            "contestId": 101343,
            "index": "G",
            "name": "In the Chairman's office",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104178:A": {
            "contestId": 104178,
            "index": "A",
            "name": "Success",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104287:A": {
            "contestId": 104287,
            "index": "A",
            "name": "Are you busy? ",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104264:H": {
            "contestId": 104264,
            "index": "H",
            "name": "Best",
            "type": "PROGRAMMING",
            "tags": []
        },
        "38:B": {
            "contestId": 38,
            "index": "B",
            "name": "Chess",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1000:C": {
            "contestId": 1000,
            "index": "C",
            "name": "Covered Points Count",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "data structures",
                "implementation",
                "sortings"
            ]
        },
        "1382:C1": {
            "contestId": 1382,
            "index": "C1",
            "name": "Prefix Flip (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "strings"
            ]
        },
        "922:B": {
            "contestId": 922,
            "index": "B",
            "name": "Magic Forest",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "brute force"
            ]
        },
        "1621:D": {
            "contestId": 1621,
            "index": "D",
            "name": "The Winter Hike",
            "type": "PROGRAMMING",
            "points": 1750,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        "1476:C": {
            "contestId": 1476,
            "index": "C",
            "name": "Longest Simple Cycle",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "dp",
                "graphs",
                "greedy"
            ]
        },
        "907:A": {
            "contestId": 907,
            "index": "A",
            "name": "Masha and Bears",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1300,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "1435:A": {
            "contestId": 1435,
            "index": "A",
            "name": "Finding Sasuke",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "math"
            ]
        },
        "348:A": {
            "contestId": 348,
            "index": "A",
            "name": "Mafia",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1600,
            "tags": [
                "binary search",
                "math",
                "sortings"
            ]
        },
        "161:A": {
            "contestId": 161,
            "index": "A",
            "name": "Dress'em in Vests!",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "binary search",
                "brute force",
                "greedy",
                "two pointers"
            ]
        },
        "1359:C": {
            "contestId": 1359,
            "index": "C",
            "name": "Mixing Water",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "math"
            ]
        },
        "876:C": {
            "contestId": 876,
            "index": "C",
            "name": "Classroom Watch",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1200,
            "tags": [
                "brute force",
                "math"
            ]
        },
        "876:B": {
            "contestId": 876,
            "index": "B",
            "name": "Divisiblity of Differences",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        "817:A": {
            "contestId": 817,
            "index": "A",
            "name": "Treasure Hunt",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation",
                "math",
                "number theory"
            ]
        },
        "104048:A": {
            "contestId": 104048,
            "index": "A",
            "name": "Copper Corners",
            "type": "PROGRAMMING",
            "tags": []
        },
        "104157:C": {
            "contestId": 104157,
            "index": "C",
            "name": "Flush-tastic Throwing Challenge",
            "type": "PROGRAMMING",
            "tags": []
        },
        "808:B": {
            "contestId": 808,
            "index": "B",
            "name": "Average Sleep Time",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "data structures",
                "implementation",
                "math"
            ]
        },
        "808:G": {
            "contestId": 808,
            "index": "G",
            "name": "Anthem of Berland",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "dp",
                "strings"
            ]
        },
        "820:A": {
            "contestId": 820,
            "index": "A",
            "name": "Mister B and Book Reading",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "implementation"
            ]
        },
        "916:A": {
            "contestId": 916,
            "index": "A",
            "name": "Jamie and Alarm Snooze",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 900,
            "tags": [
                "brute force",
                "implementation",
                "math"
            ]
        },
        "1365:D": {
            "contestId": 1365,
            "index": "D",
            "name": "Solve The Maze",
            "type": "PROGRAMMING",
            "points": 1500,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "implementation",
                "shortest paths"
            ]
        },
        "628:B": {
            "contestId": 628,
            "index": "B",
            "name": "New Skateboard",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp"
            ]
        },
        "234:C": {
            "contestId": 234,
            "index": "C",
            "name": "Weather",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "dp",
                "implementation"
            ]
        },
        "1465:A": {
            "contestId": 1465,
            "index": "A",
            "name": "In-game Chat",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 800,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "435:B": {
            "contestId": 435,
            "index": "B",
            "name": "Pasha Maximizes",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1400,
            "tags": [
                "greedy"
            ]
        },
        "104157:B": {
            "contestId": 104157,
            "index": "B",
            "name": "Watch Your Sugar!",
            "type": "PROGRAMMING",
            "tags": []
        },
        "102961:ZA": {
            "contestId": 102961,
            "index": "ZA",
            "name": "Subarray Sums I",
            "type": "PROGRAMMING",
            "tags": []
        },
        "203:A": {
            "contestId": 203,
            "index": "A",
            "name": "Two Problems",
            "type": "PROGRAMMING",
            "points": 500,
            "rating": 1200,
            "tags": [
                "brute force",
                "implementation"
            ]
        },
        "102961:ZB": {
            "contestId": 102961,
            "index": "ZB",
            "name": "Subarray Sums II",
            "type": "PROGRAMMING",
            "tags": []
        },
        "985:B": {
            "contestId": 985,
            "index": "B",
            "name": "Switches and Lamps",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "implementation"
            ]
        },
        "250:B": {
            "contestId": 250,
            "index": "B",
            "name": "Restoring IPv6",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1500,
            "tags": [
                "implementation",
                "strings"
            ]
        },
        "707:B": {
            "contestId": 707,
            "index": "B",
            "name": "Bakery",
            "type": "PROGRAMMING",
            "points": 1000,
            "rating": 1300,
            "tags": [
                "graphs"
            ]
        },
        "665:B": {
            "contestId": 665,
            "index": "B",
            "name": "Shopping",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force"
            ]
        },
        "100187:L": {
            "contestId": 100187,
            "index": "L",
            "name": "Ministry of Truth",
            "type": "PROGRAMMING",
            "tags": []
        },
        "100187:E": {
            "contestId": 100187,
            "index": "E",
            "name": "Two Labyrinths",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101744:H": {
            "contestId": 101744,
            "index": "H",
            "name": "MaratonIME goes to the movies",
            "type": "PROGRAMMING",
            "tags": []
        },
        "101744:M": {
            "contestId": 101744,
            "index": "M",
            "name": "MaratonIME returns home",
            "type": "PROGRAMMING",
            "tags": []
        }
    },
    "problemFreq": {
        "1741:B": 117,
        "1741:A": 138,
        "102942:D": 3,
        "103373:D": 3,
        "103373:B": 4,
        "103373:A": 4,
        "103373:J": 3,
        "101853:J": 3,
        "101853:F": 5,
        "101853:D": 3,
        "101853:H": 3,
        "100733:B": 1,
        "100733:G": 1,
        "100733:D": 1,
        "100733:E": 1,
        "1729:A": 151,
        "102791:D": 1,
        "102791:A": 1,
        "102267:A": 5,
        "1722:C": 100,
        "1722:A": 156,
        "1722:B": 147,
        "101028:E": 1,
        "101028:D": 1,
        "101028:B": 2,
        "101028:A": 4,
        "101875:L": 1,
        "1692:C": 91,
        "1692:A": 135,
        "1585:A": 12,
        "1670:A": 48,
        "1674:A": 81,
        "1675:A": 101,
        "1669:B": 123,
        "1676:A": 159,
        "1676:B": 139,
        "1607:A": 46,
        "1660:B": 63,
        "1660:A": 91,
        "1658:A": 41,
        "1657:B": 54,
        "1657:A": 59,
        "1654:A": 42,
        "1646:A": 50,
        "1623:A": 12,
        "1629:A": 31,
        "1335:A": 99,
        "1624:A": 87,
        "791:A": 131,
        "266:A": 149,
        "1644:A": 60,
        "1633:B": 38,
        "1638:A": 26,
        "550:A": 20,
        "486:C": 3,
        "431:C": 4,
        "268:C": 5,
        "478:C": 9,
        "1741:D": 19,
        "1367:C": 14,
        "385:A": 11,
        "1360:C": 36,
        "862:B": 7,
        "1788:B": 97,
        "1788:A": 154,
        "158:B": 80,
        "1025:C": 2,
        "1037:C": 11,
        "1786:C": 59,
        "1786:A2": 60,
        "1786:A1": 87,
        "1791:E": 142,
        "1791:G1": 106,
        "1791:D": 138,
        "1791:C": 194,
        "1791:B": 195,
        "1791:A": 197,
        "1474:B": 42,
        "1469:A": 41,
        "766:B": 48,
        "1778:B": 48,
        "1778:A": 161,
        "1520:B": 60,
        "1557:A": 24,
        "264:A": 2,
        "20:B": 2,
        "20:A": 2,
        "1487:B": 16,
        "514:A": 66,
        "478:B": 24,
        "276:B": 25,
        "508:B": 18,
        "447:B": 26,
        "507:B": 20,
        "393:B": 1,
        "339:B": 85,
        "475:D": 2,
        "872:B": 2,
        "388:A": 3,
        "1777:B": 99,
        "1777:A": 139,
        "455:A": 17,
        "401:C": 13,
        "466:C": 9,
        "9:C": 6,
        "490:C": 2,
        "706:B": 76,
        "1560:D": 15,
        "1097:B": 19,
        "1178:B": 3,
        "894:A": 21,
        "282:B": 7,
        "1555:C": 16,
        "1538:C": 30,
        "1735:C": 14,
        "1042:B": 6,
        "839:C": 5,
        "276:D": 5,
        "1420:B": 24,
        "1514:B": 24,
        "1559:A": 46,
        "805:B": 13,
        "844:B": 2,
        "1182:A": 26,
        "1661:B": 24,
        "912:B": 6,
        "1765:E": 56,
        "1758:A": 152,
        "579:A": 80,
        "281:A": 137,
        "1237:A": 21,
        "1204:A": 29,
        "298:A": 15,
        "287:A": 26,
        "699:A": 16,
        "143:A": 19,
        "682:A": 28,
        "365:A": 23,
        "483:A": 23,
        "80:A": 77,
        "785:A": 101,
        "1:A": 137,
        "486:A": 108,
        "742:A": 74,
        "404:A": 39,
        "208:A": 126,
        "707:A": 76,
        "43:A": 106,
        "807:A": 23,
        "469:A": 101,
        "318:A": 135,
        "474:A": 69,
        "160:A": 122,
        "520:A": 104,
        "768:A": 34,
        "767:A": 18,
        "766:A": 43,
        "567:A": 36,
        "136:A": 105,
        "799:A": 19,
        "770:A": 24,
        "490:A": 72,
        "339:A": 150,
        "686:A": 39,
        "71:A": 161,
        "443:A": 101,
        "709:A": 39,
        "294:A": 21,
        "9:A": 69,
        "265:A": 38,
        "228:A": 105,
        "732:A": 86,
        "268:A": 94,
        "731:A": 46,
        "431:A": 75,
        "427:A": 85,
        "381:A": 90,
        "344:A": 114,
        "59:A": 133,
        "236:A": 148,
        "112:A": 149,
        "405:A": 121,
        "263:A": 154,
        "231:A": 145,
        "734:A": 128,
        "1721:A": 115,
        "677:A": 115,
        "1592:A": 30,
        "1691:A": 111,
        "1681:B": 67,
        "1681:A": 75,
        "1680:B": 51,
        "1680:A": 62,
        "1676:E": 72,
        "1676:D": 75,
        "1676:C": 77,
        "1678:A": 67,
        "1651:A": 56,
        "1665:A": 74,
        "1674:B": 66,
        "1633:A": 43,
        "1673:A": 48,
        "1611:B": 38,
        "1669:F": 53,
        "1646:B": 32,
        "1621:A": 17,
        "1614:A": 21,
        "1611:A": 44,
        "1627:A": 18,
        "1626:A": 33,
        "1613:A": 38,
        "1671:B": 53,
        "1671:A": 58,
        "746:B": 47,
        "1669:C": 95,
        "1669:A": 142,
        "1567:A": 34,
        "1555:A": 38,
        "1560:B": 35,
        "1616:A": 26,
        "1622:A": 34,
        "1529:A": 24,
        "1579:A": 54,
        "501:A": 20,
        "1005:B": 25,
        "1551:B1": 26,
        "1538:A": 27,
        "1399:A": 92,
        "1553:A": 36,
        "1549:A": 30,
        "1541:A": 27,
        "1554:A": 33,
        "1512:A": 95,
        "1535:A": 69,
        "1537:A": 37,
        "1542:A": 58,
        "118:A": 143,
        "69:A": 133,
        "1030:A": 110,
        "41:A": 119,
        "110:A": 126,
        "116:A": 103,
        "977:A": 117,
        "617:A": 126,
        "1593:A": 49,
        "1551:A": 70,
        "1560:A": 91,
        "148:A": 78,
        "266:B": 108,
        "546:A": 112,
        "1650:A": 83,
        "282:A": 145,
        "50:A": 129,
        "158:A": 125,
        "4:A": 138,
        "1475:B": 82,
        "489:B": 51,
        "379:A": 63,
        "1343:A": 65,
        "1475:A": 106,
        "500:A": 50,
        "189:A": 55,
        "313:A": 79,
        "466:A": 70,
        "451:A": 81,
        "230:B": 96,
        "4:C": 93,
        "230:A": 101,
        "492:B": 89,
        "337:A": 94,
        "25:A": 95,
        "131:A": 104,
        "580:A": 100,
        "479:A": 112,
        "122:A": 116,
        "58:A": 125,
        "133:A": 111,
        "96:A": 121,
        "34:B": 79,
        "1730:A": 106,
        "1734:A": 96,
        "1729:B": 125,
        "1728:B": 81,
        "1728:A": 116,
        "1719:A": 86,
        "1720:C": 49,
        "1720:B": 77,
        "1720:A": 88,
        "1715:A": 78,
        "1721:B": 88,
        "1712:A": 82,
        "1713:A": 64,
        "1698:A": 72,
        "1702:B": 84,
        "1716:B": 61,
        "1716:A": 105,
        "1714:B": 93,
        "1706:A": 57,
        "1705:A": 81,
        "1711:A": 66,
        "1708:A": 68,
        "1714:A": 91,
        "1709:A": 103,
        "1703:C": 112,
        "1703:B": 135,
        "1703:A": 158,
        "1702:A": 112,
        "1701:B": 45,
        "1701:A": 73,
        "1699:A": 58,
        "1686:A": 65,
        "1690:C": 70,
        "1690:B": 68,
        "1697:A": 78,
        "1690:A": 112,
        "1692:B": 103,
        "1793:A": 87,
        "489:C": 26,
        "1374:C": 66,
        "1722:D": 70,
        "1614:B": 25,
        "1598:B": 19,
        "1476:A": 54,
        "1101:A": 10,
        "1744:D": 64,
        "1409:B": 23,
        "1675:B": 71,
        "1692:D": 42,
        "1739:B": 94,
        "363:B": 64,
        "1787:B": 66,
        "1787:A": 135,
        "1762:B": 76,
        "1704:B": 44,
        "1790:A": 173,
        "1790:B": 152,
        "1790:C": 112,
        "1780:B": 89,
        "1780:A": 138,
        "1339:B": 23,
        "1792:B": 95,
        "1792:A": 150,
        "1541:B": 29,
        "1504:B": 11,
        "451:B": 47,
        "454:B": 20,
        "1355:B": 19,
        "1399:C": 22,
        "1679:B": 44,
        "1694:B": 44,
        "1734:C": 47,
        "1736:B": 55,
        "1738:B": 41,
        "1385:C": 25,
        "1739:A": 110,
        "433:B": 47,
        "1352:B": 39,
        "1782:B": 34,
        "1782:A": 66,
        "1520:D": 53,
        "1363:A": 39,
        "1343:C": 27,
        "474:B": 54,
        "1737:A": 46,
        "556:A": 65,
        "1775:A2": 82,
        "1775:A1": 86,
        "1622:B": 34,
        "1783:B": 86,
        "1783:A": 143,
        "1472:B": 68,
        "1593:B": 28,
        "1632:B": 34,
        "1713:B": 62,
        "1768:B": 127,
        "1768:A": 146,
        "1607:C": 51,
        "499:B": 51,
        "1593:C": 44,
        "1779:B": 123,
        "1779:A": 121,
        "1436:B": 21,
        "1326:B": 23,
        "1650:B": 72,
        "1525:B": 33,
        "1537:B": 35,
        "1433:C": 34,
        "1373:B": 53,
        "913:A": 17,
        "1535:B": 52,
        "1296:B": 52,
        "1462:C": 59,
        "1335:B": 55,
        "1374:B": 66,
        "1624:B": 54,
        "1770:B": 103,
        "1770:A": 125,
        "1605:B": 25,
        "1702:D": 63,
        "456:A": 61,
        "1371:A": 56,
        "724:A": 6,
        "1360:B": 68,
        "1426:A": 62,
        "1176:A": 9,
        "1731:A": 135,
        "1732:B": 60,
        "999:B": 15,
        "1742:C": 128,
        "1352:C": 63,
        "988:B": 12,
        "988:A": 12,
        "978:C": 26,
        "978:A": 24,
        "977:C": 37,
        "1763:B": 40,
        "1526:B": 25,
        "622:A": 6,
        "168:A": 4,
        "194:A": 9,
        "1749:B": 110,
        "1399:B": 48,
        "1353:C": 46,
        "1433:A": 60,
        "1520:A": 68,
        "1353:B": 64,
        "1763:A": 70,
        "1367:B": 65,
        "1772:C": 118,
        "1772:B": 158,
        "1772:A": 170,
        "1337:B": 49,
        "1774:A": 133,
        "1352:A": 86,
        "978:B": 41,
        "1767:B": 123,
        "1767:A": 130,
        "977:B": 59,
        "1762:A": 117,
        "1690:D": 65,
        "1634:C": 30,
        "1744:A": 126,
        "1744:C": 99,
        "1726:A": 76,
        "1766:B": 123,
        "1766:A": 147,
        "1771:A": 127,
        "600:B": 27,
        "1490:C": 45,
        "1353:A": 38,
        "1353:D": 4,
        "1527:A": 41,
        "1697:B": 83,
        "1186:A": 29,
        "1725:B": 64,
        "43:B": 16,
        "540:A": 28,
        "1579:D": 6,
        "1761:B": 76,
        "1750:B": 105,
        "1715:B": 63,
        "703:A": 67,
        "1760:D": 120,
        "1764:B": 96,
        "118:B": 36,
        "78:A": 14,
        "492:A": 64,
        "1325:B": 34,
        "1389:A": 36,
        "1747:B": 120,
        "1758:B": 128,
        "22:A": 30,
        "903:C": 41,
        "918:B": 22,
        "855:A": 31,
        "166:A": 17,
        "44:A": 18,
        "1764:A": 110,
        "1325:A": 36,
        "233:A": 36,
        "1369:A": 27,
        "1462:A": 50,
        "959:A": 46,
        "1760:C": 171,
        "1760:B": 175,
        "1760:A": 177,
        "1761:A": 101,
        "1385:A": 33,
        "1746:B": 69,
        "584:A": 70,
        "1759:A": 145,
        "1619:A": 78,
        "1294:A": 63,
        "460:A": 51,
        "1472:A": 56,
        "630:A": 72,
        "200:B": 103,
        "141:A": 83,
        "1360:A": 67,
        "1374:A": 64,
        "32:B": 83,
        "1748:A": 142,
        "432:A": 61,
        "151:A": 90,
        "1343:B": 68,
        "472:A": 66,
        "1154:A": 80,
        "1409:A": 80,
        "758:A": 67,
        "1367:A": 70,
        "581:A": 71,
        "723:A": 79,
        "750:A": 82,
        "144:A": 95,
        "510:A": 85,
        "996:A": 81,
        "155:A": 84,
        "undefined:154": 1,
        "undefined:123": 9,
        "undefined:100": 11,
        "1750:A": 110,
        "1328:A": 98,
        "467:A": 99,
        "61:A": 93,
        "271:A": 113,
        "1747:A": 140,
        "705:A": 100,
        "1742:B": 157,
        "1742:A": 163,
        "1740:A": 111,
        "1754:B": 93,
        "1754:A": 123,
        "34:A": 32,
        "1604:F": 1,
        "1604:C": 5,
        "1743:A": 134,
        "1746:A": 113,
        "1749:A": 109,
        "1342:B": 10,
        "1345:B": 19,
        "1638:B": 46,
        "651:A": 13,
        "1841:B": 44,
        "1841:A": 67,
        "1743:C": 74,
        "227:B": 47,
        "463:B": 33,
        "1382:B": 15,
        "919:B": 21,
        "1840:A": 79,
        "1840:B": 52,
        "1840:C": 56,
        "1735:B": 73,
        "554:A": 6,
        "1838:B": 37,
        "1838:A": 64,
        "1839:B": 32,
        "1839:A": 50,
        "1311:B": 15,
        "1203:C": 19,
        "320:A": 50,
        "149:A": 60,
        "776:B": 9,
        "26:A": 36,
        "1722:G": 7,
        "1831:B": 52,
        "1831:A": 75,
        "252:A": 2,
        "478:A": 21,
        "1837:C": 62,
        "1837:B": 76,
        "1837:A": 80,
        "1324:C": 15,
        "1366:A": 36,
        "349:A": 30,
        "1826:A": 42,
        "1826:B": 54,
        "82:A": 21,
        "1213:B": 20,
        "1712:C": 54,
        "1334:B": 18,
        "1472:C": 19,
        "467:B": 21,
        "1833:C": 76,
        "1833:B": 71,
        "1833:A": 86,
        "1324:B": 26,
        "1327:A": 51,
        "368:B": 48,
        "270:A": 61,
        "313:B": 39,
        "1405:B": 21,
        "507:A": 12,
        "1411:B": 18,
        "1111:A": 9,
        "237:A": 36,
        "75:A": 38,
        "1828:B": 75,
        "1828:A": 86,
        "620:B": 4,
        "1312:B": 33,
        "1832:C": 38,
        "1832:B": 56,
        "1832:A": 86,
        "37:A": 24,
        "1515:B": 42,
        "1333:A": 25,
        "1256:A": 41,
        "1326:A": 43,
        "219:A": 35,
        "1358:B": 22,
        "688:B": 58,
        "1829:C": 90,
        "1520:C": 44,
        "1521:A": 63,
        "1825:A": 74,
        "1823:A": 51,
        "104333:G": 2,
        "104333:H": 2,
        "104333:J": 4,
        "1818:B": 48,
        "1562:B": 20,
        "1822:D": 50,
        "1822:B": 79,
        "1822:C": 73,
        "1822:A": 80,
        "1821:B": 54,
        "1821:A": 71,
        "104289:A": 6,
        "1816:A": 57,
        "1816:B": 53,
        "1810:A": 67,
        "1539:A": 28,
        "1814:B": 24,
        "1814:A": 77,
        "1797:B": 51,
        "1797:A": 60,
        "1732:A": 58,
        "1798:B": 49,
        "1798:A": 70,
        "1810:B": 56,
        "1811:E": 13,
        "1811:D": 6,
        "1811:C": 65,
        "1811:B": 57,
        "1811:A": 84,
        "1812:F": 3,
        "1805:A": 70,
        "1805:B": 72,
        "1234:B2": 7,
        "1234:B1": 8,
        "1812:J": 21,
        "1812:D": 24,
        "1812:E": 16,
        "1812:B": 30,
        "1812:A": 44,
        "1490:B": 35,
        "1499:B": 21,
        "1569:B": 21,
        "1613:B": 42,
        "1473:B": 41,
        "1808:B": 37,
        "1808:A": 57,
        "1620:B": 27,
        "1794:A": 65,
        "1708:B": 56,
        "268:B": 35,
        "1342:A": 66,
        "476:A": 60,
        "124:A": 65,
        "1809:B": 66,
        "1809:A": 75,
        "327:A": 36,
        "1807:G2": 63,
        "1807:G1": 66,
        "1807:C": 84,
        "1807:D": 84,
        "1807:B": 91,
        "1807:A": 94,
        "1806:B": 51,
        "1806:A": 61,
        "102419:C": 1,
        "519:B": 47,
        "1294:C": 46,
        "1692:E": 32,
        "1804:A": 64,
        "1802:A": 57,
        "1335:C": 34,
        "1800:D": 55,
        "1794:B": 72,
        "1800:A": 81,
        "1800:B": 73,
        "1800:C2": 64,
        "1800:C1": 67,
        "102:B": 44,
        "1796:B": 53,
        "1796:A": 74,
        "1550:B": 39,
        "1789:A": 57,
        "1789:B": 48,
        "1454:C": 13,
        "1729:D": 43,
        "1730:C": 50,
        "1793:C": 52,
        "1006:C": 11,
        "1681:C": 51,
        "1795:B": 66,
        "1795:A": 73,
        "577:A": 53,
        "1695:B": 44,
        "1688:B": 45,
        "1688:A": 48,
        "1691:B": 70,
        "1686:B": 50,
        "1560:C": 16,
        "1220:A": 30,
        "1684:B": 67,
        "1684:A": 88,
        "1656:B": 36,
        "1656:A": 35,
        "1607:B": 33,
        "1679:A": 73,
        "1619:B": 39,
        "1678:B1": 47,
        "1672:A": 40,
        "1672:B": 41,
        "1669:D": 47,
        "1668:A": 48,
        "1659:A": 50,
        "352:A": 31,
        "1661:A": 43,
        "1665:B": 50,
        "1663:C": 17,
        "1663:A": 34,
        "1658:B": 32,
        "1647:A": 41,
        "1651:B": 28,
        "1637:A": 40,
        "1634:A": 35,
        "1736:A": 92,
        "1461:A": 7,
        "237:C": 3,
        "812:C": 6,
        "1385:B": 27,
        "816:B": 19,
        "1695:A": 28,
        "303:A": 1,
        "1719:B": 52,
        "1504:A": 14,
        "1498:A": 21,
        "1484:A": 2,
        "1501:B": 16,
        "1501:A": 2,
        "371:B": 4,
        "1496:A": 13,
        "1493:A": 9,
        "1486:A": 31,
        "1485:A": 25,
        "1714:C": 90,
        "26:B": 19,
        "616:A": 7,
        "108:A": 3,
        "1110:A": 9,
        "1003:B": 7,
        "893:B": 8,
        "1617:B": 51,
        "659:A": 11,
        "1731:B": 83,
        "1685:A": 27,
        "1569:A": 14,
        "1765:M": 64,
        "222:A": 12,
        "224:A": 32,
        "1567:B": 21,
        "1421:A": 23,
        "515:A": 19,
        "1106:C": 9,
        "1169:A": 5,
        "263:B": 6,
        "1743:B": 111,
        "1765:B": 54,
        "1759:B": 125,
        "1538:B": 28,
        "1649:A": 38,
        "1296:A": 49,
        "1360:E": 10,
        "1360:D": 29,
        "1364:B": 7,
        "1810:C": 25,
        "1839:C": 11,
        "1740:C": 18,
        "1200:B": 2,
        "1828:C": 37,
        "1740:B": 61,
        "1838:C": 20,
        "1182:B": 2,
        "1144:C": 7,
        "1285:B": 17,
        "1151:A": 8,
        "1669:G": 28,
        "1490:D": 7,
        "1829:E": 42,
        "1173:A": 9,
        "1829:D": 72,
        "1166:B": 5,
        "1825:B": 44,
        "1829:B": 91,
        "1829:A": 92,
        "1279:B": 5,
        "1176:B": 9,
        "1155:A": 10,
        "1491:A": 6,
        "1818:A": 41,
        "1823:B": 44,
        "1185:C1": 3,
        "1185:B": 5,
        "1709:B": 61,
        "1146:B": 7,
        "1821:C": 27,
        "1149:A": 8,
        "1733:B": 73,
        "1196:B": 12,
        "1196:A": 20,
        "1689:A": 33,
        "1203:B": 15,
        "279:B": 47,
        "1157:A": 9,
        "1820:B": 38,
        "1820:A": 55,
        "1205:A": 7,
        "1742:E": 62,
        "1705:B": 72,
        "1213:C": 14,
        "1214:C": 13,
        "609:B": 4,
        "1741:C": 49,
        "1747:C": 99,
        "1759:C": 73,
        "1760:E": 86,
        "1737:B": 28,
        "862:A": 5,
        "550:C": 11,
        "1800:E2": 16,
        "275:A": 39,
        "405:B": 2,
        "1736:C1": 30,
        "1369:B": 17,
        "1800:E1": 17,
        "1804:B": 34,
        "435:A": 8,
        "1251:A": 16,
        "236:B": 7,
        "1742:D": 77,
        "1527:B1": 20,
        "1788:C": 49,
        "798:A": 27,
        "1733:A": 74,
        "1717:B": 38,
        "1714:D": 5,
        "1712:B": 67,
        "1704:A": 41,
        "1703:D": 62,
        "1702:C": 55,
        "1694:A": 43,
        "1698:B": 47,
        "1696:A": 45,
        "1697:C": 15,
        "1700:B": 46,
        "1700:A": 55,
        "1481:A": 12,
        "1671:D": 2,
        "1206:B": 36,
        "1339:A": 36,
        "1610:A": 21,
        "1566:B": 11,
        "1480:A": 14,
        "1454:A": 52,
        "1625:A": 10,
        "1608:A": 24,
        "1602:A": 19,
        "1582:A": 18,
        "1618:B": 16,
        "1516:A": 18,
        "1517:A": 29,
        "1547:A": 23,
        "1550:A": 21,
        "1682:A": 65,
        "1557:B": 23,
        "1467:A": 19,
        "1530:A": 16,
        "1351:B": 26,
        "1543:A": 33,
        "1668:B": 54,
        "1676:H1": 16,
        "1674:D": 43,
        "1674:C": 71,
        "630:C": 17,
        "869:B": 16,
        "284:A": 4,
        "825:A": 5,
        "898:B": 6,
        "801:A": 3,
        "1604:B": 16,
        "1277:B": 14,
        "1615:A": 20,
        "749:A": 52,
        "84:A": 13,
        "199:A": 34,
        "664:A": 10,
        "670:A": 11,
        "1295:A": 19,
        "1304:A": 17,
        "1311:A": 66,
        "1312:A": 13,
        "1392:A": 8,
        "1392:B": 5,
        "831:B": 8,
        "1146:A": 13,
        "1355:A": 22,
        "1294:B": 19,
        "1270:B": 15,
        "1539:C": 29,
        "1791:F": 16,
        "1288:A": 7,
        "1783:C": 12,
        "1551:B2": 5,
        "1774:B": 25,
        "1350:A": 28,
        "1324:A": 23,
        "1354:A": 17,
        "1771:C": 15,
        "1771:B": 23,
        "1296:E1": 2,
        "1485:B": 6,
        "1328:C": 23,
        "1354:B": 26,
        "1433:D": 15,
        "1364:A": 35,
        "1517:B": 7,
        "1608:B": 12,
        "1409:C": 14,
        "1406:B": 19,
        "1437:B": 12,
        "1598:C": 29,
        "1594:C": 27,
        "1582:C": 13,
        "1669:E": 32,
        "1754:C1": 12,
        "1546:A": 8,
        "1676:G": 10,
        "1711:B": 19,
        "1764:C": 12,
        "1675:C": 44,
        "1705:C": 14,
        "1748:D": 2,
        "1748:B": 35,
        "1750:D": 3,
        "1750:C": 13,
        "1592:B": 24,
        "1512:C": 14,
        "1530:C": 5,
        "1732:D1": 7,
        "1744:B": 95,
        "1746:C": 28,
        "1013:A": 6,
        "1251:C": 5,
        "702:C": 8,
        "1819:A": 5,
        "1243:B1": 13,
        "1231:C": 4,
        "1230:B": 23,
        "1225:B1": 7,
        "1223:B": 9,
        "1221:C": 25,
        "1221:B": 5,
        "1221:A": 9,
        "1512:E": 1,
        "1117:C": 1,
        "1362:A": 15,
        "1822:F": 7,
        "1822:E": 14,
        "1216:B": 17,
        "385:B": 8,
        "1815:A": 10,
        "165:C": 4,
        "1704:C": 32,
        "1703:F": 33,
        "1794:C": 26,
        "1726:C": 20,
        "1802:B": 39,
        "1271:B": 5,
        "1281:B": 2,
        "1561:A": 12,
        "1807:E": 18,
        "1277:A": 14,
        "1272:C": 19,
        "1272:B": 7,
        "1272:A": 18,
        "1265:B": 6,
        "1265:A": 10,
        "1262:B": 2,
        "1263:A": 8,
        "1255:B": 5,
        "1262:A": 1,
        "1255:A": 7,
        "1598:A": 19,
        "1799:A": 33,
        "1291:B": 9,
        "1775:C": 10,
        "1775:B": 26,
        "1735:A": 90,
        "1738:A": 41,
        "1618:A": 36,
        "331:C1": 1,
        "1455:A": 14,
        "513:A": 11,
        "1230:A": 13,
        "1438:A": 11,
        "599:A": 14,
        "1526:A": 22,
        "1430:B": 10,
        "1287:A": 12,
        "1061:A": 10,
        "1440:A": 7,
        "1605:A": 18,
        "1006:A": 8,
        "1257:A": 6,
        "1482:A": 5,
        "1015:A": 8,
        "1515:A": 14,
        "1206:A": 13,
        "1005:A": 14,
        "1509:A": 19,
        "1300:A": 9,
        "1096:A": 10,
        "1285:A": 24,
        "102942:A": 1,
        "1130:B": 2,
        "1005:C": 2,
        "864:A": 6,
        "1238:A": 31,
        "1497:C1": 23,
        "1008:A": 8,
        "835:B": 4,
        "962:A": 8,
        "139:A": 46,
        "1380:A": 27,
        "450:A": 48,
        "1591:B": 6,
        "1591:A": 5,
        "272:A": 32,
        "248:A": 24,
        "1199:A": 9,
        "449:B": 2,
        "935:A": 43,
        "1301:A": 10,
        "1303:A": 23,
        "1400:A": 15,
        "20:C": 13,
        "1397:A": 15,
        "939:A": 17,
        "271:C": 1,
        "271:B": 6,
        "1682:B": 40,
        "735:D": 3,
        "736:B": 2,
        "1359:A": 33,
        "1189:B": 9,
        "1038:B": 3,
        "630:D": 11,
        "1358:A": 40,
        "1337:A": 34,
        "371:C": 6,
        "1133:A": 13,
        "1644:B": 37,
        "1635:B": 25,
        "1635:A": 34,
        "1141:A": 40,
        "1793:B": 71,
        "1199:B": 17,
        "1257:B": 26,
        "1165:B": 21,
        "610:A": 28,
        "1249:B1": 10,
        "1579:E1": 24,
        "1790:E": 29,
        "1790:D": 59,
        "1418:A": 18,
        "1293:B": 21,
        "1300:B": 28,
        "165:A": 17,
        "680:B": 28,
        "1430:C": 30,
        "1419:D1": 32,
        "1506:C": 25,
        "1388:B": 13,
        "1395:A": 26,
        "732:B": 13,
        "1469:B": 29,
        "1373:A": 26,
        "1359:B": 26,
        "4:B": 22,
        "1334:A": 13,
        "1537:C": 28,
        "1472:D": 28,
        "445:A": 25,
        "459:A": 21,
        "1283:A": 53,
        "1370:A": 62,
        "1833:D": 18,
        "1606:B": 25,
        "1609:B": 15,
        "1593:D1": 23,
        "1602:B": 16,
        "1809:C": 21,
        "1719:C": 13,
        "1701:C": 16,
        "1698:C": 29,
        "1696:C": 9,
        "1496:B": 14,
        "1798:D": 11,
        "1693:A": 13,
        "1692:G": 14,
        "1804:C": 18,
        "1131:C": 7,
        "1796:C": 11,
        "676:C": 8,
        "604:B": 1,
        "675:B": 2,
        "1729:C": 59,
        "1799:B": 26,
        "1760:F": 16,
        "1777:C": 8,
        "75:C": 7,
        "580:B": 7,
        "1749:C": 26,
        "1776:H": 13,
        "1776:A": 24,
        "1792:C": 25,
        "702:A": 39,
        "1769:A": 6,
        "1773:F": 11,
        "1781:A": 11,
        "92:B": 2,
        "103471:2": 1,
        "103471:1": 1,
        "1744:E2": 5,
        "1768:C": 23,
        "1770:C": 6,
        "1744:E1": 17,
        "118:D": 2,
        "106:C": 1,
        "104096:E": 1,
        "104096:A": 1,
        "1748:C": 15,
        "1722:E": 9,
        "1505:A": 14,
        "714:B": 14,
        "714:A": 3,
        "1368:A": 43,
        "1738:C": 11,
        "253:A": 13,
        "999:A": 17,
        "982:A": 4,
        "637:A": 5,
        "638:A": 3,
        "633:A": 8,
        "520:B": 32,
        "598:A": 22,
        "1427:A": 21,
        "796:A": 6,
        "300:A": 25,
        "822:A": 26,
        "673:A": 2,
        "628:A": 3,
        "828:A": 3,
        "669:A": 6,
        "1370:C": 14,
        "1733:D1": 17,
        "1331:D": 2,
        "656:F": 1,
        "92:A": 8,
        "146:A": 13,
        "1689:B": 48,
        "1696:B": 42,
        "1132:B": 5,
        "334:A": 10,
        "1253:A": 15,
        "697:A": 7,
        "1138:A": 18,
        "1080:B": 5,
        "1606:A": 35,
        "1406:A": 12,
        "1283:B": 18,
        "588:A": 9,
        "1543:B": 24,
        "1213:A": 27,
        "1420:A": 23,
        "1471:A": 32,
        "439:A": 24,
        "276:A": 33,
        "1401:A": 35,
        "1341:A": 40,
        "459:B": 37,
        "1687:A": 3,
        "1635:C": 24,
        "1686:C": 23,
        "1618:C": 35,
        "1676:F": 27,
        "1670:B": 29,
        "1671:C": 29,
        "1672:C": 31,
        "1352:G": 8,
        "1633:C": 20,
        "1654:B": 23,
        "152:A": 12,
        "1649:B": 18,
        "1574:A": 16,
        "52:A": 6,
        "1642:A": 16,
        "101982:A": 1,
        "1622:F": 1,
        "804:A": 4,
        "870:B": 1,
        "1634:B": 11,
        "1165:A": 6,
        "1620:A": 15,
        "25:B": 10,
        "1642:B": 29,
        "1616:B": 23,
        "797:A": 23,
        "946:B": 5,
        "59:B": 6,
        "1184:A1": 6,
        "1051:B": 9,
        "1033:B": 6,
        "735:B": 2,
        "299:A": 10,
        "1333:B": 16,
        "1015:C": 13,
        "740:B": 1,
        "1108:B": 16,
        "1463:A": 29,
        "1611:C": 33,
        "327:B": 26,
        "328:A": 3,
        "1157:C1": 2,
        "847:M": 4,
        "1090:M": 7,
        "887:A": 6,
        "1411:A": 6,
        "1363:B": 14,
        "221:A": 24,
        "746:A": 15,
        "1091:A": 3,
        "1175:A": 19,
        "1004:A": 3,
        "421:A": 3,
        "1372:A": 28,
        "1183:B": 18,
        "734:B": 21,
        "1234:A": 18,
        "1511:A": 24,
        "205:A": 35,
        "1348:A": 39,
        "122:B": 14,
        "1153:A": 3,
        "5:A": 3,
        "998:A": 3,
        "909:A": 2,
        "888:B": 3,
        "1023:B": 4,
        "844:A": 5,
        "336:A": 4,
        "652:B": 6,
        "864:B": 5,
        "1734:B": 55,
        "56:A": 9,
        "106:B": 3,
        "106:A": 3,
        "368:A": 5,
        "1084:A": 2,
        "29:A": 3,
        "939:B": 7,
        "757:A": 3,
        "127:B": 5,
        "660:B": 1,
        "74:A": 3,
        "641:A": 1,
        "35:A": 7,
        "182:B": 8,
        "14:B": 4,
        "420:A": 8,
        "1619:C": 29,
        "1781:B": 24,
        "964:B": 1,
        "1425:H": 2,
        "304:B": 1,
        "924:A": 1,
        "1637:C": 27,
        "926:A": 2,
        "203:B": 1,
        "828:B": 2,
        "1267:B": 3,
        "1154:B": 18,
        "883:F": 1,
        "1371:B": 9,
        "765:C": 1,
        "920:B": 3,
        "639:A": 1,
        "725:B": 1,
        "592:B": 3,
        "985:A": 2,
        "813:A": 4,
        "789:A": 2,
        "402:A": 1,
        "355:B": 3,
        "292:A": 1,
        "316:A1": 1,
        "366:A": 2,
        "583:A": 1,
        "753:A": 4,
        "886:A": 6,
        "779:A": 1,
        "777:A": 2,
        "259:A": 4,
        "816:A": 2,
        "1040:A": 2,
        "359:A": 3,
        "491:A": 2,
        "691:A": 2,
        "1020:A": 1,
        "616:B": 5,
        "465:B": 2,
        "831:A": 1,
        "608:A": 3,
        "604:A": 5,
        "849:A": 1,
        "1539:B": 18,
        "670:B": 4,
        "920:A": 2,
        "195:A": 5,
        "125:B": 4,
        "725:A": 2,
        "859:B": 4,
        "13:A": 3,
        "357:A": 3,
        "284:B": 3,
        "1054:B": 2,
        "250:A": 2,
        "626:A": 2,
        "90:A": 3,
        "371:A": 1,
        "120:A": 3,
        "644:A": 2,
        "1252:A": 3,
        "177:B1": 2,
        "958:B1": 2,
        "1177:A": 10,
        "452:A": 6,
        "1008:B": 7,
        "1036:A": 3,
        "990:A": 6,
        "967:B": 3,
        "981:B": 2,
        "400:A": 1,
        "234:B": 9,
        "991:A": 2,
        "1519:B": 21,
        "474:D": 6,
        "1715:C": 7,
        "1133:F1": 2,
        "104180:C": 1,
        "104180:B": 1,
        "104180:A": 4,
        "1773:E": 3,
        "1766:C": 27,
        "18:C": 6,
        "485:A": 1,
        "83:A": 6,
        "265:B": 14,
        "1728:C": 19,
        "1249:B2": 3,
        "920:C": 8,
        "546:C": 5,
        "977:D": 6,
        "534:B": 1,
        "1195:C": 9,
        "698:A": 10,
        "180:C": 4,
        "1837:D": 15,
        "182:D": 1,
        "1823:C": 20,
        "1759:D": 26,
        "1772:D": 36,
        "295:B": 4,
        "1826:C": 21,
        "1814:C": 9,
        "219:C": 1,
        "1807:F": 6,
        "29:B": 3,
        "31:B": 4,
        "31:A": 9,
        "1692:F": 43,
        "1717:C": 20,
        "1227:A": 4,
        "1753:A1": 17,
        "1266:A": 10,
        "980:A": 4,
        "389:A": 7,
        "558:A": 5,
        "53:A": 5,
        "495:A": 4,
        "525:A": 14,
        "1388:A": 12,
        "1478:A": 17,
        "1487:A": 18,
        "1095:A": 28,
        "119:A": 13,
        "1462:B": 18,
        "1077:A": 22,
        "1382:A": 7,
        "1632:A": 35,
        "1398:A": 12,
        "214:A": 32,
        "1454:B": 17,
        "1631:A": 35,
        "101992:B": 1,
        "101992:F": 2,
        "1706:B": 35,
        "1066:C": 4,
        "296:C": 1,
        "1673:B": 33,
        "1204:B": 12,
        "1093:B": 13,
        "1047:B": 14,
        "1016:A": 3,
        "1401:B": 12,
        "1468:E": 4,
        "991:B": 11,
        "764:B": 5,
        "935:B": 10,
        "801:B": 7,
        "1391:B": 13,
        "1391:A": 9,
        "1426:B": 13,
        "1440:B": 17,
        "847:G": 5,
        "412:B": 5,
        "299:B": 6,
        "16:B": 24,
        "1451:B": 15,
        "1494:A": 13,
        "1612:B": 28,
        "1663:F": 2,
        "1663:E": 2,
        "1663:G": 4,
        "1663:D": 3,
        "1663:B": 9,
        "1663:H": 3,
        "747:B": 3,
        "165:B": 8,
        "160:B": 12,
        "66:B": 30,
        "58:B": 9,
        "365:B": 14,
        "1468:N": 6,
        "445:B": 4,
        "501:B": 1,
        "622:B": 5,
        "1150:B": 6,
        "239:A": 24,
        "1208:A": 12,
        "572:A": 5,
        "1141:B": 23,
        "1113:A": 8,
        "1582:B": 23,
        "1559:B": 19,
        "1584:C": 23,
        "1585:B": 17,
        "306:A": 3,
        "931:A": 3,
        "291:A": 3,
        "854:A": 6,
        "900:A": 5,
        "202:A": 18,
        "910:A": 4,
        "1474:A": 5,
        "255:A": 19,
        "1041:A": 12,
        "1118:A": 13,
        "330:A": 17,
        "448:A": 11,
        "1466:A": 7,
        "1003:A": 24,
        "1183:A": 12,
        "1097:A": 27,
        "946:A": 8,
        "1436:A": 10,
        "1562:A": 18,
        "1194:A": 6,
        "609:A": 9,
        "1065:A": 3,
        "898:A": 9,
        "621:A": 10,
        "987:A": 4,
        "919:A": 6,
        "899:A": 1,
        "99:A": 3,
        "172:A": 1,
        "802:M": 2,
        "802:G": 6,
        "386:A": 3,
        "760:A": 1,
        "245:A": 2,
        "859:A": 1,
        "658:A": 2,
        "157:A": 2,
        "411:A": 3,
        "440:A": 5,
        "794:A": 2,
        "588:B": 3,
        "1092:A": 7,
        "1092:B": 11,
        "1473:A": 31,
        "554:B": 2,
        "701:A": 8,
        "1143:A": 2,
        "586:A": 3,
        "1351:A": 10,
        "509:A": 32,
        "1284:A": 3,
        "1150:A": 5,
        "1185:A": 5,
        "769:A": 3,
        "361:B": 7,
        "361:A": 10,
        "401:A": 9,
        "1047:A": 9,
        "1180:A": 7,
        "1114:A": 6,
        "1104:A": 7,
        "837:A": 3,
        "1525:A": 12,
        "551:A": 8,
        "1519:A": 27,
        "1130:A": 3,
        "1725:A": 55,
        "678:A": 4,
        "918:A": 5,
        "1081:A": 6,
        "49:A": 8,
        "16:A": 9,
        "1159:A": 2,
        "1085:A": 2,
        "46:B": 1,
        "1099:A": 3,
        "47:B": 24,
        "47:A": 14,
        "710:A": 4,
        "854:B": 1,
        "46:A": 2,
        "912:A": 2,
        "764:A": 8,
        "1031:A": 2,
        "1060:A": 5,
        "688:A": 3,
        "672:A": 7,
        "1152:A": 8,
        "1584:B": 16,
        "102961:Z": 3,
        "1609:A": 27,
        "1666:D": 19,
        "218:B": 19,
        "433:A": 16,
        "431:B": 6,
        "352:B": 12,
        "1370:B": 15,
        "463:A": 4,
        "1506:A": 25,
        "1784:A": 20,
        "762:A": 12,
        "1025:A": 10,
        "27:A": 20,
        "1167:A": 10,
        "1445:A": 7,
        "1249:A": 9,
        "653:A": 4,
        "1512:D": 17,
        "1506:B": 12,
        "1095:B": 28,
        "1139:A": 6,
        "1330:A": 13,
        "1291:A": 16,
        "129:A": 18,
        "1726:B": 47,
        "1453:A": 8,
        "1459:A": 6,
        "597:A": 3,
        "1478:B": 11,
        "1480:B": 12,
        "1492:A": 3,
        "1594:A": 17,
        "839:A": 4,
        "903:A": 14,
        "611:A": 2,
        "1181:A": 8,
        "1537:D": 3,
        "285:C": 24,
        "1133:C": 18,
        "1304:B": 8,
        "1471:B": 14,
        "1626:B": 28,
        "1157:B": 2,
        "1455:B": 14,
        "1491:B": 3,
        "1107:A": 6,
        "1573:A": 17,
        "1248:A": 10,
        "1497:A": 11,
        "1613:C": 21,
        "1612:C": 11,
        "1717:A": 64,
        "166:E": 1,
        "2:A": 8,
        "1526:C1": 11,
        "580:C": 18,
        "515:C": 10,
        "1245:C": 5,
        "1113:B": 1,
        "1119:B": 1,
        "1615:B": 9,
        "1622:C": 2,
        "1690:E": 13,
        "1779:D": 4,
        "1462:D": 10,
        "1443:C": 7,
        "1443:B": 3,
        "1617:C": 13,
        "1627:C": 7,
        "1657:C": 27,
        "1454:D": 14,
        "1644:C": 13,
        "1197:C": 2,
        "1201:C": 19,
        "1476:B": 16,
        "1618:D": 16,
        "1095:C": 4,
        "1731:C": 10,
        "1731:D": 3,
        "1519:D": 2,
        "1519:C": 5,
        "1650:C": 22,
        "1763:C": 9,
        "1660:C": 29,
        "1656:C": 42,
        "276:C": 15,
        "1375:C": 11,
        "1285:C": 19,
        "479:C": 16,
        "1774:C": 24,
        "1762:C": 12,
        "1249:C1": 6,
        "1733:C": 30,
        "1227:B": 3,
        "975:C": 1,
        "1497:B": 9,
        "1578:E": 2,
        "1553:B": 3,
        "1547:D": 6,
        "1542:C": 2,
        "1542:B": 5,
        "1545:A": 2,
        "1758:C": 34,
        "384:C": 2,
        "1521:B": 13,
        "1381:A1": 6,
        "1371:C": 10,
        "1470:A": 11,
        "545:D": 11,
        "1401:C": 13,
        "1352:D": 15,
        "1785:C": 1,
        "1785:A": 4,
        "1372:B": 17,
        "1365:B": 19,
        "1335:D": 12,
        "476:B": 18,
        "1328:B": 14,
        "1786:B": 19,
        "1791:G2": 4,
        "1365:A": 10,
        "115:A": 18,
        "1779:C": 15,
        "1494:B": 4,
        "1330:B": 4,
        "1380:B": 6,
        "1474:C": 4,
        "295:A": 9,
        "1452:B": 5,
        "1840:D": 12,
        "102951:B": 9,
        "863:B": 6,
        "1833:E": 5,
        "1691:C": 17,
        "650:A": 2,
        "1216:C": 1,
        "374:B": 3,
        "216:B": 3,
        "244:B": 2,
        "94:B": 3,
        "1829:G": 6,
        "1829:F": 19,
        "189:B": 3,
        "281:B": 2,
        "63:B": 3,
        "225:B": 3,
        "214:B": 3,
        "260:B": 2,
        "197:B": 4,
        "231:B": 3,
        "195:B": 5,
        "320:B": 3,
        "96:B": 9,
        "342:B": 2,
        "228:B": 2,
        "192:B": 3,
        "205:B": 3,
        "219:B": 2,
        "233:B": 3,
        "437:B": 5,
        "143:B": 5,
        "129:B": 10,
        "359:B": 3,
        "151:B": 7,
        "349:B": 3,
        "337:B": 6,
        "312:B": 5,
        "110:B": 9,
        "1818:C": 12,
        "116:B": 11,
        "416:B": 5,
        "514:B": 9,
        "289:B": 6,
        "357:B": 5,
        "408:B": 7,
        "366:B": 4,
        "133:B": 10,
        "155:B": 7,
        "330:B": 11,
        "157:B": 10,
        "387:B": 5,
        "509:B": 5,
        "493:B": 6,
        "469:B": 8,
        "362:B": 11,
        "432:B": 6,
        "259:B": 15,
        "285:B": 13,
        "450:B": 23,
        "279:A": 3,
        "370:A": 8,
        "257:A": 2,
        "416:A": 2,
        "358:A": 3,
        "192:A": 4,
        "234:A": 5,
        "462:A": 8,
        "305:A": 5,
        "197:A": 1,
        "1108:D": 4,
        "1628:A": 2,
        "1624:D": 10,
        "1451:C": 5,
        "1605:C": 8,
        "448:B": 9,
        "1167:C": 2,
        "1820:C": 13,
        "18:A": 4,
        "374:A": 2,
        "393:A": 2,
        "390:A": 3,
        "397:A": 2,
        "1816:C": 25,
        "1320:A": 3,
        "1535:C": 5,
        "1303:B": 6,
        "1354:C2": 2,
        "1354:C1": 3,
        "1312:C": 5,
        "1548:A": 1,
        "1515:C": 6,
        "1393:B": 4,
        "1805:C": 13,
        "277:A": 1,
        "1490:E": 5,
        "1362:C": 6,
        "550:B": 6,
        "538:B": 2,
        "1332:B": 7,
        "1355:D": 7,
        "1463:B": 7,
        "1798:C": 7,
        "1520:E": 8,
        "1369:C": 8,
        "1806:D": 1,
        "1506:D": 8,
        "1806:C": 6,
        "1380:C": 12,
        "1475:C": 6,
        "414:B": 1,
        "1311:C": 6,
        "1804:D": 5,
        "486:B": 8,
        "1802:D": 2,
        "1627:B": 10,
        "617:B": 9,
        "1795:C": 10,
        "1350:B": 12,
        "1794:D": 3,
        "1802:C": 8,
        "1374:D": 11,
        "1365:C": 7,
        "1418:B": 10,
        "1420:C1": 5,
        "1799:C": 3,
        "380:C": 2,
        "339:D": 1,
        "1789:C": 7,
        "1327:B": 7,
        "1324:D": 15,
        "1348:B": 10,
        "1407:B": 7,
        "1433:E": 6,
        "1373:C": 6,
        "217:A": 6,
        "1624:C": 28,
        "893:C": 9,
        "1466:C": 4,
        "1366:B": 12,
        "519:C": 10,
        "1497:C2": 6,
        "1341:B": 6,
        "136:B": 1,
        "967:A": 1,
        "159:B": 1,
        "883:M": 1,
        "1642:C": 10,
        "1553:C": 12,
        "1559:C": 18,
        "1561:C": 8,
        "102961:H": 3,
        "535:B": 11,
        "1068:B": 5,
        "1511:B": 24,
        "1107:B": 10,
        "1085:B": 4,
        "911:B": 5,
        "776:A": 3,
        "302:B": 1,
        "1362:B": 6,
        "1202:A": 3,
        "243:A": 1,
        "484:A": 4,
        "379:B": 1,
        "6:B": 17,
        "100971:F": 1,
        "100971:D": 1,
        "100971:L": 1,
        "100971:G": 1,
        "100971:K": 1,
        "100971:B": 1,
        "100971:C": 1,
        "1036:C": 2,
        "797:B": 5,
        "101853:C": 1,
        "101853:A": 2,
        "101853:I": 3,
        "1739:E": 2,
        "1020:B": 9,
        "1051:C": 1,
        "101755:J": 1,
        "665:C": 2,
        "859:C": 1,
        "56:D": 1,
        "100886:G": 1,
        "628:D": 1,
        "798:C": 1,
        "undefined:102": 1,
        "1177:B": 1,
        "977:F": 5,
        "264:B": 1,
        "630:F": 4,
        "102267:I": 1,
        "102267:H": 2,
        "102267:B": 9,
        "102267:K": 4,
        "102267:C": 5,
        "43:C": 2,
        "1459:C": 4,
        "1062:B": 1,
        "101653:M": 1,
        "101653:N": 1,
        "103256:E1": 1,
        "103256:C": 2,
        "103256:B": 4,
        "103256:A": 4,
        "103736:A": 2,
        "101341:B": 1,
        "101341:G": 1,
        "101341:M": 1,
        "101341:D": 1,
        "102267:D": 1,
        "1682:C": 16,
        "102535:C": 3,
        "100819:M": 1,
        "100819:T": 2,
        "100819:R": 2,
        "100819:P": 2,
        "100819:Q": 1,
        "100819:N": 1,
        "1121:B": 3,
        "462:B": 13,
        "961:B": 11,
        "1526:C2": 10,
        "15:A": 1,
        "1077:B": 13,
        "322:A": 2,
        "659:C": 2,
        "548:A": 1,
        "888:A": 5,
        "1220:B": 3,
        "1237:B": 7,
        "1236:C": 5,
        "1459:B": 5,
        "1742:G": 8,
        "1730:B": 17,
        "1774:E": 2,
        "1774:D": 6,
        "1767:D": 8,
        "1762:D": 2,
        "1758:D": 10,
        "1761:C": 13,
        "1759:E": 11,
        "1740:E": 3,
        "1740:D": 7,
        "716:A": 12,
        "215:A": 12,
        "1413:A": 4,
        "246:A": 3,
        "711:A": 20,
        "38:A": 8,
        "1490:A": 25,
        "499:A": 5,
        "363:A": 6,
        "424:A": 9,
        "104119:1": 1,
        "415:A": 5,
        "408:A": 6,
        "426:A": 3,
        "595:A": 5,
        "127:A": 10,
        "591:A": 5,
        "298:B": 9,
        "1178:C": 6,
        "296:A": 31,
        "353:A": 17,
        "254:A": 9,
        "350:A": 13,
        "258:A": 19,
        "242:B": 14,
        "342:A": 9,
        "186:A": 16,
        "1514:A": 18,
        "999:C": 16,
        "676:A": 7,
        "680:A": 4,
        "262:A": 12,
        "378:A": 13,
        "278:A": 5,
        "389:B": 1,
        "1566:A": 26,
        "1450:B": 11,
        "1450:A": 7,
        "387:A": 3,
        "100247:H": 1,
        "100247:D": 1,
        "79:A": 1,
        "343:B": 5,
        "343:A": 1,
        "1015:B": 4,
        "1064:A": 10,
        "978:E": 1,
        "6:A": 9,
        "102697:004": 3,
        "1236:A": 7,
        "914:A": 8,
        "11:A": 7,
        "1030:B": 4,
        "1009:B": 2,
        "1250:F": 6,
        "750:B": 1,
        "12:E": 1,
        "12:C": 3,
        "12:B": 11,
        "12:A": 5,
        "81:A": 5,
        "17:A": 12,
        "102697:164": 1,
        "102697:020": 1,
        "102697:019": 1,
        "102697:018": 2,
        "102697:017": 2,
        "102697:016": 2,
        "102697:014": 2,
        "102697:013": 2,
        "102697:012": 2,
        "102697:011": 3,
        "102697:010": 1,
        "102697:009": 3,
        "102697:008": 1,
        "102697:007": 2,
        "102697:006": 3,
        "102697:005": 4,
        "102697:003": 2,
        "102697:001": 4,
        "546:B": 9,
        "376:A": 3,
        "102263:A": 1,
        "1699:B": 38,
        "215:B": 5,
        "88:B": 7,
        "810:B": 15,
        "1547:B": 18,
        "78:B": 26,
        "384:A": 7,
        "721:A": 7,
        "289:A": 11,
        "454:A": 5,
        "950:A": 8,
        "382:A": 15,
        "218:A": 14,
        "244:A": 4,
        "489:A": 4,
        "702:B": 1,
        "817:C": 2,
        "1077:D": 2,
        "1352:F": 6,
        "1352:E": 6,
        "3:A": 7,
        "103968:A": 2,
        "1552:A": 18,
        "1728:D": 5,
        "1713:C": 33,
        "1706:C": 13,
        "1703:E": 28,
        "1566:C": 13,
        "145:A": 3,
        "1132:A": 4,
        "1594:B": 19,
        "805:A": 6,
        "1195:A": 7,
        "1117:B": 9,
        "1011:A": 5,
        "1270:A": 4,
        "1584:A": 9,
        "246:B": 7,
        "937:A": 7,
        "631:A": 5,
        "1530:B": 7,
        "1512:B": 19,
        "1260:B": 11,
        "1187:B": 5,
        "186:B": 6,
        "1466:B": 7,
        "1288:B": 3,
        "209:A": 1,
        "1225:A": 15,
        "1136:A": 4,
        "1398:C": 5,
        "922:A": 2,
        "1062:A": 3,
        "280:B": 1,
        "1080:A": 6,
        "1191:A": 6,
        "897:A": 6,
        "867:A": 8,
        "727:A": 10,
        "832:A": 7,
        "409:D": 2,
        "1331:A": 6,
        "409:H": 4,
        "409:B": 2,
        "409:A": 2,
        "409:F": 1,
        "1647:B": 19,
        "267:A": 9,
        "793:A": 4,
        "441:A": 9,
        "1684:D": 6,
        "527:A": 3,
        "1684:C": 15,
        "1399:D": 4,
        "1055:A": 5,
        "948:A": 7,
        "755:A": 15,
        "1675:D": 11,
        "1669:H": 16,
        "1248:B": 18,
        "1102:C": 2,
        "103158:L": 1,
        "102697:119": 1,
        "102757:A": 1,
        "102942:B": 2,
        "102830:A": 2,
        "102873:A": 2,
        "630:R": 5,
        "103647:A": 2,
        "102697:002": 3,
        "103562:B": 3,
        "103317:B": 1,
        "103317:A": 2,
        "103294:A": 2,
        "103347:B": 1,
        "103347:A": 1,
        "103455:A": 2,
        "103562:A": 2,
        "103584:A": 1,
        "103624:A": 2,
        "103647:B": 2,
        "1589:A": 3,
        "102948:B": 1,
        "102948:A": 2,
        "102986:B": 1,
        "102986:A": 1,
        "103036:A": 1,
        "103380:A": 1,
        "103269:C": 1,
        "103269:A": 1,
        "979:A": 5,
        "102397:F": 3,
        "102397:C": 3,
        "102397:A": 3,
        "102397:B": 3,
        "33:A": 2,
        "1166:A": 6,
        "1266:B": 9,
        "1174:A": 9,
        "1422:A": 5,
        "1102:A": 12,
        "103624:C": 1,
        "103624:B": 1,
        "707:C": 3,
        "304:A": 9,
        "799:B": 13,
        "63:A": 8,
        "225:A": 19,
        "1481:B": 8,
        "1610:B": 19,
        "1455:C": 8,
        "1445:B": 10,
        "1438:B": 21,
        "1430:A": 17,
        "1428:C": 13,
        "1637:B": 24,
        "1631:B": 18,
        "1623:B": 12,
        "1625:B": 15,
        "1447:B": 15,
        "79:B": 9,
        "415:B": 1,
        "614:B": 1,
        "475:A": 1,
        "369:B": 1,
        "716:B": 3,
        "560:A": 5,
        "552:A": 1,
        "535:A": 2,
        "376:B": 3,
        "400:B": 6,
        "137:A": 3,
        "152:B": 6,
        "148:B": 6,
        "667:A": 4,
        "287:B": 6,
        "1108:A": 8,
        "100283:K": 1,
        "100283:E": 1,
        "100814:B": 1,
        "100814:I": 1,
        "100814:F": 3,
        "1538:F": 6,
        "1443:A": 7,
        "1676:H2": 5,
        "1714:E": 14,
        "1572:A": 1,
        "1694:C": 12,
        "732:D": 1,
        "1668:C": 5,
        "1475:G": 1,
        "1353:F": 2,
        "1433:G": 2,
        "1702:E": 8,
        "1700:D": 3,
        "1625:C": 2,
        "1312:D": 1,
        "1131:A": 3,
        "66:A": 4,
        "101810:I": 1,
        "101810:B": 1,
        "1428:A": 3,
        "1612:A": 12,
        "1659:B": 9,
        "1679:C": 7,
        "1517:C": 5,
        "1509:B": 17,
        "1516:B": 4,
        "1514:C": 5,
        "1279:A": 11,
        "1282:A": 8,
        "1313:A": 8,
        "1321:A": 7,
        "1419:A": 8,
        "814:A": 4,
        "101021:1": 4,
        "1488:A": 1,
        "1546:B": 4,
        "1492:B": 11,
        "1511:C": 16,
        "1529:B": 15,
        "1523:B": 6,
        "1534:B": 10,
        "1566:D1": 7,
        "1574:B": 12,
        "1579:B": 17,
        "910:B": 1,
        "835:A": 6,
        "1216:A": 5,
        "660:A": 7,
        "114:A": 7,
        "675:A": 6,
        "808:A": 3,
        "1827:A": 8,
        "1667:F": 1,
        "938:A": 2,
        "938:B": 1,
        "363:C": 3,
        "629:A": 5,
        "1822:G1": 5,
        "1201:B": 6,
        "253:B": 7,
        "1534:A": 2,
        "1523:A": 3,
        "1658:C": 3,
        "1658:D1": 3,
        "1644:D": 1,
        "1648:A": 4,
        "1654:C": 8,
        "1647:C": 12,
        "1651:C": 5,
        "1650:D": 13,
        "1646:C": 4,
        "1513:A": 8,
        "1638:C": 9,
        "1739:C": 5,
        "1782:C": 4,
        "1766:D": 4,
        "1088:B": 7,
        "895:A": 2,
        "1831:C": 9,
        "1825:C": 14,
        "1797:C": 7,
        "1793:D": 3,
        "1029:A": 2,
        "1030:C": 2,
        "1037:A": 4,
        "1037:B": 3,
        "1038:C": 1,
        "1065:B": 1,
        "1076:A": 10,
        "1076:C": 5,
        "1077:C": 7,
        "1093:C": 1,
        "1096:B": 3,
        "1104:B": 9,
        "1108:C": 1,
        "1165:C": 3,
        "1174:B": 13,
        "1174:C": 3,
        "1176:C": 3,
        "1307:B": 2,
        "1549:B": 12,
        "1721:C": 18,
        "1708:C": 6,
        "1699:C": 4,
        "1451:A": 9,
        "1583:A": 5,
        "1604:A": 20,
        "1617:A": 17,
        "1700:C": 4,
        "1695:C": 6,
        "1201:A": 13,
        "1163:A": 5,
        "1433:B": 17,
        "1006:B": 6,
        "1139:B": 9,
        "32:A": 6,
        "112:C": 1,
        "242:C": 2,
        "960:B": 2,
        "960:A": 4,
        "768:B": 1,
        "1017:A": 5,
        "706:A": 4,
        "1345:A": 8,
        "439:B": 7,
        "1817:A": 6,
        "1527:C": 1,
        "710:B": 2,
        "488:A": 11,
        "1393:A": 7,
        "1375:A": 6,
        "735:A": 3,
        "101968:D": 1,
        "1426:C": 13,
        "162:B": 1,
        "162:A": 1,
        "188:A": 3,
        "188:F": 1,
        "188:D": 2,
        "188:C": 1,
        "188:B": 1,
        "719:A": 7,
        "104308:C": 1,
        "104303:B": 1,
        "104339:B": 2,
        "104303:A": 2,
        "104308:G": 2,
        "104168:B1": 1,
        "104168:A": 3,
        "104257:E": 2,
        "104257:A": 4,
        "104282:A": 3,
        "104289:B": 2,
        "104289:C": 3,
        "104237:E": 1,
        "104237:B": 1,
        "104237:A": 3,
        "104262:C": 1,
        "104261:C": 1,
        "104261:B": 3,
        "104261:A": 2,
        "1144:B": 7,
        "1144:A": 10,
        "104246:G": 1,
        "104246:F": 1,
        "104246:H": 4,
        "104246:C": 1,
        "104246:D": 4,
        "104246:A": 6,
        "1589:B": 4,
        "1589:C": 4,
        "1452:C": 11,
        "1452:A": 5,
        "1776:L": 2,
        "1776:F": 2,
        "637:B": 13,
        "1278:A": 12,
        "1397:B": 5,
        "1659:C": 5,
        "1515:D": 2,
        "1552:B": 4,
        "1630:A": 2,
        "1621:B": 4,
        "1673:C": 4,
        "1419:D2": 6,
        "1462:E1": 4,
        "1487:D": 4,
        "1492:C": 4,
        "1272:D": 5,
        "1234:C": 3,
        "1389:C": 3,
        "1490:F": 4,
        "1304:C": 3,
        "1418:C": 4,
        "1547:E": 2,
        "1276:A": 3,
        "1215:B": 3,
        "1461:B": 3,
        "1195:B": 11,
        "1667:A": 8,
        "1217:A": 4,
        "1498:B": 6,
        "1641:A": 19,
        "174:A": 2,
        "104:A": 6,
        "177:A2": 3,
        "181:A": 1,
        "177:A1": 5,
        "1398:B": 5,
        "1425:A": 5,
        "1251:B": 5,
        "1392:C": 12,
        "1143:B": 8,
        "103688:I": 2,
        "101147:D": 2,
        "602:B": 3,
        "101915:K": 1,
        "101915:D": 1,
        "101915:A": 1,
        "101915:H": 1,
        "101915:F": 2,
        "101915:C": 1,
        "369:A": 5,
        "104069:H": 1,
        "104069:F": 1,
        "104069:E": 1,
        "104069:G": 1,
        "104069:D": 2,
        "104069:I": 1,
        "778:A": 2,
        "754:B": 2,
        "102881:N": 1,
        "1045:I": 1,
        "733:A": 3,
        "465:A": 2,
        "45:A": 6,
        "519:A": 8,
        "670:D2": 5,
        "670:D1": 6,
        "998:B": 8,
        "1384:A": 9,
        "101147:H": 1,
        "30:A": 1,
        "101810:C": 2,
        "743:A": 2,
        "877:A": 3,
        "461:A": 6,
        "755:B": 3,
        "1119:A": 3,
        "842:A": 3,
        "1121:A": 2,
        "792:A": 3,
        "1105:A": 2,
        "712:B": 2,
        "285:A": 8,
        "534:A": 9,
        "471:A": 3,
        "245:B": 4,
        "101257:D": 4,
        "845:A": 2,
        "630:J": 8,
        "1461:D": 1,
        "109:A": 10,
        "989:A": 4,
        "745:A": 2,
        "955:A": 2,
        "975:A": 6,
        "1073:A": 6,
        "251:A": 5,
        "103937:C": 2,
        "103937:A": 2,
        "1743:D": 6,
        "100003:C": 1,
        "100003:A": 1,
        "100003:E": 1,
        "1316:A": 5,
        "954:B": 2,
        "1511:D": 1,
        "102892:3": 1,
        "1629:B": 21,
        "782:A": 5,
        "1737:C": 6,
        "1725:G": 13,
        "1601:A": 3,
        "1415:A": 5,
        "1765:K": 2,
        "630:B": 4,
        "1453:B": 4,
        "1513:B": 2,
        "1573:B": 8,
        "1315:C": 5,
        "1585:C": 4,
        "1534:C": 2,
        "1326:C": 5,
        "1606:C": 4,
        "1351:C": 5,
        "1279:C": 3,
        "1266:C": 1,
        "1263:C": 2,
        "1256:B": 3,
        "1271:C": 2,
        "1220:C": 2,
        "1323:B": 2,
        "1301:B": 4,
        "1278:B": 3,
        "1368:B": 4,
        "1379:B": 2,
        "1486:B": 3,
        "1316:B": 2,
        "1263:B": 3,
        "1253:B": 1,
        "1408:B": 2,
        "1753:B": 4,
        "103828:J": 1,
        "347:A": 7,
        "undefined:460": 1,
        "1214:B": 5,
        "257:B": 3,
        "682:B": 3,
        "518:B": 3,
        "958:C1": 1,
        "614:A": 1,
        "262:B": 8,
        "583:B": 1,
        "765:B": 2,
        "1263:D": 2,
        "100093:D": 1,
        "100093:B": 1,
        "100093:C": 1,
        "100249:B": 1,
        "100249:A": 1,
        "103785:C": 2,
        "103785:B": 4,
        "103785:A": 6,
        "774:C": 2,
        "102961:F": 3,
        "1288:C": 4,
        "102961:D": 1,
        "102961:E": 3,
        "102961:C": 4,
        "102961:B": 2,
        "102961:A": 7,
        "1271:A": 3,
        "757:B": 5,
        "1415:B": 4,
        "1547:C": 12,
        "1407:A": 11,
        "841:B": 5,
        "1413:B": 3,
        "842:B": 2,
        "1042:A": 6,
        "505:A": 1,
        "1144:D": 2,
        "1141:D": 1,
        "1042:D": 2,
        "1118:B": 1,
        "1133:B": 8,
        "1102:B": 2,
        "1029:B": 7,
        "1066:B": 2,
        "102035:D": 1,
        "1203:A": 7,
        "1066:A": 5,
        "1629:C": 2,
        "1355:E": 1,
        "439:D": 2,
        "1631:C": 2,
        "1632:C": 3,
        "1649:C": 4,
        "1754:C2": 3,
        "1778:C": 7,
        "1790:F": 4,
        "982:B": 1,
        "875:A": 3,
        "1140:D": 2,
        "1591:C": 2,
        "1559:D1": 2,
        "525:B": 1,
        "1583:B": 4,
        "567:B": 1,
        "545:C": 4,
        "1426:D": 5,
        "102644:C": 1,
        "1536:B": 8,
        "1581:B": 11,
        "1575:A": 7,
        "1805:D": 7,
        "1214:A": 2,
        "1023:A": 5,
        "957:A": 3,
        "754:A": 3,
        "787:A": 3,
        "1068:A": 1,
        "834:A": 4,
        "876:A": 4,
        "1100:A": 1,
        "892:A": 5,
        "1075:A": 2,
        "765:A": 2,
        "1209:A": 1,
        "851:A": 1,
        "1038:A": 3,
        "1189:A": 4,
        "1269:A": 13,
        "1028:A": 1,
        "1243:A": 5,
        "1088:A": 8,
        "984:A": 9,
        "994:A": 4,
        "1244:A": 6,
        "144:B": 2,
        "892:B": 1,
        "102951:A": 7,
        "743:B": 4,
        "987:B": 4,
        "975:B": 2,
        "1011:B": 1,
        "758:B": 1,
        "934:B": 4,
        "1153:B": 1,
        "822:B": 3,
        "779:B": 3,
        "984:B": 1,
        "834:B": 1,
        "94:A": 4,
        "841:A": 4,
        "1076:B": 5,
        "992:A": 4,
        "621:B": 1,
        "134:A": 3,
        "3:C": 3,
        "747:A": 4,
        "681:A": 5,
        "1148:A": 6,
        "1281:A": 5,
        "1323:A": 4,
        "1207:A": 6,
        "1093:A": 3,
        "964:A": 3,
        "873:A": 2,
        "1499:A": 4,
        "1197:A": 4,
        "977:E": 9,
        "1774:H": 1,
        "1207:B": 4,
        "1191:B": 1,
        "1117:A": 3,
        "1105:B": 2,
        "1099:B": 2,
        "1366:C": 1,
        "1332:C": 2,
        "1313:C1": 1,
        "1307:C": 1,
        "1296:D": 2,
        "1296:C": 4,
        "1269:B": 1,
        "1264:A": 1,
        "1256:D": 1,
        "1242:A": 1,
        "1236:B": 3,
        "1473:C": 1,
        "1461:C": 2,
        "1427:B": 1,
        "1586:B": 1,
        "1586:A": 1,
        "1421:C": 4,
        "1725:H": 2,
        "1180:B": 3,
        "1346:B": 2,
        "1183:D": 3,
        "1282:B1": 1,
        "1662:H": 1,
        "1662:M": 1,
        "1662:A": 2,
        "102878:A": 1,
        "1228:B": 1,
        "1711:C": 5,
        "1322:A": 2,
        "103785:F": 2,
        "103785:D": 1,
        "1238:B": 5,
        "1225:B2": 3,
        "1216:D": 4,
        "1194:C": 5,
        "1194:B": 1,
        "1759:F": 2,
        "1768:D": 2,
        "1283:E": 1,
        "1437:C": 1,
        "1398:D": 1,
        "1381:B": 1,
        "1283:D": 1,
        "1692:H": 5,
        "1672:D": 2,
        "1681:D": 3,
        "1183:C": 1,
        "1688:C": 4,
        "1690:F": 2,
        "1343:D": 2,
        "1693:B": 1,
        "1260:C": 1,
        "1253:D": 1,
        "1706:D1": 3,
        "1169:C": 1,
        "978:F": 2,
        "1037:D": 4,
        "1714:G": 3,
        "1324:E": 2,
        "1554:B": 1,
        "1760:G": 4,
        "1491:C": 1,
        "1368:D": 2,
        "1336:B": 1,
        "1528:B": 3,
        "1165:E": 2,
        "1610:C": 3,
        "1165:D": 7,
        "1455:D": 2,
        "1389:B": 2,
        "1349:A": 3,
        "1303:C": 1,
        "1665:C": 3,
        "1680:C": 3,
        "1688:D": 3,
        "1689:C": 5,
        "1703:G": 6,
        "1741:E": 6,
        "1336:A": 1,
        "1326:D1": 1,
        "1326:D2": 1,
        "1338:A": 2,
        "1710:A": 1,
        "1742:F": 12,
        "1753:A2": 1,
        "1372:C": 4,
        "181:B": 1,
        "1284:B": 1,
        "1100:B": 1,
        "1607:D": 9,
        "1428:B": 5,
        "1245:B": 3,
        "1110:B": 1,
        "1675:E": 4,
        "1187:A": 6,
        "1556:B": 2,
        "1603:A": 9,
        "1424:G": 4,
        "1422:B": 2,
        "6:C": 4,
        "803:B": 2,
        "482:A": 1,
        "1150:C": 1,
        "137:B": 14,
        "651:B": 2,
        "1140:B": 2,
        "708:A": 2,
        "625:B": 1,
        "1155:B": 3,
        "1257:C": 6,
        "1033:A": 3,
        "372:A": 3,
        "522:B": 1,
        "1772:E": 5,
        "1795:D": 4,
        "496:A": 8,
        "103920:A": 2,
        "318:B": 3,
        "1043:A": 4,
        "1057:A": 2,
        "1437:D": 2,
        "1101:B": 1,
        "104008:A": 1,
        "1707:F": 1,
        "1712:F": 1,
        "1713:E": 2,
        "1704:E": 2,
        "1705:D": 2,
        "1696:E": 3,
        "1447:D": 1,
        "1296:F": 3,
        "1702:G2": 4,
        "1510:K": 2,
        "1706:D2": 4,
        "1704:G": 1,
        "1586:I": 1,
        "1737:G": 1,
        "1685:D2": 1,
        "1779:H": 1,
        "1628:F": 1,
        "1394:E": 1,
        "1609:H": 1,
        "1718:E": 1,
        "1055:G": 1,
        "1770:H": 1,
        "1470:F": 1,
        "863:A": 7,
        "1726:H": 1,
        "1696:H": 1,
        "235:A": 3,
        "1761:G": 1,
        "799:F": 1,
        "1637:H": 1,
        "1110:H": 1,
        "1687:E": 1,
        "1147:F": 1,
        "1588:F": 1,
        "1608:G": 1,
        "1523:H": 1,
        "1305:H": 1,
        "1190:F": 1,
        "1536:A": 7,
        "1753:E": 1,
        "1783:D": 3,
        "1574:C": 5,
        "1754:D": 7,
        "1749:D": 2,
        "100985:L": 1,
        "659:E": 1,
        "103:B": 3,
        "825:C": 1,
        "946:C": 4,
        "915:B": 1,
        "915:A": 5,
        "1823:D": 4,
        "903:B": 1,
        "893:A": 3,
        "888:C": 1,
        "102569:F": 1,
        "102569:E": 1,
        "102569:M": 1,
        "911:A": 4,
        "1656:I": 1,
        "1635:F": 1,
        "1635:E": 1,
        "1635:D": 1,
        "620:A": 3,
        "102697:035": 3,
        "729:A": 2,
        "1056:A": 1,
        "135:A": 3,
        "412:A": 3,
        "169:A": 2,
        "90:B": 1,
        "99:B": 4,
        "48:A": 1,
        "55:A": 1,
        "101:A": 1,
        "102:A": 1,
        "813:C": 2,
        "638:B": 1,
        "633:B": 3,
        "1458:A": 8,
        "610:B": 3,
        "1471:C": 4,
        "1619:D": 1,
        "154:B": 1,
        "847:B": 1,
        "782:B": 2,
        "723:C": 1,
        "587:A": 1,
        "620:C": 1,
        "91:A": 1,
        "1765:N": 3,
        "797:C": 1,
        "271:D": 2,
        "126:B": 2,
        "1729:E": 5,
        "1792:D": 4,
        "879:A": 2,
        "624:A": 3,
        "884:A": 1,
        "1417:A": 4,
        "302:A": 2,
        "755:C": 4,
        "347:B": 6,
        "437:C": 3,
        "1305:A": 6,
        "1106:A": 2,
        "1315:A": 2,
        "914:D": 1,
        "1189:C": 1,
        "1678:B2": 7,
        "1678:C": 3,
        "1244:B": 7,
        "1197:B": 7,
        "103486:M": 1,
        "103486:A": 1,
        "602:A": 2,
        "101059:B": 1,
        "218:C": 1,
        "779:D": 1,
        "121:A": 3,
        "628:C": 3,
        "572:B": 2,
        "1468:C": 2,
        "615:A": 4,
        "476:D": 1,
        "742:B": 1,
        "630:K": 1,
        "102767:E": 1,
        "102767:D": 1,
        "102767:C": 1,
        "102767:B": 1,
        "102697:159": 1,
        "102680:D": 1,
        "102767:A": 1,
        "102397:J": 2,
        "103029:A": 1,
        "103029:B": 1,
        "1152:C": 1,
        "803:C": 2,
        "1034:A": 1,
        "1348:C": 1,
        "1689:E": 1,
        "1689:D": 2,
        "1581:A": 4,
        "1594:E1": 3,
        "27:B": 3,
        "760:B": 1,
        "1228:A": 5,
        "1063:A": 2,
        "1027:A": 4,
        "169:B": 2,
        "981:A": 5,
        "1405:A": 7,
        "932:A": 3,
        "1609:C": 1,
        "1284:C": 1,
        "1253:C": 1,
        "35:C": 1,
        "858:D": 1,
        "1188:A1": 1,
        "814:C": 2,
        "1151:D": 1,
        "748:B": 1,
        "1475:E": 2,
        "1084:C": 1,
        "1702:F": 4,
        "1225:D": 2,
        "817:B": 1,
        "1495:A": 5,
        "1255:C": 1,
        "500:B": 1,
        "1824:A": 5,
        "1826:D": 4,
        "104314:A": 1,
        "152:C": 2,
        "56:E": 1,
        "987:C": 4,
        "1787:C": 4,
        "1812:C": 3,
        "1579:C": 5,
        "1419:B": 4,
        "570:B": 1,
        "1184:B1": 2,
        "1409:D": 3,
        "807:C": 1,
        "1133:D": 1,
        "785:B": 2,
        "1400:D": 1,
        "104077:F": 2,
        "104077:J": 2,
        "104077:C": 1,
        "104065:M": 1,
        "104065:C": 1,
        "104023:A": 1,
        "104023:E": 1,
        "44:E": 2,
        "8:A": 2,
        "1841:C": 3,
        "1838:D": 2,
        "104053:H": 1,
        "104053:E": 1,
        "104053:L": 1,
        "104095:E": 1,
        "104095:C": 1,
        "104172:L": 1,
        "104095:A": 1,
        "104172:A": 1,
        "104090:K": 1,
        "104172:K": 1,
        "104172:H": 1,
        "104090:C": 1,
        "104090:A": 1,
        "104090:F": 2,
        "104090:D": 1,
        "104076:E": 1,
        "104076:A": 1,
        "104076:K": 1,
        "104076:M": 1,
        "1627:D": 2,
        "104059:C": 2,
        "104059:A": 1,
        "344:B": 2,
        "1540:A": 1,
        "1446:A": 3,
        "301:A": 1,
        "340:A": 1,
        "1499:C": 1,
        "41:B": 2,
        "911:D": 1,
        "220:A": 3,
        "53:C": 3,
        "9:B": 3,
        "56:B": 4,
        "69:B": 3,
        "88:A": 2,
        "61:B": 2,
        "103:A": 2,
        "437:A": 2,
        "242:A": 2,
        "584:B": 1,
        "150:B": 1,
        "102961:G": 8,
        "102152:C": 1,
        "102535:B": 1,
        "102535:A": 1,
        "1332:A": 4,
        "780:A": 4,
        "1809:D": 5,
        "104385:A": 2,
        "104385:L": 3,
        "104363:F": 1,
        "104363:A": 1,
        "103688:A": 1,
        "103688:H": 1,
        "103688:F": 1,
        "104354:A": 1,
        "104337:M": 1,
        "104337:C": 2,
        "552:B": 5,
        "1375:B": 6,
        "784:A": 2,
        "492:C": 4,
        "1821:D": 3,
        "1815:F": 1,
        "350:B": 1,
        "1810:D": 3,
        "771:A": 2,
        "1391:C": 1,
        "1223:A": 5,
        "1678:D": 1,
        "101532:A": 1,
        "102219:K": 1,
        "102219:J": 1,
        "102219:I": 1,
        "102219:B": 1,
        "100676:B": 1,
        "100676:C": 1,
        "100676:A": 1,
        "101532:B": 2,
        "101532:J": 1,
        "101532:G": 2,
        "1260:A": 5,
        "1741:G": 2,
        "118:E": 3,
        "1421:B": 3,
        "1176:E": 4,
        "803:A": 1,
        "221:C": 1,
        "221:B": 1,
        "1487:C": 4,
        "845:B": 1,
        "813:B": 1,
        "581:B": 1,
        "1295:D": 1,
        "1717:D": 2,
        "891:A": 1,
        "1025:B": 1,
        "305:B": 1,
        "632:C": 3,
        "1450:C1": 2,
        "75:B": 3,
        "154:A": 1,
        "962:C": 2,
        "1447:A": 2,
        "246:D": 1,
        "292:B": 2,
        "1092:D1": 2,
        "831:C": 2,
        "355:A": 6,
        "14:A": 2,
        "373:A": 4,
        "447:A": 3,
        "545:A": 2,
        "699:C": 3,
        "672:B": 8,
        "104283:B": 2,
        "1623:C": 2,
        "101611:A": 1,
        "260:A": 8,
        "427:B": 4,
        "1141:C": 1,
        "103800:A": 3,
        "1293:A": 3,
        "761:A": 4,
        "908:A": 4,
        "743:C": 1,
        "1465:B": 4,
        "101086:F": 1,
        "101028:I": 1,
        "102397:I": 2,
        "877:B": 2,
        "23:A": 2,
        "886:B": 1,
        "1130:C": 1,
        "103414:A": 1,
        "868:A": 3,
        "103495:A": 2,
        "914:B": 2,
        "1180:C": 1,
        "810:A": 2,
        "1156:B": 1,
        "1321:B": 1,
        "1059:A": 1,
        "1384:C": 1,
        "940:A": 1,
        "104128:G": 1,
        "104128:I": 1,
        "1637:D": 1,
        "990:B": 1,
        "1631:D": 2,
        "1660:D": 1,
        "1611:F": 2,
        "808:C": 2,
        "1616:C": 3,
        "576:A": 1,
        "131:C": 2,
        "1549:C": 1,
        "1100:C": 1,
        "732:C": 1,
        "1023:C": 1,
        "1656:E": 1,
        "1656:D": 2,
        "1342:C": 1,
        "1396:A": 1,
        "1423:K": 1,
        "1305:C": 2,
        "1603:B": 2,
        "102348:L": 1,
        "166:C": 1,
        "1447:C": 2,
        "1538:D": 1,
        "1157:F": 2,
        "1417:B": 3,
        "1555:B": 2,
        "879:B": 3,
        "1582:D": 2,
        "1395:B": 2,
        "1070:K": 1,
        "928:A": 2,
        "50:B": 1,
        "381:B": 1,
        "723:B": 2,
        "101744:K": 4,
        "101744:I": 1,
        "101744:E": 1,
        "101744:G": 2,
        "101744:L": 2,
        "618:B": 1,
        "102397:E": 2,
        "102397:D": 2,
        "39:D": 2,
        "1051:A": 1,
        "1505:B": 4,
        "976:A": 1,
        "954:A": 3,
        "1060:B": 1,
        "870:A": 2,
        "952:A": 3,
        "102942:C": 1,
        "312:A": 3,
        "102961:X": 1,
        "630:N": 3,
        "102892:2": 1,
        "45:I": 1,
        "1245:A": 4,
        "102152:H": 2,
        "102152:F": 1,
        "102152:G": 1,
        "101883:B": 1,
        "101883:A": 1,
        "691:B": 1,
        "1408:A": 1,
        "1307:A": 2,
        "965:A": 1,
        "1437:A": 6,
        "1556:A": 5,
        "1200:A": 4,
        "1783:E": 2,
        "1528:C": 1,
        "1528:A": 1,
        "4:D": 1,
        "1:C": 2,
        "1:B": 1,
        "315:A": 6,
        "104146:A": 2,
        "103091:B": 1,
        "103091:C": 1,
        "103091:K": 1,
        "103091:H": 1,
        "103091:N": 1,
        "103091:J": 1,
        "103091:A": 1,
        "101020:G": 1,
        "426:B": 1,
        "101350:C": 1,
        "818:A": 1,
        "80:B": 2,
        "997:A": 1,
        "612:A": 1,
        "704:A": 1,
        "103920:B": 1,
        "1166:C": 2,
        "171:B": 1,
        "1579:E2": 1,
        "265:C": 1,
        "104426:C": 1,
        "104426:N": 1,
        "104415:D": 1,
        "104412:I": 1,
        "104381:F": 1,
        "104381:A": 1,
        "104339:D": 1,
        "102501:C": 1,
        "104375:A": 1,
        "104375:B": 1,
        "104199:C": 1,
        "104336:A": 1,
        "104339:E": 1,
        "104339:A": 3,
        "104101:A": 2,
        "104037:A": 2,
        "104294:C": 1,
        "104312:A": 1,
        "102501:I": 1,
        "104317:A": 1,
        "104199:A": 1,
        "104264:A": 3,
        "104282:B": 1,
        "171:A": 2,
        "102697:178": 1,
        "102697:182": 1,
        "102697:030": 1,
        "102063:B": 1,
        "102063:A": 2,
        "102993:D": 1,
        "102697:027": 1,
        "102697:029": 2,
        "102697:037": 1,
        "102697:028": 1,
        "100699:N1": 1,
        "104002:A": 1,
        "104217:B": 2,
        "104217:A": 3,
        "103895:C": 1,
        "103895:A": 3,
        "456:B": 3,
        "1778:D": 2,
        "1780:D": 2,
        "148:C": 1,
        "64:E": 1,
        "100155:D": 1,
        "104380:J": 1,
        "159:D": 1,
        "64:C": 1,
        "64:F": 1,
        "64:B": 1,
        "64:A": 1,
        "102215:C": 1,
        "101652:N": 2,
        "784:B": 1,
        "103256:E2": 1,
        "159:A": 1,
        "952:D": 1,
        "1145:B": 1,
        "1505:I": 2,
        "86:D": 1,
        "100227:J": 1,
        "102191:A": 1,
        "495:B": 1,
        "104059:I": 1,
        "104059:L": 1,
        "104059:E": 1,
        "104059:K": 1,
        "24:A": 1,
        "897:B": 1,
        "227:A": 1,
        "1788:D": 2,
        "1151:B": 1,
        "699:B": 1,
        "1089:L": 2,
        "102152:I": 1,
        "1512:G": 1,
        "549:A": 2,
        "385:C": 1,
        "1553:D": 2,
        "777:B": 1,
        "84:B": 1,
        "104157:F": 1,
        "104024:A": 1,
        "612:B": 1,
        "630:H": 1,
        "629:B": 2,
        "1000:A": 1,
        "104386:C": 1,
        "104386:B": 2,
        "104386:A": 2,
        "808:D": 2,
        "1157:E": 1,
        "1007:A": 2,
        "101102:C": 1,
        "102830:C": 1,
        "102830:B": 1,
        "102873:B": 1,
        "102873:F": 1,
        "102873:D": 1,
        "102873:C": 1,
        "103937:D": 2,
        "103937:B": 1,
        "103562:C": 1,
        "103562:G": 1,
        "103562:E": 1,
        "690:C2": 1,
        "177:C1": 1,
        "177:C2": 1,
        "100712:J": 1,
        "100712:C": 2,
        "100712:G": 1,
        "100712:F": 1,
        "100712:K": 2,
        "100712:E": 2,
        "100712:A": 2,
        "104015:A": 1,
        "104015:B": 1,
        "27:C": 1,
        "103495:I": 1,
        "103495:K": 1,
        "377:A": 1,
        "103373:C": 1,
        "932:B": 1,
        "177:D2": 2,
        "102961:J": 1,
        "1304:E": 2,
        "1569:C": 2,
        "1561:B": 1,
        "915:F": 1,
        "1239:D": 1,
        "1611:D": 1,
        "1611:E1": 1,
        "1714:F": 2,
        "689:E": 2,
        "612:D": 1,
        "1720:D1": 2,
        "1677:A": 1,
        "1715:D": 2,
        "484:B": 2,
        "474:F": 2,
        "837:C": 1,
        "837:B": 1,
        "1719:D1": 2,
        "825:B": 1,
        "818:E": 1,
        "566:D": 1,
        "1716:E": 1,
        "986:A": 1,
        "464:A": 1,
        "830:A": 2,
        "1716:C": 3,
        "1684:E": 2,
        "1311:F": 2,
        "1706:E": 2,
        "1709:C": 2,
        "25:D": 2,
        "1328:E": 2,
        "920:F": 2,
        "1702:G1": 3,
        "1698:E": 1,
        "1698:D": 4,
        "461:B": 1,
        "100963:J": 1,
        "447:C": 1,
        "959:E": 1,
        "1363:C": 1,
        "1536:C": 2,
        "744:A": 1,
        "282:E": 1,
        "1600:J": 1,
        "1768:F": 1,
        "510:B": 1,
        "60:B": 1,
        "1769:C1": 1,
        "1106:D": 2,
        "505:B": 1,
        "1747:D": 2,
        "1767:C": 1,
        "1203:D1": 1,
        "1213:G": 1,
        "1081:D": 1,
        "115:E": 1,
        "359:C": 1,
        "706:D": 1,
        "1744:F": 2,
        "1754:F": 1,
        "1061:C": 2,
        "1253:F": 1,
        "1521:D": 1,
        "1197:E": 1,
        "811:A": 3,
        "978:D": 3,
        "1741:F": 1,
        "1736:E": 1,
        "1736:D": 1,
        "676:D": 1,
        "488:D": 1,
        "1737:D": 1,
        "1088:D": 1,
        "600:D": 1,
        "1735:E": 2,
        "1735:D": 2,
        "1738:E": 2,
        "1738:D": 1,
        "1739:D": 2,
        "842:D": 1,
        "1734:D": 1,
        "1734:E": 1,
        "1730:E": 2,
        "1730:D": 1,
        "1719:E": 1,
        "485:D": 1,
        "1271:D": 1,
        "1201:D": 1,
        "1733:D2": 2,
        "1323:D": 1,
        "814:D": 1,
        "1269:D": 1,
        "401:D": 1,
        "1726:D": 1,
        "1173:D": 1,
        "1131:D": 1,
        "1725:D": 1,
        "1725:C": 1,
        "1725:K": 1,
        "1725:F": 1,
        "1725:I": 1,
        "1725:L": 1,
        "1725:J": 1,
        "1725:M": 1,
        "1717:E": 1,
        "1237:D": 1,
        "1457:D": 1,
        "1525:C": 1,
        "556:D": 1,
        "1722:F": 3,
        "1605:D": 1,
        "1721:E": 2,
        "1721:D": 2,
        "598:E": 1,
        "864:E": 1,
        "579:E": 1,
        "495:C": 1,
        "495:D": 1,
        "1719:D2": 1,
        "766:D": 1,
        "792:C": 1,
        "1589:D": 1,
        "1715:E": 1,
        "1257:E": 1,
        "1720:D2": 1,
        "1241:D": 1,
        "1304:F1": 1,
        "1304:F2": 1,
        "454:D": 1,
        "1350:D": 1,
        "1426:F": 2,
        "1712:E1": 1,
        "1712:E2": 1,
        "1712:D": 1,
        "1200:F": 1,
        "1200:E": 1,
        "1200:D": 1,
        "1359:E": 1,
        "1612:D": 1,
        "999:E": 1,
        "999:F": 1,
        "1345:D": 1,
        "1654:D": 1,
        "1713:D": 1,
        "1716:D": 1,
        "1679:D": 2,
        "1704:D": 1,
        "1493:C": 1,
        "1690:G": 2,
        "1244:C": 1,
        "1711:D": 1,
        "1709:E": 1,
        "1709:D": 1,
        "1459:D": 1,
        "1708:E": 1,
        "1708:D": 1,
        "1705:E": 1,
        "545:E": 1,
        "1296:E2": 2,
        "776:D": 1,
        "451:D": 1,
        "1438:C": 2,
        "1359:D": 1,
        "1701:E": 1,
        "1701:D": 1,
        "1699:D": 1,
        "1612:E": 1,
        "462:D": 1,
        "1680:E": 1,
        "1682:D": 1,
        "1696:D": 1,
        "337:D": 1,
        "1642:D": 1,
        "1686:D": 1,
        "1582:E": 1,
        "250:D": 1,
        "895:C": 1,
        "1695:D1": 1,
        "1695:D2": 1,
        "1694:E": 1,
        "1694:D": 2,
        "710:E": 1,
        "1697:E": 1,
        "1697:D": 1,
        "796:D": 1,
        "703:D": 1,
        "1360:H": 2,
        "1217:D": 1,
        "343:D": 1,
        "920:E": 2,
        "1788:F": 1,
        "1788:E": 1,
        "208:E": 1,
        "456:E": 1,
        "519:E": 1,
        "1187:E": 2,
        "237:D": 1,
        "34:E": 1,
        "59:D": 1,
        "131:F": 1,
        "109:D": 1,
        "58:D": 1,
        "61:C": 1,
        "413:D": 1,
        "50:C": 1,
        "262:E": 1,
        "435:D": 1,
        "13:B": 1,
        "82:C": 1,
        "1787:E": 1,
        "1787:D": 1,
        "119:C": 1,
        "18:E": 1,
        "18:D": 1,
        "1780:F": 1,
        "1780:E": 1,
        "128:D": 1,
        "1792:E": 1,
        "433:D": 1,
        "263:C": 1,
        "1777:E": 1,
        "1777:D": 1,
        "818:C": 1,
        "807:D": 1,
        "872:D": 1,
        "189:E": 1,
        "10:C": 1,
        "427:E": 1,
        "281:C": 1,
        "237:E": 1,
        "1092:E": 1,
        "379:D": 1,
        "513:C": 1,
        "75:D": 1,
        "318:D": 1,
        "492:E": 1,
        "664:C": 1,
        "259:E": 1,
        "659:F": 1,
        "412:D": 1,
        "1783:F": 1,
        "368:E": 1,
        "1102:F": 1,
        "681:D": 1,
        "1768:E": 1,
        "890:D": 1,
        "1779:E": 1,
        "509:E": 1,
        "82:D": 1,
        "1165:F1": 1,
        "1165:F2": 1,
        "761:E": 1,
        "1770:D": 1,
        "975:D": 1,
        "509:C": 1,
        "1731:E": 1,
        "15:C": 1,
        "844:D": 1,
        "697:E": 1,
        "557:D": 1,
        "817:E": 1,
        "1130:E": 1,
        "1191:F": 1,
        "1763:E": 1,
        "1763:D": 1,
        "1772:F": 1,
        "1772:G": 1,
        "1183:G": 1,
        "501:D": 1,
        "615:C": 1,
        "787:C": 1,
        "1766:E": 1,
        "1771:E": 1,
        "1771:D": 1,
        "609:D": 1,
        "721:D": 1,
        "911:E": 1,
        "572:D": 1,
        "755:D": 1,
        "611:D": 1,
        "749:D": 1,
        "1234:E": 1,
        "353:D": 1,
        "265:E": 1,
        "669:E": 1,
        "629:C": 1,
        "758:D": 1,
        "400:D": 1,
        "515:D": 1,
        "1009:E": 1,
        "389:E": 1,
        "1316:D": 1,
        "236:D": 1,
        "1199:E": 1,
        "672:D": 1,
        "1288:E": 1,
        "1230:E": 1,
        "1764:E": 1,
        "1764:D": 1,
        "1758:E": 1,
        "1080:D": 1,
        "1068:D": 1,
        "964:D": 1,
        "934:D": 1,
        "1761:E": 1,
        "1761:D": 1,
        "1754:E": 1,
        "1759:G": 1,
        "897:D": 1,
        "862:D": 1,
        "465:D": 1,
        "1748:E": 1,
        "1750:E": 1,
        "1185:E": 1,
        "1082:E": 1,
        "1104:D": 1,
        "1266:D": 1,
        "900:D": 1,
        "474:C": 1,
        "1728:E": 2,
        "474:E": 1,
        "526:C": 1,
        "447:D": 1,
        "469:C": 1,
        "892:E": 1,
        "892:C": 1,
        "892:D": 1,
        "469:D": 1,
        "1526:D": 1,
        "1743:E": 1,
        "1746:D": 1,
        "231:E": 1,
        "854:E": 1,
        "1099:E": 1,
        "588:D": 1,
        "1841:E": 1,
        "1841:D": 2,
        "552:E": 1,
        "837:E": 1,
        "165:D": 1,
        "276:E": 1,
        "520:C": 1,
        "520:D": 1,
        "752:E": 1,
        "793:D": 1,
        "1840:G1": 2,
        "1840:G2": 2,
        "811:D": 1,
        "1776:G": 2,
        "577:D": 1,
        "1839:E": 1,
        "1839:D": 1,
        "703:C": 1,
        "1821:E": 2,
        "1831:E": 1,
        "1831:D": 2,
        "270:E": 1,
        "489:F": 1,
        "828:E": 1,
        "732:E": 1,
        "1159:E": 1,
        "1176:F": 1,
        "465:E": 1,
        "551:D": 1,
        "591:D": 1,
        "1183:F": 1,
        "1808:D": 2,
        "1525:E": 1,
        "1833:F": 3,
        "1833:G": 2,
        "1185:F": 1,
        "894:E": 1,
        "1828:E": 1,
        "1832:D1": 2,
        "1832:D2": 2,
        "1828:D1": 3,
        "1828:D2": 2,
        "1832:E": 2,
        "146:E": 1,
        "540:E": 1,
        "549:H": 1,
        "752:D": 1,
        "1027:E": 1,
        "333:D": 1,
        "912:D": 1,
        "876:E": 1,
        "1826:E": 1,
        "1818:E": 1,
        "1818:D": 2,
        "1823:E": 1,
        "1121:F": 1,
        "466:E": 1,
        "229:D": 1,
        "1822:G2": 3,
        "776:E": 1,
        "1806:E": 1,
        "631:D": 2,
        "990:E": 1,
        "602:D": 1,
        "851:D": 1,
        "572:C": 1,
        "349:D": 1,
        "1266:E": 1,
        "1108:E1": 1,
        "1108:E2": 1,
        "431:D": 1,
        "1598:E": 1,
        "415:E": 1,
        "1152:D": 1,
        "1816:F": 1,
        "1816:E": 1,
        "1816:D": 2,
        "1797:E": 1,
        "1797:D": 2,
        "754:D": 1,
        "1213:F": 1,
        "1814:D": 2,
        "1106:E": 1,
        "976:E": 1,
        "1811:F": 2,
        "1805:E": 1,
        "1810:E": 2,
        "789:D": 1,
        "985:D": 1,
        "1202:C": 1,
        "1167:E": 1,
        "762:C": 1,
        "525:E": 1,
        "129:D": 1,
        "1108:F": 1,
        "1798:E": 1,
        "1511:E": 1,
        "1154:F": 1,
        "1241:E": 1,
        "768:E": 1,
        "1263:E": 1,
        "507:E": 1,
        "104:E": 1,
        "764:D": 1,
        "665:E": 1,
        "1166:E": 1,
        "1484:E": 1,
        "766:E": 1,
        "466:D": 1,
        "1804:E": 1,
        "1195:E": 1,
        "689:D": 1,
        "1255:E1": 1,
        "1255:E2": 1,
        "791:D": 1,
        "577:E": 1,
        "1265:E": 1,
        "1204:D1": 1,
        "1204:D2": 1,
        "1800:G": 2,
        "1800:F": 2,
        "1606:E": 1,
        "1796:E": 1,
        "1796:D": 2,
        "1799:F": 1,
        "1799:E": 1,
        "1799:D1": 2,
        "1799:D2": 2,
        "1789:D": 2,
        "937:D": 1,
        "1000:B": 1,
        "1000:E": 1,
        "632:D": 1,
        "499:E": 1,
        "546:E": 1,
        "985:E": 1,
        "734:E": 1,
        "1300:E": 1,
        "675:C": 1,
        "1278:D": 1,
        "1332:E": 1,
        "1795:E": 2,
        "1117:D": 1,
        "1207:F": 1,
        "486:D": 1,
        "837:D": 1,
        "544:D": 1,
        "320:E": 1,
        "702:E": 1,
        "620:E": 1,
        "130:A": 1,
        "131:B": 2,
        "978:G": 1,
        "1641:D": 1,
        "1132:F": 1,
        "540:D": 1,
        "5:C": 2,
        "1157:D": 1,
        "909:C": 1,
        "873:B": 1,
        "103960:F": 1,
        "103960:D": 1,
        "103960:E": 1,
        "103960:A": 2,
        "103960:I": 2,
        "598:B": 1,
        "1364:C": 1,
        "690:A1": 1,
        "618:A": 1,
        "102961:M": 2,
        "159:C": 1,
        "518:A": 1,
        "1175:B": 1,
        "undefined:486": 1,
        "1073:B": 2,
        "1136:B": 2,
        "679:A": 2,
        "101744:A": 2,
        "104147:F": 1,
        "104147:B": 1,
        "104147:K": 1,
        "104147:A": 1,
        "584:D": 1,
        "104157:A": 3,
        "104012:A": 1,
        "104168:D1": 1,
        "104168:D2": 1,
        "104168:C3": 1,
        "913:B": 1,
        "522:A": 2,
        "1140:A": 2,
        "102035:M": 1,
        "1003:C": 1,
        "322:B": 2,
        "441:B": 1,
        "272:C": 1,
        "460:B": 2,
        "315:B": 2,
        "1732:C1": 2,
        "222:B": 1,
        "453:A": 1,
        "1718:B": 1,
        "574:A": 1,
        "1678:E": 1,
        "102966:A": 1,
        "1102:E": 1,
        "1102:D": 1,
        "706:C": 1,
        "103886:A": 1,
        "290:B": 2,
        "961:A": 2,
        "1301:C": 2,
        "902:A": 1,
        "1628:B": 1,
        "1504:C": 3,
        "548:B": 1,
        "913:C": 1,
        "991:D": 1,
        "1707:A": 1,
        "701:C": 4,
        "1539:D": 2,
        "1566:D2": 1,
        "1633:D": 2,
        "1562:C": 1,
        "1592:C": 1,
        "1593:E": 1,
        "151:C": 1,
        "908:C": 1,
        "1738:F": 1,
        "1738:G": 1,
        "1249:F": 1,
        "1681:F": 1,
        "621:E": 1,
        "1385:D": 2,
        "441:C": 1,
        "448:D": 1,
        "1328:D": 2,
        "1270:C": 1,
        "1339:C": 1,
        "1478:C": 1,
        "1516:C": 1,
        "1513:C": 1,
        "1358:C": 1,
        "1400:C": 1,
        "1670:C": 2,
        "1178:A": 1,
        "1840:F": 1,
        "1840:E": 1,
        "1830:A": 1,
        "1837:F": 1,
        "1837:E": 1,
        "1827:B2": 1,
        "1827:B1": 1,
        "1824:B2": 1,
        "1824:B1": 1,
        "1825:D1": 1,
        "1825:D2": 1,
        "1829:H": 1,
        "1817:B": 1,
        "1520:F2": 1,
        "1729:G": 1,
        "1311:E": 1,
        "1311:D": 1,
        "1294:F": 1,
        "1294:E": 1,
        "1294:D": 1,
        "1324:F": 1,
        "1328:F": 1,
        "1335:F": 1,
        "1335:E1": 1,
        "1335:E2": 1,
        "1343:F": 1,
        "1343:E": 1,
        "1360:F": 1,
        "1360:G": 1,
        "1353:E": 1,
        "1819:B": 1,
        "1820:D": 1,
        "1367:F2": 1,
        "1367:F1": 1,
        "1367:E": 1,
        "1367:D": 1,
        "1815:B": 1,
        "1374:F": 1,
        "1374:E1": 1,
        "1814:E": 1,
        "1812:H": 1,
        "1811:G1": 1,
        "1811:G2": 1,
        "1505:E": 1,
        "1505:D": 1,
        "1505:H": 1,
        "1505:G": 1,
        "1505:F": 1,
        "1505:C": 1,
        "1331:F": 1,
        "1331:H": 1,
        "1331:G": 1,
        "1331:E": 1,
        "1331:C": 1,
        "1812:I": 1,
        "1812:G": 1,
        "1808:E3": 1,
        "1808:E1": 1,
        "1808:E2": 1,
        "1808:C": 1,
        "1399:E2": 1,
        "1399:E1": 1,
        "1399:F": 1,
        "1385:F": 1,
        "1385:G": 1,
        "1385:E": 1,
        "1426:E": 1,
        "1472:G": 1,
        "1472:F": 1,
        "1409:E": 1,
        "1409:F": 1,
        "1433:F": 1,
        "1462:F": 2,
        "1462:E2": 1,
        "1801:A": 2,
        "1801:C": 1,
        "1802:E": 1,
        "1801:B": 1,
        "1776:I": 1,
        "1776:C": 1,
        "1776:J": 1,
        "1776:B": 1,
        "340:B": 1,
        "1795:G": 1,
        "1795:F": 1,
        "1781:D": 1,
        "1395:C": 2,
        "1054:A": 1,
        "28:B": 1,
        "858:A": 1,
        "undefined:403": 2,
        "475:B": 1,
        "479:E": 1,
        "577:B": 1,
        "505:C": 1,
        "204:A": 1,
        "448:C": 1,
        "1096:D": 1,
        "252:C": 1,
        "1721:F": 1,
        "171:D": 1,
        "171:E": 1,
        "290:A": 1,
        "102697:166": 1,
        "1305:B": 1,
        "1173:B": 1,
        "1215:A": 1,
        "485:C": 1,
        "996:B": 1,
        "1105:C": 1,
        "101020:B": 1,
        "103049:K": 1,
        "102680:A": 1,
        "101102:E": 1,
        "101608:A": 1,
        "101808:A": 1,
        "794:B": 1,
        "304:C": 1,
        "101856:K": 1,
        "101856:L": 1,
        "102892:1": 1,
        "102397:G": 1,
        "36:A": 1,
        "103828:E": 2,
        "101086:L": 1,
        "101086:G": 1,
        "103821:C": 2,
        "727:C": 1,
        "1167:B": 1,
        "101744:B": 2,
        "104264:B": 1,
        "805:C": 1,
        "101532:H": 1,
        "104217:C": 1,
        "104217:D": 1,
        "660:C": 1,
        "103430:B": 1,
        "701:B": 1,
        "101801:F": 1,
        "101801:L": 1,
        "101801:A": 1,
        "962:B": 2,
        "111:A": 1,
        "596:B": 1,
        "259:C": 1,
        "104081:G": 1,
        "103708:I": 1,
        "103708:H": 1,
        "1059:B": 1,
        "681:C": 1,
        "204:B": 2,
        "791:C": 1,
        "100062:C": 1,
        "777:D": 1,
        "100118:H": 1,
        "1092:F": 1,
        "219:D": 1,
        "16:E": 1,
        "1661:C": 2,
        "102770:I": 1,
        "102811:A": 1,
        "103821:H": 1,
        "103821:E": 1,
        "103821:F": 2,
        "101498:C": 1,
        "102946:A": 1,
        "103055:A": 1,
        "103061:N": 1,
        "102953:1": 1,
        "102028:A": 1,
        "100514:Q": 1,
        "100935:A": 1,
        "101343:G": 1,
        "104178:A": 1,
        "104287:A": 1,
        "104264:H": 1,
        "38:B": 1,
        "1000:C": 1,
        "1382:C1": 1,
        "922:B": 1,
        "1621:D": 1,
        "1476:C": 1,
        "907:A": 1,
        "1435:A": 1,
        "348:A": 1,
        "161:A": 1,
        "1359:C": 1,
        "876:C": 1,
        "876:B": 1,
        "817:A": 1,
        "104048:A": 1,
        "104157:C": 1,
        "808:B": 1,
        "808:G": 1,
        "820:A": 1,
        "916:A": 1,
        "1365:D": 1,
        "628:B": 1,
        "234:C": 1,
        "1465:A": 1,
        "435:B": 1,
        "104157:B": 1,
        "102961:ZA": 1,
        "203:A": 1,
        "102961:ZB": 1,
        "985:B": 1,
        "250:B": 1,
        "707:B": 1,
        "665:B": 1,
        "100187:L": 1,
        "100187:E": 1,
        "101744:H": 1,
        "101744:M": 1
    },
    "skippedUsers": [
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686759675,
            "rating": 960,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "2sonam1",
            "maxRating": 980,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1633323922,
            "maxRank": "newbie"
        },
        {
            "lastName": "Mia",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686883828,
            "city": "Mymensingh",
            "rating": 958,
            "friendOfCount": 35,
            "titlePhoto": "https://userpic.codeforces.org/1658840/title/8cdb3336aa3c0a38.jpg",
            "handle": "_Rahim_17",
            "avatar": "https://userpic.codeforces.org/1658840/avatar/8e3ea8493b3b55fc.jpg",
            "firstName": "Rahim",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1057,
            "registrationTimeSeconds": 1600779087,
            "maxRank": "newbie"
        },
        {
            "lastName": "Bandhe",
            "country": "India",
            "lastOnlineTimeSeconds": 1686847867,
            "city": "Rāj-Nāndgaon",
            "rating": 959,
            "friendOfCount": 11,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "gb123",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Gurpreet",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1054,
            "registrationTimeSeconds": 1610871398,
            "maxRank": "newbie"
        },
        {
            "lastName": "Deegutla",
            "lastOnlineTimeSeconds": 1686582414,
            "rating": 958,
            "friendOfCount": 5,
            "titlePhoto": "https://userpic.codeforces.org/2809840/title/ce16a019ee58441.jpg",
            "handle": "bunny06",
            "avatar": "https://userpic.codeforces.org/2809840/avatar/fed0c8284ebabef7.jpg",
            "firstName": "Sathwika",
            "contribution": 0,
            "organization": "University of Central Florida",
            "rank": "newbie",
            "maxRating": 1067,
            "registrationTimeSeconds": 1664482527,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686912477,
            "rating": 957,
            "friendOfCount": 16,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "Omargad",
            "maxRating": 1073,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1646762269,
            "maxRank": "newbie"
        },
        {
            "lastName": "Singh",
            "country": "India",
            "lastOnlineTimeSeconds": 1686568494,
            "city": "Lucknow",
            "rating": 956,
            "friendOfCount": 8,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "Rajvs",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Raj Vardhan",
            "contribution": 0,
            "organization": "Indian Institute of Technology Kanpur",
            "rank": "newbie",
            "maxRating": 1214,
            "registrationTimeSeconds": 1627478202,
            "maxRank": "pupil"
        },
        {
            "lastName": "Bhuiyan",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686923032,
            "city": "Brahmanbaria ",
            "rating": 956,
            "friendOfCount": 30,
            "titlePhoto": "https://userpic.codeforces.org/1569905/title/d7977c89682d9bff.jpg",
            "handle": "Bhuiyan.",
            "avatar": "https://userpic.codeforces.org/1569905/avatar/c5ea2a7b4ed7ff4e.jpg",
            "firstName": "Mojammel Haque",
            "contribution": 0,
            "organization": "Mawlana Bhashani Science and Technology University",
            "rank": "newbie",
            "maxRating": 980,
            "registrationTimeSeconds": 1593750473,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686666105,
            "rating": 956,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "lamboktulus1379",
            "maxRating": 1033,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1589172483,
            "maxRank": "newbie"
        },
        {
            "lastName": "SINGH",
            "country": "India",
            "lastOnlineTimeSeconds": 1686409944,
            "city": "Dhanbad",
            "rating": 954,
            "friendOfCount": 12,
            "titlePhoto": "https://userpic.codeforces.org/2562583/title/d68cd28a81f885de.jpg",
            "handle": "geekyanup",
            "avatar": "https://userpic.codeforces.org/2562583/avatar/191c6a47c7be791f.jpg",
            "firstName": "ANUP KUMAR",
            "contribution": 0,
            "organization": "IET Lucknow",
            "rank": "newbie",
            "maxRating": 1052,
            "registrationTimeSeconds": 1651233349,
            "maxRank": "newbie"
        },
        {
            "country": "Vietnam",
            "lastOnlineTimeSeconds": 1686904995,
            "city": "Qui Nhon",
            "rating": 955,
            "friendOfCount": 15,
            "titlePhoto": "https://userpic.codeforces.org/1268864/title/80cfda3c81537392.jpg",
            "handle": "senchi",
            "avatar": "https://userpic.codeforces.org/1268864/avatar/75253b6207f09ac6.jpg",
            "contribution": 0,
            "organization": "Le Quy Don High School, Binh Dinh",
            "rank": "newbie",
            "maxRating": 1391,
            "registrationTimeSeconds": 1570019322,
            "maxRank": "pupil"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1685027420,
            "rating": 953,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "UnclePodger",
            "maxRating": 1336,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1631176775,
            "maxRank": "pupil"
        },
        {
            "lastName": "Kliuchkovych",
            "country": "Ukraine",
            "lastOnlineTimeSeconds": 1686915565,
            "city": "Uzhhorod",
            "rating": 952,
            "friendOfCount": 3,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "rusartgame",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Artem",
            "contribution": 0,
            "organization": "Uzhhorod National University",
            "rank": "newbie",
            "maxRating": 1136,
            "registrationTimeSeconds": 1664987116,
            "maxRank": "newbie"
        },
        {
            "lastName": "Islam",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686903103,
            "city": "Mymensingh",
            "rating": 953,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "rakibislam010",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Rakibul",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1013,
            "registrationTimeSeconds": 1670446675,
            "maxRank": "newbie"
        },
        {
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686904132,
            "city": "Chittagong",
            "rating": 952,
            "friendOfCount": 36,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "i_am_eating_tle_and_wa",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1097,
            "registrationTimeSeconds": 1581653812,
            "maxRank": "newbie"
        },
        {
            "lastName": "Bhatia",
            "country": "India",
            "lastOnlineTimeSeconds": 1686825570,
            "city": "Mumbai",
            "rating": 950,
            "friendOfCount": 3,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "piyush200225",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Piyush",
            "contribution": 0,
            "organization": "Thadomal Shahani Engineering College",
            "rank": "newbie",
            "maxRating": 1025,
            "registrationTimeSeconds": 1641551464,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686303844,
            "rating": 951,
            "friendOfCount": 5,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "los_er",
            "maxRating": 1364,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1576162276,
            "email": "rofiqulislam03057@gmail.com",
            "maxRank": "pupil"
        },
        {
            "country": "China",
            "lastOnlineTimeSeconds": 1686885922,
            "city": "Xi'an",
            "rating": 949,
            "friendOfCount": 7,
            "titlePhoto": "https://userpic.codeforces.org/2728950/title/bcbdfb25d3c9eb99.jpg",
            "handle": "curtain-cpp",
            "avatar": "https://userpic.codeforces.org/2728950/avatar/7a4e204e89f15c1.jpg",
            "contribution": 0,
            "organization": "Xi’an Technological University",
            "rank": "newbie",
            "maxRating": 1017,
            "registrationTimeSeconds": 1660718077,
            "maxRank": "newbie"
        },
        {
            "lastOnlineTimeSeconds": 1686815961,
            "rating": 948,
            "friendOfCount": 3,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "PERFECTOO",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "expert this century",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1079,
            "registrationTimeSeconds": 1626991868,
            "maxRank": "newbie"
        },
        {
            "lastName": "Mondol",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686908009,
            "city": "Dhaka",
            "rating": 947,
            "friendOfCount": 40,
            "titlePhoto": "https://userpic.codeforces.org/2597303/title/15d5c857b102f5d0.jpg",
            "handle": "BrainStormer",
            "avatar": "https://userpic.codeforces.org/2597303/avatar/4b33ec1f03cad789.jpg",
            "firstName": "Md. Sakib",
            "contribution": 0,
            "organization": "Dept. of CSE, IUBAT",
            "rank": "newbie",
            "maxRating": 947,
            "registrationTimeSeconds": 1653454416,
            "maxRank": "newbie"
        },
        {
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686798735,
            "city": "Sirajganj",
            "rating": 948,
            "friendOfCount": 40,
            "titlePhoto": "https://userpic.codeforces.org/2108751/title/bf5bbc02b8ed1248.jpg",
            "handle": "Ahmad_Abdullah",
            "avatar": "https://userpic.codeforces.org/2108751/avatar/d0f2adb384cc0561.jpg",
            "contribution": 0,
            "organization": "Military Institute of Science and Technology",
            "rank": "newbie",
            "maxRating": 1163,
            "registrationTimeSeconds": 1625133202,
            "email": "ahmadabdullahcse@gmail.com",
            "maxRank": "newbie"
        },
        {
            "lastName": "Soni",
            "country": "India",
            "lastOnlineTimeSeconds": 1686709099,
            "city": "Pune",
            "rating": 946,
            "friendOfCount": 1,
            "titlePhoto": "https://userpic.codeforces.org/2470154/title/c06a11849a89b811.jpg",
            "handle": "Kapil4457",
            "avatar": "https://userpic.codeforces.org/2470154/avatar/652d36ed936cbe64.jpg",
            "firstName": "Kapil",
            "contribution": 0,
            "organization": "DYPSOE",
            "rank": "newbie",
            "maxRating": 1031,
            "registrationTimeSeconds": 1645805166,
            "maxRank": "newbie"
        },
        {
            "country": "India",
            "lastOnlineTimeSeconds": 1686581846,
            "rating": 947,
            "friendOfCount": 21,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "kodudula3",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1118,
            "registrationTimeSeconds": 1645714522,
            "email": "r.kodudula@iitg.ac.in",
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686069674,
            "rating": 946,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "aniket125",
            "maxRating": 1074,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1633425230,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686887761,
            "rating": 944,
            "friendOfCount": 7,
            "titlePhoto": "https://userpic.codeforces.org/2722076/title/c1e5287e969e4b5b.jpg",
            "rank": "newbie",
            "handle": "Vishal1431",
            "maxRating": 944,
            "avatar": "https://userpic.codeforces.org/2722076/avatar/71457463d6098463.jpg",
            "registrationTimeSeconds": 1660398052,
            "email": "vishalsingh05072003@gmail.com",
            "maxRank": "newbie"
        },
        {
            "lastName": "Tharwat",
            "country": "Egypt",
            "lastOnlineTimeSeconds": 1686723898,
            "city": "Sohag",
            "rating": 945,
            "friendOfCount": 30,
            "titlePhoto": "https://userpic.codeforces.org/2031810/title/d8065f4c13ea3a91.jpg",
            "handle": "_Tharwat_",
            "avatar": "https://userpic.codeforces.org/2031810/avatar/9dffed5c34ad7ec8.jpg",
            "firstName": "Oussama",
            "contribution": 0,
            "organization": "Nile University",
            "rank": "newbie",
            "maxRating": 1061,
            "registrationTimeSeconds": 1618867481,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686592220,
            "rating": 945,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "v6ishal",
            "maxRating": 1053,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1662288890,
            "maxRank": "newbie"
        },
        {
            "lastOnlineTimeSeconds": 1686919398,
            "rating": 942,
            "friendOfCount": 9,
            "titlePhoto": "https://userpic.codeforces.org/2531711/title/22c0a360d6ff6725.jpg",
            "handle": "Shreyansh_Raj",
            "avatar": "https://userpic.codeforces.org/2531711/avatar/9fcbe2319c1193d4.jpg",
            "firstName": "Why",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1136,
            "registrationTimeSeconds": 1649566039,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686587369,
            "rating": 941,
            "friendOfCount": 2,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "Kundan",
            "maxRating": 1032,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1636769730,
            "maxRank": "newbie"
        },
        {
            "lastName": "Sophiya",
            "country": "India",
            "lastOnlineTimeSeconds": 1686907951,
            "city": "Kanpur",
            "rating": 940,
            "friendOfCount": 8,
            "titlePhoto": "https://userpic.codeforces.org/1849066/title/d5f93f5a0f926dea.jpg",
            "handle": "unbeatable_abhi",
            "avatar": "https://userpic.codeforces.org/1849066/avatar/cf687c9d8100e760.jpg",
            "firstName": "Abhishek",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1054,
            "registrationTimeSeconds": 1609761371,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686852558,
            "rating": 937,
            "friendOfCount": 7,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "Jay_4145",
            "maxRating": 1024,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1662404406,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686625111,
            "rating": 938,
            "friendOfCount": 3,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "gargvarunjec",
            "maxRating": 989,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1663479418,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686766718,
            "rating": 939,
            "friendOfCount": 14,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "dingD0ng",
            "maxRating": 957,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1652959481,
            "maxRank": "newbie"
        },
        {
            "lastName": "Mehta",
            "country": "France",
            "lastOnlineTimeSeconds": 1686845488,
            "city": "Saint-Vital",
            "rating": 938,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/1369853/title/b27ca3e56c706b3c.jpg",
            "handle": "pars_2721",
            "avatar": "https://userpic.codeforces.org/1369853/avatar/5f80eb7fed835a44.jpg",
            "firstName": "Parit",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1198,
            "registrationTimeSeconds": 1578490304,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686844687,
            "rating": 936,
            "friendOfCount": 17,
            "titlePhoto": "https://userpic.codeforces.org/2199092/title/e494a36fe7e9a85e.jpg",
            "rank": "newbie",
            "handle": "SADMAN",
            "maxRating": 1065,
            "avatar": "https://userpic.codeforces.org/2199092/avatar/345e6d56e73c7529.jpg",
            "registrationTimeSeconds": 1631182116,
            "maxRank": "newbie"
        },
        {
            "lastOnlineTimeSeconds": 1685804157,
            "rating": 935,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/2177945/title/1451865e68e135c0.jpg",
            "handle": "Pesto",
            "avatar": "https://userpic.codeforces.org/2177945/avatar/e8fdcc7b302f9d8e.jpg",
            "firstName": "StonksCF-verify",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1046,
            "registrationTimeSeconds": 1630152067,
            "maxRank": "newbie"
        },
        {
            "lastName": "Islam",
            "country": "Germany",
            "lastOnlineTimeSeconds": 1685903303,
            "city": "Chemnitz",
            "rating": 933,
            "friendOfCount": 34,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "debug",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Atikul",
            "contribution": 0,
            "organization": "TU Chemnitz",
            "rank": "newbie",
            "maxRating": 1442,
            "registrationTimeSeconds": 1406905167,
            "maxRank": "specialist"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686853607,
            "rating": 933,
            "friendOfCount": 5,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "jeetchovatia",
            "maxRating": 933,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1646138833,
            "maxRank": "newbie"
        },
        {
            "lastName": "khan",
            "country": "Pakistan",
            "lastOnlineTimeSeconds": 1686884179,
            "city": "Loralai",
            "rating": 931,
            "friendOfCount": 67,
            "titlePhoto": "https://userpic.codeforces.org/2643646/title/220074e6df86f954.jpg",
            "handle": "Faheem_kahn",
            "avatar": "https://userpic.codeforces.org/2643646/avatar/b51b973789903a94.jpg",
            "firstName": "Faheem",
            "contribution": 0,
            "organization": "SundarSTEM Batch '25 (IOI)",
            "rank": "newbie",
            "maxRating": 1055,
            "registrationTimeSeconds": 1655722457,
            "maxRank": "newbie"
        },
        {
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686899506,
            "city": "Sylhet",
            "rating": 932,
            "friendOfCount": 83,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "KHULUD_07",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "Metropolitan University",
            "rank": "newbie",
            "maxRating": 1147,
            "registrationTimeSeconds": 1622175458,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686753995,
            "rating": 929,
            "friendOfCount": 16,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "subha_14",
            "maxRating": 1055,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1650285803,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686851859,
            "rating": 927,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "amit_tp.02",
            "maxRating": 927,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1680954698,
            "maxRank": "newbie"
        },
        {
            "country": "China",
            "lastOnlineTimeSeconds": 1686576307,
            "city": "Yantai",
            "rating": 927,
            "friendOfCount": 11,
            "titlePhoto": "https://userpic.codeforces.org/2513702/title/c22944eb5c5149d6.jpg",
            "handle": "LDUyuquan",
            "avatar": "https://userpic.codeforces.org/2513702/avatar/cdfb1094e0a28756.jpg",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 990,
            "registrationTimeSeconds": 1648380081,
            "maxRank": "newbie"
        },
        {
            "lastName": "Ahmmed Babu",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686917649,
            "city": "Chittagong",
            "rating": 926,
            "friendOfCount": 21,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "blind_eyes",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Tofayel",
            "contribution": 0,
            "organization": "Chittagong University of Eng and Tech",
            "rank": "newbie",
            "maxRating": 1179,
            "registrationTimeSeconds": 1582218806,
            "maxRank": "newbie"
        },
        {
            "country": "Anguilla",
            "lastOnlineTimeSeconds": 1686583047,
            "rating": 924,
            "friendOfCount": 1,
            "titlePhoto": "https://userpic.codeforces.org/2846835/title/356893b49781c2bd.jpg",
            "handle": "ErenYeager.",
            "avatar": "https://userpic.codeforces.org/2846835/avatar/6b6a6846778645f7.jpg",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1061,
            "registrationTimeSeconds": 1665880166,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686907005,
            "rating": 924,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "vinaygundam123",
            "maxRating": 924,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1667039653,
            "maxRank": "newbie"
        },
        {
            "lastName": "Gamal",
            "country": "Egypt",
            "lastOnlineTimeSeconds": 1686889673,
            "city": "Banī Suwayf",
            "rating": 921,
            "friendOfCount": 49,
            "titlePhoto": "https://userpic.codeforces.org/1839253/title/e35a9cd5fae32ce.jpg",
            "handle": "Ammar_Hammad",
            "avatar": "https://userpic.codeforces.org/1839253/avatar/607f392cdce171e4.jpg",
            "firstName": "Ammar",
            "contribution": 0,
            "organization": "FCAI - BSU",
            "rank": "newbie",
            "maxRating": 1099,
            "registrationTimeSeconds": 1608987260,
            "maxRank": "newbie"
        },
        {
            "country": "Kazakhstan",
            "lastOnlineTimeSeconds": 1686905984,
            "city": "Ust-Kamenogorsk",
            "rating": 922,
            "friendOfCount": 20,
            "titlePhoto": "https://userpic.codeforces.org/2533845/title/3c63d338637fa94b.jpg",
            "handle": "Lalapalaor",
            "avatar": "https://userpic.codeforces.org/2533845/avatar/9e02cd0c6ec34824.jpg",
            "firstName": "Raiymbek",
            "contribution": 0,
            "organization": "Ukg Ktl",
            "rank": "newbie",
            "maxRating": 957,
            "registrationTimeSeconds": 1649746825,
            "maxRank": "newbie"
        },
        {
            "country": "India",
            "lastOnlineTimeSeconds": 1684517897,
            "rating": 923,
            "friendOfCount": 8,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "stymjha786",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "Delhi Technological University",
            "rank": "newbie",
            "maxRating": 1067,
            "registrationTimeSeconds": 1641721110,
            "maxRank": "newbie"
        },
        {
            "country": "India",
            "lastOnlineTimeSeconds": 1686889410,
            "city": "Patna",
            "rating": 920,
            "friendOfCount": 10,
            "titlePhoto": "https://userpic.codeforces.org/2626851/title/4d667d83d7a4d249.jpg",
            "handle": "alok64",
            "avatar": "https://userpic.codeforces.org/2626851/avatar/bbe45f87908f3e37.jpg",
            "contribution": 0,
            "organization": "NIT Agartala",
            "rank": "newbie",
            "maxRating": 1064,
            "registrationTimeSeconds": 1654849262,
            "maxRank": "newbie"
        },
        {
            "lastName": "Popale",
            "country": "India",
            "lastOnlineTimeSeconds": 1686923931,
            "city": "Aurangābād",
            "rating": 921,
            "friendOfCount": 1,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "naren_007",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Naren",
            "contribution": 0,
            "organization": "DIEMS, Aurangabad",
            "rank": "newbie",
            "maxRating": 977,
            "registrationTimeSeconds": 1647454740,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686770429,
            "rating": 920,
            "friendOfCount": 8,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "arun_kr",
            "maxRating": 1006,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1648486465,
            "maxRank": "newbie"
        },
        {
            "lastName": "Haque",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686890831,
            "city": "Dhaka",
            "rating": 919,
            "friendOfCount": 8,
            "titlePhoto": "https://userpic.codeforces.org/2006272/title/7ff652b2e1f3e37c.jpg",
            "handle": "Slave_Of_Allah",
            "avatar": "https://userpic.codeforces.org/2006272/avatar/52ab76235c589807.jpg",
            "firstName": "Nazmul",
            "contribution": 0,
            "organization": "CSE,RUET",
            "rank": "newbie",
            "maxRating": 919,
            "registrationTimeSeconds": 1616818573,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686589788,
            "rating": 917,
            "friendOfCount": 1,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "thik_h_phir",
            "maxRating": 1081,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1632382091,
            "maxRank": "newbie"
        },
        {
            "country": "Egypt",
            "lastOnlineTimeSeconds": 1686856910,
            "city": "Al Mansurah",
            "rating": 916,
            "friendOfCount": 47,
            "titlePhoto": "https://userpic.codeforces.org/2290924/title/65e556401639f5d6.jpg",
            "handle": "Salah.Saad",
            "avatar": "https://userpic.codeforces.org/2290924/avatar/1585048f04b6e3ca.jpg",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 916,
            "registrationTimeSeconds": 1635544372,
            "email": "Kassabksab@gmail.com",
            "maxRank": "newbie"
        },
        {
            "country": "India",
            "lastOnlineTimeSeconds": 1686842154,
            "rating": 917,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "RitikaPahwa",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1029,
            "registrationTimeSeconds": 1619518222,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686865089,
            "rating": 917,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "k163",
            "maxRating": 1098,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1667138070,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686821369,
            "rating": 914,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "madhurank_hegde",
            "maxRating": 935,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1668789717,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686845290,
            "rating": 912,
            "friendOfCount": 23,
            "titlePhoto": "https://userpic.codeforces.org/1915663/title/796d1b338ed82dd5.jpg",
            "rank": "newbie",
            "handle": "Zetsu_24",
            "maxRating": 912,
            "avatar": "https://userpic.codeforces.org/1915663/avatar/2e19f2c60e3741de.jpg",
            "registrationTimeSeconds": 1611303663,
            "maxRank": "newbie"
        },
        {
            "country": "India",
            "lastOnlineTimeSeconds": 1685208341,
            "city": "Kolkata",
            "rating": 912,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "adi0104",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "BITS Pilani Goa Campus",
            "rank": "newbie",
            "maxRating": 912,
            "registrationTimeSeconds": 1670419893,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686739026,
            "rating": 911,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "Parameshwar_Kaveti",
            "maxRating": 1124,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1616343939,
            "maxRank": "newbie"
        },
        {
            "country": "Egypt",
            "lastOnlineTimeSeconds": 1686905087,
            "rating": 908,
            "friendOfCount": 35,
            "titlePhoto": "https://userpic.codeforces.org/2258651/title/b2cdbad13b43cff4.jpg",
            "handle": "Alyaa_R116",
            "avatar": "https://userpic.codeforces.org/2258651/avatar/128664763e0c44c4.jpg",
            "contribution": 0,
            "organization": "Modern Academy",
            "rank": "newbie",
            "maxRating": 917,
            "registrationTimeSeconds": 1634136355,
            "maxRank": "newbie"
        },
        {
            "lastName": "Verma",
            "country": "India",
            "lastOnlineTimeSeconds": 1686727615,
            "city": "Jodhpur",
            "rating": 906,
            "friendOfCount": 10,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "hverma982866",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Himanshu",
            "contribution": 0,
            "organization": "IIT BHU Varanasi",
            "rank": "newbie",
            "maxRating": 1111,
            "registrationTimeSeconds": 1607949687,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1685414992,
            "rating": 901,
            "friendOfCount": 32,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "Sino_2009",
            "maxRating": 967,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1651633970,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686850844,
            "organization": "",
            "rating": 902,
            "friendOfCount": 2,
            "titlePhoto": "https://userpic.codeforces.org/2651164/title/ad7671fd15ed56f3.jpg",
            "rank": "newbie",
            "handle": "xtraglitch",
            "maxRating": 1007,
            "avatar": "https://userpic.codeforces.org/2651164/avatar/1e74e940df6e7bdd.jpg",
            "registrationTimeSeconds": 1656167124,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1685896768,
            "rating": 899,
            "friendOfCount": 11,
            "titlePhoto": "https://userpic.codeforces.org/2924351/title/289edcaa5c3712bf.jpg",
            "rank": "newbie",
            "handle": "CCSparrow",
            "maxRating": 996,
            "avatar": "https://userpic.codeforces.org/2924351/avatar/5a90b2a840c26dcf.jpg",
            "registrationTimeSeconds": 1669389915,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686145745,
            "rating": 891,
            "friendOfCount": 5,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "ramitg254",
            "maxRating": 904,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1644822915,
            "maxRank": "newbie"
        },
        {
            "lastName": "Mizbah Uddin",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686897421,
            "city": "Chittagong",
            "rating": 890,
            "friendOfCount": 16,
            "titlePhoto": "https://userpic.codeforces.org/1404029/title/472372a8933aad3f.jpg",
            "handle": "Mizbah01",
            "avatar": "https://userpic.codeforces.org/1404029/avatar/840d5897a8fd0126.jpg",
            "firstName": "Md",
            "contribution": 0,
            "organization": "University of Chittagong",
            "rank": "newbie",
            "maxRating": 1366,
            "registrationTimeSeconds": 1581412958,
            "maxRank": "pupil"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686855665,
            "rating": 888,
            "friendOfCount": 15,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "agrawal.24",
            "maxRating": 956,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1642780780,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686806159,
            "organization": "",
            "rating": 889,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/2551450/title/d0ec6a6d3f451bf4.jpg",
            "rank": "newbie",
            "handle": "satyam1609",
            "maxRating": 940,
            "avatar": "https://userpic.codeforces.org/2551450/avatar/3dcefb68e74132b4.jpg",
            "registrationTimeSeconds": 1650730120,
            "maxRank": "newbie"
        },
        {
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686888610,
            "rating": 887,
            "friendOfCount": 17,
            "titlePhoto": "https://userpic.codeforces.org/1203361/title/a7984c03189d75b1.jpg",
            "handle": "Zihad10",
            "avatar": "https://userpic.codeforces.org/1203361/avatar/792a7261720822a5.jpg",
            "contribution": 0,
            "organization": "Jagannath University",
            "rank": "newbie",
            "maxRating": 901,
            "registrationTimeSeconds": 1564255390,
            "maxRank": "newbie"
        },
        {
            "lastName": "Kumar",
            "country": "India",
            "lastOnlineTimeSeconds": 1686822525,
            "rating": 886,
            "friendOfCount": 12,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "kirtimaan_02",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Kirtimaan",
            "contribution": 0,
            "organization": "IIT Roorkee",
            "rank": "newbie",
            "maxRating": 937,
            "registrationTimeSeconds": 1640258336,
            "maxRank": "newbie"
        },
        {
            "lastName": "Dewan",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686588701,
            "city": "Rajshahi",
            "rating": 886,
            "friendOfCount": 23,
            "titlePhoto": "https://userpic.codeforces.org/2680801/title/cd21f23a71766021.jpg",
            "handle": "BigPapa",
            "avatar": "https://userpic.codeforces.org/2680801/avatar/c54973292cce35d5.jpg",
            "firstName": "Foyez Ahmed",
            "contribution": 0,
            "organization": "Rajshahi University of Engineering and Technology",
            "rank": "newbie",
            "maxRating": 985,
            "registrationTimeSeconds": 1658057593,
            "maxRank": "newbie"
        },
        {
            "lastName": "Amane",
            "country": "Japan",
            "lastOnlineTimeSeconds": 1686641704,
            "rating": 883,
            "friendOfCount": 3,
            "titlePhoto": "https://userpic.codeforces.org/2026670/title/fc20f377336d5aa.jpg",
            "handle": "Second_Kira",
            "avatar": "https://userpic.codeforces.org/2026670/avatar/c570e75ace32d55c.jpg",
            "firstName": "Misa",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1504,
            "registrationTimeSeconds": 1618551197,
            "maxRank": "specialist"
        },
        {
            "lastName": "Patel",
            "country": "India",
            "lastOnlineTimeSeconds": 1685898208,
            "city": "Shahdol",
            "rating": 882,
            "friendOfCount": 8,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "saurabhpatel18216",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Saurabh",
            "contribution": 0,
            "organization": "IIT Kharagpur",
            "rank": "newbie",
            "maxRating": 1048,
            "registrationTimeSeconds": 1650952831,
            "maxRank": "newbie"
        },
        {
            "lastName": "Kevra",
            "country": "Belarus",
            "lastOnlineTimeSeconds": 1686903717,
            "city": "Iwye",
            "rating": 880,
            "friendOfCount": 5,
            "titlePhoto": "https://userpic.codeforces.org/2084862/title/1c18b7f7592a5c7.jpg",
            "handle": "valen0k",
            "avatar": "https://userpic.codeforces.org/2084862/avatar/c22d35090d62384c.jpg",
            "firstName": "Valentin",
            "contribution": 0,
            "organization": "Gymnasium №1, Ivye",
            "rank": "newbie",
            "maxRating": 1076,
            "registrationTimeSeconds": 1623049462,
            "email": "vmkzy1@gmail.com",
            "maxRank": "newbie"
        },
        {
            "country": "Peru",
            "lastOnlineTimeSeconds": 1686848727,
            "city": "Cusco",
            "rating": 878,
            "friendOfCount": 6,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "Gorrion_",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "UNSAAC",
            "rank": "newbie",
            "maxRating": 1113,
            "registrationTimeSeconds": 1654469336,
            "maxRank": "newbie"
        },
        {
            "lastName": "hridoy",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686909811,
            "city": "Kishorganj",
            "rating": 879,
            "friendOfCount": 29,
            "titlePhoto": "https://userpic.codeforces.org/1544479/title/8cede7ee70730596.jpg",
            "handle": "me_oy",
            "avatar": "https://userpic.codeforces.org/1544479/avatar/9aebadd3a90de2f5.jpg",
            "firstName": "mehedi",
            "contribution": 0,
            "organization": "Noakhali Science and Technology University",
            "rank": "newbie",
            "maxRating": 1072,
            "registrationTimeSeconds": 1591366543,
            "maxRank": "newbie"
        },
        {
            "country": "India",
            "lastOnlineTimeSeconds": 1686727229,
            "city": "Mumbai",
            "rating": 876,
            "friendOfCount": 2,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "viking_01",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "Dwarkadas J. Sanghvi College of Engineering",
            "rank": "newbie",
            "maxRating": 1062,
            "registrationTimeSeconds": 1652262896,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686846073,
            "organization": "IIT Roorkee",
            "rating": 875,
            "friendOfCount": 17,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "_div_",
            "maxRating": 1121,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1665658686,
            "maxRank": "newbie"
        },
        {
            "lastName": "Farvez",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686856684,
            "city": "Dhaka",
            "rating": 875,
            "friendOfCount": 11,
            "titlePhoto": "https://userpic.codeforces.org/2391204/title/8874a88d40e38c5c.jpg",
            "handle": "Capt_Farvez",
            "avatar": "https://userpic.codeforces.org/2391204/avatar/d5b988612ab92bb9.jpg",
            "firstName": "Anowar Hossen",
            "contribution": 0,
            "organization": "University of Asia Pacific",
            "rank": "newbie",
            "maxRating": 1037,
            "registrationTimeSeconds": 1641058921,
            "maxRank": "newbie"
        },
        {
            "country": "India",
            "lastOnlineTimeSeconds": 1686883210,
            "rating": 874,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "rao_anil",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 977,
            "registrationTimeSeconds": 1653633055,
            "maxRank": "newbie"
        },
        {
            "lastName": "Mahmud",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686887360,
            "city": "Netrakona",
            "rating": 873,
            "friendOfCount": 29,
            "titlePhoto": "https://userpic.codeforces.org/1719976/title/da3ff1055899a50f.jpg",
            "handle": "Thauhid_13",
            "avatar": "https://userpic.codeforces.org/1719976/avatar/684f9656c949a130.jpg",
            "firstName": "Thauhid",
            "contribution": 0,
            "organization": "Islamic University,Bangladesh",
            "rank": "newbie",
            "maxRating": 976,
            "registrationTimeSeconds": 1603780342,
            "email": "tauhimahmud@gmail.com",
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686897060,
            "rating": 873,
            "friendOfCount": 26,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "lishasingh22",
            "maxRating": 1056,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1661791948,
            "maxRank": "newbie"
        },
        {
            "lastName": "Chu",
            "country": "China",
            "lastOnlineTimeSeconds": 1686893797,
            "city": "Taiyuan",
            "rating": 873,
            "friendOfCount": 3,
            "titlePhoto": "https://userpic.codeforces.org/3003543/title/15c263a594e50447.jpg",
            "handle": "occj",
            "avatar": "https://userpic.codeforces.org/3003543/avatar/4b086f695755bca4.jpg",
            "firstName": "jie",
            "contribution": 0,
            "organization": "Taiyuan University of Technology",
            "rank": "newbie",
            "maxRating": 873,
            "registrationTimeSeconds": 1672809462,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686598649,
            "rating": 871,
            "friendOfCount": 0,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "meh_rahman83",
            "maxRating": 871,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1646010228,
            "maxRank": "newbie"
        },
        {
            "lastName": "Pavel",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686842578,
            "city": "Dhaka",
            "rating": 872,
            "friendOfCount": 41,
            "titlePhoto": "https://userpic.codeforces.org/2540939/title/a118080defcee886.jpg",
            "handle": "farhan_pavel3",
            "avatar": "https://userpic.codeforces.org/2540939/avatar/4ae73acf7c3f029c.jpg",
            "firstName": "Farhan",
            "contribution": 0,
            "organization": "Jahangirnagar University",
            "rank": "newbie",
            "maxRating": 1151,
            "registrationTimeSeconds": 1650130705,
            "email": "farhanpavel3@gmail.com",
            "maxRank": "newbie"
        },
        {
            "lastName": "Sakil",
            "country": "Bangladesh",
            "lastOnlineTimeSeconds": 1686922965,
            "city": "Comilla",
            "rating": 870,
            "friendOfCount": 55,
            "titlePhoto": "https://userpic.codeforces.org/808447/title/100aea4835de1de7.jpg",
            "handle": "Tanvir__Sakil",
            "avatar": "https://userpic.codeforces.org/808447/avatar/8afef2875c30fe03.jpg",
            "firstName": "Tanvir Mohammed",
            "contribution": 0,
            "organization": "Comilla University",
            "rank": "newbie",
            "maxRating": 1389,
            "registrationTimeSeconds": 1538148936,
            "email": "tanbirshakil18@gmail.com",
            "maxRank": "pupil"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686903491,
            "rating": 871,
            "friendOfCount": 9,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "shamimahmed82245",
            "maxRating": 1107,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1584424970,
            "maxRank": "newbie"
        },
        {
            "lastName": "Ali",
            "country": "Egypt",
            "lastOnlineTimeSeconds": 1686922289,
            "city": "Cairo",
            "rating": 869,
            "friendOfCount": 23,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "handle": "Suhail_Ali",
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "firstName": "Suhail",
            "contribution": 0,
            "organization": "Ahram Canadian University",
            "rank": "newbie",
            "maxRating": 1102,
            "registrationTimeSeconds": 1579710334,
            "email": "suhailalidev@gmail.com",
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686908636,
            "rating": 868,
            "friendOfCount": 2,
            "titlePhoto": "https://userpic.codeforces.org/2670083/title/f597c68fc389542b.jpg",
            "rank": "newbie",
            "handle": "AkshitIITR",
            "maxRating": 988,
            "avatar": "https://userpic.codeforces.org/2670083/avatar/ec86d15d759904dc.jpg",
            "registrationTimeSeconds": 1657451986,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1686914731,
            "rating": 868,
            "friendOfCount": 22,
            "titlePhoto": "https://userpic.codeforces.org/2066827/title/846c9619bb17ad20.jpg",
            "rank": "newbie",
            "handle": "killbox",
            "maxRating": 886,
            "avatar": "https://userpic.codeforces.org/2066827/avatar/92dd3045ad0c4a3f.jpg",
            "registrationTimeSeconds": 1621617805,
            "maxRank": "newbie"
        },
        {
            "lastName": "BARAIYA",
            "country": "India",
            "lastOnlineTimeSeconds": 1686843972,
            "city": "Gandhinagar",
            "rating": 867,
            "friendOfCount": 7,
            "titlePhoto": "https://userpic.codeforces.org/2557296/title/1ac6f8c5916cca5e.jpg",
            "handle": "LakshitB086",
            "avatar": "https://userpic.codeforces.org/2557296/avatar/63f4c60729f040ec.jpg",
            "firstName": "LAKSHIT",
            "contribution": 0,
            "organization": "",
            "rank": "newbie",
            "maxRating": 1037,
            "registrationTimeSeconds": 1651061245,
            "maxRank": "newbie"
        },
        {
            "contribution": 0,
            "lastOnlineTimeSeconds": 1685335992,
            "rating": 866,
            "friendOfCount": 4,
            "titlePhoto": "https://userpic.codeforces.org/no-title.jpg",
            "rank": "newbie",
            "handle": "dagonslayer",
            "maxRating": 1074,
            "avatar": "https://userpic.codeforces.org/no-avatar.jpg",
            "registrationTimeSeconds": 1619673095,
            "maxRank": "newbie"
        }
    ]
}